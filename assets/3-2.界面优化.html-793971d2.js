import{_ as i,r as o,o as l,c,a as n,b as a,d as s,e}from"./app-2b89a278.js";const r="/front-doc/img/vue/vuepress/3-2-1.jpg",u="/front-doc/img/vue/vuepress/3-2-2.jpg",d={},k=e(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>这些内容都是对象主题的一些配置。</p><p>详见：配置中心</p></div><h2 id="深色模式" tabindex="-1"><a class="header-anchor" href="#深色模式" aria-hidden="true">#</a> 深色模式</h2><p>在深色模式下，页面会使用深色背景与浅色文字。</p><h4 id="_1-开启" tabindex="-1"><a class="header-anchor" href="#_1-开启" aria-hidden="true">#</a> 1. 开启</h4><p>默认就是开启的，可以设置为enable关闭</p><h4 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置" aria-hidden="true">#</a> 2. 配置</h4><p>在主题配置文件中进行配置，可选的值如下：</p><ul><li>&quot;switch&quot;: 在深色模式，浅色模式和自动之间切换 (默认)</li><li>&quot;toggle&quot;: 在深色模式和浅色模式之间切换</li><li>&quot;auto&quot;: 自动根据用户设备主题或当前时间决定是否应用深色模式</li><li>&quot;enable&quot;: 强制深色模式</li><li>&quot;disable&quot;: 全局禁用深色模式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//src&gt;.vuepress&gt;theme.ts</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hopeTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token literal-property property">darkmode</span><span class="token operator">:</span><span class="token string">&quot;toggle&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主题色" tabindex="-1"><a class="header-anchor" href="#主题色" aria-hidden="true">#</a> 主题色</h2><p>主题允许你自定义主题颜色，甚至提供选择器。</p><h4 id="_1-设置默认主题色" tabindex="-1"><a class="header-anchor" href="#_1-设置默认主题色" aria-hidden="true">#</a> 1. 设置默认主题色</h4><p>在 .vuepress/styles/palette.scss 中设置站点的默认主题颜色：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>$theme<span class="token operator">-</span>color<span class="token operator">:</span> #f00<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-主题色选择器" tabindex="-1"><a class="header-anchor" href="#_2-主题色选择器" aria-hidden="true">#</a> 2. 主题色选择器</h4><p>需要按照 <code>{ 颜色名1: 颜色值, 颜色名2: 颜色值, ... }</code>的格式在主题选项中配置 themeColor:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> hopeTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-theme-hope&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token function">hopeTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">themeColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">blue</span><span class="token operator">:</span> <span class="token string">&quot;#2196f3&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">red</span><span class="token operator">:</span> <span class="token string">&quot;#f26d6d&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">green</span><span class="token operator">:</span> <span class="token string">&quot;#3eaf7c&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">orange</span><span class="token operator">:</span> <span class="token string">&quot;#fb9b5f&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码主题" tabindex="-1"><a class="header-anchor" href="#代码主题" aria-hidden="true">#</a> 代码主题</h2><p>默认的主题是one-dark，这很棒。</p><p>不过有个小bug，当采用代码分组时，配置的主题会失效，因此还是手动指定吧</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hopeTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token literal-property property">prismjs</span><span class="token operator">:</span><span class="token punctuation">{</span>
          <span class="token literal-property property">light</span><span class="token operator">:</span><span class="token string">&quot;one-dark&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">dark</span><span class="token operator">:</span><span class="token string">&quot;one-light&quot;</span>
        <span class="token punctuation">}</span>    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="图标支持" tabindex="-1"><a class="header-anchor" href="#图标支持" aria-hidden="true">#</a> 图标支持</h2><p>可以使用 iconfont、iconify 和 fontawesome 为项目添加图标，可以设置自己的图标资源。同时，png/svg 格式的图标也是支持的。可以使用完整 URL 或路径名来添加图标。</p><p>一般采用iconfont格式。</p><h4 id="_1-图标资源" tabindex="-1"><a class="header-anchor" href="#_1-图标资源" aria-hidden="true">#</a> 1. 图标资源</h4>`,25),v={href:"https://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://theme-hope.vuejs.press/zh/guide/interface/icon.html#%E6%B5%8F%E8%A7%88%E5%9B%BE%E6%A0%87",target:"_blank",rel:"noopener noreferrer"},m=e(`<h4 id="_2-图标使用的方式" tabindex="-1"><a class="header-anchor" href="#_2-图标使用的方式" aria-hidden="true">#</a> 2. 图标使用的方式</h4><ul><li>内置图标：直接通过icon名字（复制图标）使用内置的图标</li><li>第三方图标：导入第三方图标，进行使用</li></ul><h4 id="_3-图标使用位置" tabindex="-1"><a class="header-anchor" href="#_3-图标使用位置" aria-hidden="true">#</a> 3. 图标使用位置</h4><h5 id="_3-1-页面" tabindex="-1"><a class="header-anchor" href="#_3-1-页面" aria-hidden="true">#</a> 3.1 页面</h5><p>在 frontmatter 中设置 icon，此图标将用于路径导航、页面标题、导航栏生成项、侧边栏生成项、页面导航等</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">icon</span><span class="token punctuation">:</span> activity <span class="token comment"># 这是页面的图标</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="3-2-1" tabindex="0" loading="lazy"><figcaption>3-2-1</figcaption></figure><h5 id="_3-2-导航栏" tabindex="-1"><a class="header-anchor" href="#_3-2-导航栏" aria-hidden="true">#</a> 3.2 导航栏</h5><p>导航栏是在src/.vuepress/navbar/*.ts中进行配置的，其中的icon配置项就是用来配置导航栏上的图标的</p><p>如下：设置的是header上导航栏的图标。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> 
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;案例&quot;</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;discover&quot;</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&quot;/zh/demo/&quot;</span> 
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3-侧边栏" tabindex="-1"><a class="header-anchor" href="#_3-3-侧边栏" aria-hidden="true">#</a> 3.3 侧边栏</h5><p>侧边栏是在src/.vuepress/navbar/*.ts中进行配置的，其中的icon配置项就是用来配置导航栏上的图标的。不设置的话，默认就跟导航栏里设置的一样。</p><p>一般不设置。</p><h5 id="_3-4-主页" tabindex="-1"><a class="header-anchor" href="#_3-4-主页" aria-hidden="true">#</a> 3.4 主页</h5><p>在功能项中设置 icon，指的是features里的icon选项</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">features</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> Markdown Enhance
        <span class="token key atrule">icon</span><span class="token punctuation">:</span> markdown
        <span class="token key atrule">details</span><span class="token punctuation">:</span> Add align<span class="token punctuation">,</span> sup/sub script<span class="token punctuation">,</span>
        <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//theme<span class="token punctuation">-</span>hope.vuejs.press/guide/markdown/
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-markdown-中使用图表" tabindex="-1"><a class="header-anchor" href="#_4-markdown-中使用图表" aria-hidden="true">#</a> 4. markdown 中使用图表</h4><p>可以使用 <code>&lt;HopeIcon /&gt;</code> 组件在 markdown 中添加图标。</p><ul><li>icon 属性接受与其他 icon 选项相同的内容，即：字体类名和图像 url</li><li>color 属性接受一个 css 颜色值，它将用作图标颜色（可选）</li><li>size 属性接受一个 css 大小值，该值将用作图标大小（可选）</li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HopeIcon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>folder-vuepress<span class="token punctuation">&quot;</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HopeIcon</span> <span class="token attr-name">icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/logo.svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4rem<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,21),b=n("br",null,null,-1),g=e('<h4 id="_5-全局配置图标资源" tabindex="-1"><a class="header-anchor" href="#_5-全局配置图标资源" aria-hidden="true">#</a> 5. 全局配置图标资源</h4><p>可以通过 iconAssets 和 iconPrefix 全局设置图标资源 url 和图标前缀</p><p>PS：这里的图标资源值得是url资源而不是本地的图标资源，因此常需要和阿里巴巴的 iconfont配合使用。</p><h5 id="_5-1-使用步骤" tabindex="-1"><a class="header-anchor" href="#_5-1-使用步骤" aria-hidden="true">#</a> 5.1 使用步骤</h5><ul><li>登录阿里巴巴iconfont，创建项目，添加所需的图标</li><li>点击 <code>Font class</code>，生成图标资源链接</li><li>将 图标资源链接复制到theme.js配置文件</li><li>复制图标的名字使用图标</li></ul><figure><img src="'+u+`" alt="3-2-2" tabindex="0" loading="lazy"><figcaption>3-2-2</figcaption></figure><h5 id="_5-2-配置图标资源" tabindex="-1"><a class="header-anchor" href="#_5-2-配置图标资源" aria-hidden="true">#</a> 5.2 配置图标资源</h5><p>在主题配置文件theme.js中可以配置图标资源。</p><ul><li>iconAssets：图标的类型 <ul><li>关键字iconfont：可以使用内置的iconfont</li><li>阿里巴巴css链接：可以使用阿里巴巴的图标资源</li><li>数组：包含以上内容的数组，也就是可以添加多个资源。</li></ul></li><li>iconPrefix：图标名字的前置，一般不用设置，有小bug。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token comment">// iconAssets: &quot;iconfont&quot;,</span>
    <span class="token comment">// iconPrefix:&quot;icon&quot;,</span>
  <span class="token literal-property property">iconAssets</span><span class="token operator">:</span><span class="token punctuation">[</span>
    <span class="token comment">//common</span>
    <span class="token string">&quot;https://at.alicdn.com/t/c/font_4012534_pkkav615qoe.css?spm=a313x.7781069.1998910419.52&amp;file=font_4012534_pkkav615qoe.css&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//other</span>
    <span class="token string">&quot;https://at.alicdn.com/t/c/font_4012543_ylrdf9cjue.css?spm=a313x.7781069.1998910419.89&amp;file=font_4012543_ylrdf9cjue.css&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">//item</span>
    <span class="token string">&quot;https://at.alicdn.com/t/c/font_4063604_i8ceqjaip8j.css?spm=a313x.7781069.1998910419.52&amp;file=font_4063604_i8ceqjaip8j.css&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-注意事项" tabindex="-1"><a class="header-anchor" href="#_5-3-注意事项" aria-hidden="true">#</a> 5.3 注意事项</h5><ul><li>阿里的图标资源是支持彩色的，但一个项目只支持40个图标，超过40个，就不支持彩色了，这也是为什么要创建多个项目。</li><li>当引入多个阿里巴巴图标资源链接时，可能会有图标命名冲突而失效。</li></ul>`,12);function f(_,q){const t=o("ExternalLinkIcon"),p=o("HopeIcon");return l(),c("div",null,[k,n("ul",null,[n("li",null,[a("一般采用阿里巴巴的图标库:"),n("a",v,[a("iconfont"),s(t)])]),n("li",null,[a("hope也可以用一些内置的"),n("a",h,[a("关键字图标"),s(t)]),a("，可以直接复制使用")])]),m,s(p,{icon:"folder-vuepress",color:"red"}),b,s(p,{icon:"/logo.svg",size:"4rem"}),g])}const x=i(d,[["render",f],["__file","3-2.界面优化.html.vue"]]);export{x as default};
