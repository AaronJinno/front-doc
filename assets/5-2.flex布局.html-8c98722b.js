import{_ as s,o as a,c as n,e}from"./app-f9b28035.js";const i="/front-doc/img/basic/css/5-2-1.jpg",t="/front-doc/img/basic/css/5-2-2.jpg",l="/front-doc/img/basic/css/5-2-3.jpg",p="/front-doc/img/basic/css/5-2-4.jpg",c="/front-doc/img/basic/css/5-2-5.jpg",o="/front-doc/img/basic/css/5-2-6.jpg",r="/front-doc/img/basic/css/5-2-7.jpg",d="/front-doc/img/basic/css/5-2-8.jpg",u="/front-doc/img/basic/css/5-2-9.jpg",f="/front-doc/img/basic/css/5-2-10.jpg",h={},x=e(`<h2 id="i-flex布局介绍" tabindex="-1"><a class="header-anchor" href="#i-flex布局介绍" aria-hidden="true">#</a> Ⅰ. flex布局介绍</h2><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。flexbox由伸缩容器和伸缩项目组成，任何一个容器都可以指定为Flex布局。</p><ul><li>伸缩容器：设置了 Flex 布局的元素称为伸缩（flex）容器</li><li>伸缩项目：伸缩容器的所有子元素都将变成flex文档流，称为伸缩项目。</li></ul><p>注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。</p><h4 id="_2-定义伸缩容器" tabindex="-1"><a class="header-anchor" href="#_2-定义伸缩容器" aria-hidden="true">#</a> 2. 定义伸缩容器</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 前者是块状元素，后者是行内元素 */</span>
<span class="token property">display</span><span class="token punctuation">:</span>flex | inline-flex<span class="token punctuation">;</span> 

<span class="token selector">.box</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span>flex<span class="token punctuation">;</span>  //块状元素
  <span class="token property">display</span><span class="token punctuation">:</span>inline-flex<span class="token punctuation">;</span>//行内元素
  <span class="token property">display</span><span class="token punctuation">:</span>-webkit-flex<span class="token punctuation">;</span>//safari浏览器
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-flex流" tabindex="-1"><a class="header-anchor" href="#_3-flex流" aria-hidden="true">#</a> 3. flex流</h4><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。</p><p>主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</p><p>伸缩项目默认是沿着主轴（main axis）从主轴起点（main-start）到主轴终点（main-end）排列；占据的交叉空间叫做cross size。</p><figure><img src="`+i+'" alt="5-2-1" tabindex="0" loading="lazy"><figcaption>5-2-1</figcaption></figure><ul><li>主轴（main axis）：伸缩项目主要沿着这条轴进行布局</li><li>主轴起点/终点（main start/main end）：伸缩项目放置在伸缩容器内从主轴的起点位置向终点位置排列</li><li>交叉轴（cross axis）：垂直于主轴</li><li>交叉轴起点/终点（cross start/crossend）：伸缩行的配置从容器的交叉轴起点边开始到终点边结束。</li><li>主轴尺寸/侧轴尺寸（main size/cross size）：单个伸缩项目的宽度（占据的主轴空间main size）和高度（占据交叉轴的空间cross size）。</li></ul><h2 id="ii-容器的属性" tabindex="-1"><a class="header-anchor" href="#ii-容器的属性" aria-hidden="true">#</a> Ⅱ. 容器的属性</h2><h4 id="_1-flex-direction-定义伸缩的方向" tabindex="-1"><a class="header-anchor" href="#_1-flex-direction-定义伸缩的方向" aria-hidden="true">#</a> 1. flex-direction：定义伸缩的方向</h4><figure><img src="'+t+`" alt="5-2-2" tabindex="0" loading="lazy"><figcaption>5-2-2</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>row：默认，主轴水平方向，起点在左端</li><li>row-reverse：主轴为水平方向，起点在右端</li><li>column：主轴为垂直方向，起点在上沿</li><li>column-reverse：主轴为垂直方向，起点在下沿</li></ul><h4 id="_2-flex-wrap-定义换行" tabindex="-1"><a class="header-anchor" href="#_2-flex-wrap-定义换行" aria-hidden="true">#</a> 2. flex-wrap：定义换行</h4><p>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p><figure><img src="`+l+`" alt="5-2-3" style="width:30em;" tabindex="0" loading="lazy"><figcaption>5-2-3</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap | wrap | wrap-reverse<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>nowrap（默认）：不换行。</li><li>wrap：换行，第一行在上方。</li><li>wrap-reverse：换行，第一行在下方。</li></ul><h4 id="_3-flex-flow" tabindex="-1"><a class="header-anchor" href="#_3-flex-flow" aria-hidden="true">#</a> 3. flex-flow</h4><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><h4 id="_4-justify-content-主轴对齐方式" tabindex="-1"><a class="header-anchor" href="#_4-justify-content-主轴对齐方式" aria-hidden="true">#</a> 4. justify-content：主轴对齐方式</h4><p>justify-content属性定义了项目在主轴上的对齐方式。</p><figure><img src="`+p+`" alt="5-2-4" style="width:28em;" tabindex="0" loading="lazy"><figcaption>5-2-4</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>flex-start（默认值）：左对齐</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h4 id="_5-align-items-交叉轴对齐方式" tabindex="-1"><a class="header-anchor" href="#_5-align-items-交叉轴对齐方式" aria-hidden="true">#</a> 5. align-items：交叉轴对齐方式</h4><figure><img src="`+c+`" alt="5-2-5" style="width:28em;" tabindex="0" loading="lazy"><figcaption>5-2-5</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">align-items</span><span class="token punctuation">:</span> flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><h4 id="_6-align-content-轴线对齐" tabindex="-1"><a class="header-anchor" href="#_6-align-content-轴线对齐" aria-hidden="true">#</a> 6. align-content：轴线对齐</h4><p>align-content属性定义了多根轴线的对齐方式，类似于justify-content。如果项目只有一根轴线（即只有一行），该属性不起作用。</p><figure><img src="`+o+`" alt="5-2-6" style="width:28em;" tabindex="0" loading="lazy"><figcaption>5-2-6</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">align-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between 
               | space-around | stretch<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>flex-start：与交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li></ul><h2 id="iii-项目的属性" tabindex="-1"><a class="header-anchor" href="#iii-项目的属性" aria-hidden="true">#</a> Ⅲ. 项目的属性</h2><h4 id="_1-order-项目的排列顺序" tabindex="-1"><a class="header-anchor" href="#_1-order-项目的排列顺序" aria-hidden="true">#</a> 1. order: 项目的排列顺序</h4><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><figure><img src="`+r+`" alt="5-2-7" style="width:30em;" tabindex="0" loading="lazy"><figcaption>5-2-7</figcaption></figure><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">order</span><span class="token punctuation">:</span> &lt;integer&gt;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-flex-grow-放大比例" tabindex="-1"><a class="header-anchor" href="#_2-flex-grow-放大比例" aria-hidden="true">#</a> 2. flex-grow：放大比例</h4><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><figure><img src="`+d+`" alt="5-2-8" style="width:30em;" tabindex="0" loading="lazy"><figcaption>5-2-8</figcaption></figure><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 0 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-flex-shrink-收缩空间" tabindex="-1"><a class="header-anchor" href="#_3-flex-shrink-收缩空间" aria-hidden="true">#</a> 3. flex-shrink：收缩空间</h4><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><figure><img src="`+u+`" alt="5-2-9" style="width:30em;" tabindex="0" loading="lazy"><figcaption>5-2-9</figcaption></figure><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 1 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-flex-basis" tabindex="-1"><a class="header-anchor" href="#_4-flex-basis" aria-hidden="true">#</a> 4. flex-basis：</h4><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">flex-basis</span><span class="token punctuation">:</span> &lt;length&gt; | auto<span class="token punctuation">;</span> <span class="token comment">/* default auto */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p><h4 id="_5-flex" tabindex="-1"><a class="header-anchor" href="#_5-flex" aria-hidden="true">#</a> 5. flex</h4><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt;<span class="token string">&#39;flex-grow&#39;</span>&gt; &lt;<span class="token string">&#39;flex-shrink&#39;</span>&gt;? || &lt;<span class="token string">&#39;flex-basis&#39;</span>&gt; ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。<br> 建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h4 id="_6-align-self-独特对齐方式" tabindex="-1"><a class="header-anchor" href="#_6-align-self-独特对齐方式" aria-hidden="true">#</a> 6. align-self：独特对齐方式</h4><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><figure><img src="`+f+`" alt="5-2-10" style="width:30em;" tabindex="0" loading="lazy"><figcaption>5-2-10</figcaption></figure><p>属性值（除了auto）与align-items的属性值相同。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="iv-flex属性" tabindex="-1"><a class="header-anchor" href="#iv-flex属性" aria-hidden="true">#</a> Ⅳ. flex属性</h2><p>flex属性就是flex项目的flex-grow、flex-shrink和flex-basis的简写属性。</p><p>该属性是针对在flex布局中，父元素在不同宽度下子元素是如何分配父元素空间的。</p><h4 id="_1-flex-basis-元素的宽度" tabindex="-1"><a class="header-anchor" href="#_1-flex-basis-元素的宽度" aria-hidden="true">#</a> 1. flex-basis ：元素的宽度</h4><p>flex-basis是用来设置元素的宽（就是主轴的main-size），可以是百分比也可以直接是数值（如100px）。</p><p>width也可以设置宽度，当一个伸缩项目即设置了width又设置了flex-basis时，以flex-basis为准。</p><h4 id="_2-flex-grow-元素的-成长" tabindex="-1"><a class="header-anchor" href="#_2-flex-grow-元素的-成长" aria-hidden="true">#</a> 2. flex-grow ：元素的“成长”</h4><ul><li>父元素的宽度大于子元素宽度之和时，并且父元素有剩余时，设置了flex-grow的子元素就要“成长”，怎么样才能成长呢，就是分享父元素的空间。</li><li>flex-grow的默认值为0，意思是该元素不索取父元素的剩余空间。</li><li>如果值大于0，表示索取，索取的量与值的大小有关。所有取值大于0的子元素，会根据值的比，按比例索取剩余的空间（也就是main-size宽将变大）。 <ul><li>比如：有两个子元素flex-grow大于0，如果两个子元素的值都是1，意味着这两个子元素平分剩余的空间；如果子元素a的值是1，子元素b的值是2，则两个子元素按1:2的比例分享剩余空间。</li></ul></li></ul><h4 id="_3-flex-shrink-元素的-收缩" tabindex="-1"><a class="header-anchor" href="#_3-flex-shrink-元素的-收缩" aria-hidden="true">#</a> 3. flex-shrink：元素的“收缩”</h4><ul><li>当父元素的宽度小于子元素宽度之和时，并且超出了父元素的宽度时，设置了flex-shrink的子元素就会进行收缩，以使子元素之和不超出父元素。</li><li>当flex-shrink的值为0时，表示该子元素的宽度就是不缩小。</li><li>当flex-shrink的大于0时，表示该子元素的宽要进行收缩，缩小的量与值的大小有关，跟根据值的比，按比例进行收缩。 <ul><li>比如：有两个子元素的flex-shrink大于0，如果两个子元素的值都是1，意味着这两个子元素将平分超过的量来收缩自己的宽，当元素a的值是1，元素b的值是2，则两个子元素按1:2的比例收缩超过的宽度。</li></ul></li><li>flex-shrink的默认值为1，表示所有的子元素的宽度共同以相同的比例缩小。</li></ul><h4 id="_4-flex简写属性的缩写形式" tabindex="-1"><a class="header-anchor" href="#_4-flex简写属性的缩写形式" aria-hidden="true">#</a> 4. flex简写属性的缩写形式</h4><h5 id="_4-1-flex-取值为-none" tabindex="-1"><a class="header-anchor" href="#_4-1-flex-取值为-none" aria-hidden="true">#</a> 4.1 flex 取值为 none</h5><p>则计算值为 0 0 auto，如下是等同的：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">flex-grow</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-2-flex取值为-auto" tabindex="-1"><a class="header-anchor" href="#_4-2-flex取值为-auto" aria-hidden="true">#</a> 4.2 flex取值为 auto</h5><p>则计算值为 1 1 auto，如下是等同的：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span>
    <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
    <span class="token property">flex-basis</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-3-当flex-取值为一个非负数字" tabindex="-1"><a class="header-anchor" href="#_4-3-当flex-取值为一个非负数字" aria-hidden="true">#</a> 4.3 当flex 取值为一个非负数字，</h5><p>则该数字为 flex-grow 值，flex-shrink 取 1，flex-basis 取 0%，如下是等同的：<br> 0%相当于是auto</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-4-flex-取值为一个长度或百分比" tabindex="-1"><a class="header-anchor" href="#_4-4-flex-取值为一个长度或百分比" aria-hidden="true">#</a> 4.4 flex 取值为一个长度或百分比</h5><p>则视为 flex-basis 值，flex-grow 取 1，flex-shrink取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字）：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item-1</span> <span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item-1</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">flex-basis</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item-2</span> <span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">.item-2</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">flex-basis</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-5-当flex取值为两个非负数字" tabindex="-1"><a class="header-anchor" href="#_4-5-当flex取值为两个非负数字" aria-hidden="true">#</a> 4.5 当flex取值为两个非负数字</h5><p>则分别视为 flex-grow和 flex-shrink的值，flex-basis取 0%，如下是等同的：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> 2 3<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>  <span class="token property">flex-basis</span><span class="token punctuation">:</span> 0%<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-6-flex取值为一个非负数字和一个长度或百分比" tabindex="-1"><a class="header-anchor" href="#_4-6-flex取值为一个非负数字和一个长度或百分比" aria-hidden="true">#</a> 4.6 flex取值为一个非负数字和一个长度或百分比</h5><p>则分别视为 flex-grow和 flex-basis的值，flex-shrink取 1，如下是等同的：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex</span><span class="token punctuation">:</span> 2333 3222px<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">.item</span> <span class="token punctuation">{</span><span class="token property">flex-grow</span><span class="token punctuation">:</span> 2333<span class="token punctuation">;</span>    <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">flex-basis</span><span class="token punctuation">:</span> 3222px<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,96),k=[x];function g(m,b){return a(),n("div",null,k)}const _=s(h,[["render",g],["__file","5-2.flex布局.html.vue"]]);export{_ as default};
