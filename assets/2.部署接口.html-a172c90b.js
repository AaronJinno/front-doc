import{_ as t,r as s,o as l,c as d,a as e,b as a,d as i,e as r}from"./app-68218236.js";const o="/front-doc/img/item/music-wy/v1&006.jpg",c={},h=r('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>v1版采用的是第三方项目提供的接口。</p><p>该项目采用NodeJS，提供了252个接口，原理是跨站请求伪造 (CSRF), 伪造请求头 , 调用官方 API</p></div><h2 id="api部署" tabindex="-1"><a class="header-anchor" href="#api部署" aria-hidden="true">#</a> API部署</h2><h4 id="_1-项目地址" tabindex="-1"><a class="header-anchor" href="#_1-项目地址" aria-hidden="true">#</a> 1. 项目地址</h4>',3),p={href:"https://github.com/Binaryify/NeteaseCloudMusicApi",target:"_blank",rel:"noopener noreferrer"},u={href:"https://binaryify.github.io/NeteaseCloudMusicApi/#/",target:"_blank",rel:"noopener noreferrer"},_=r(`<h4 id="_2-安装项目" tabindex="-1"><a class="header-anchor" href="#_2-安装项目" aria-hidden="true">#</a> 2. 安装项目</h4><p>使用Git将项目下载到/music-wy/music-wy-api/目录下，然后进行安装和初始化。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-启动项目" tabindex="-1"><a class="header-anchor" href="#_3-启动项目" aria-hidden="true">#</a> 3. 启动项目</h4><p>详见项目的package.json</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run start <span class="token comment"># node app.js</span>
<span class="token function">npm</span> run pkgliux <span class="token comment"># linux下打包</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-访问项目" tabindex="-1"><a class="header-anchor" href="#_4-访问项目" aria-hidden="true">#</a> 4. 访问项目</h4><p>默认端口是3000。</p><figure><img src="`+o+'" alt="v1&amp;006" tabindex="0" loading="lazy"><figcaption>v1&amp;006</figcaption></figure>',9),f={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},m={href:"https://neteasecloudmusicapi.vercel.app/#/?id=%e6%8e%a5%e5%8f%a3%e6%96%87%e6%a1%a3",target:"_blank",rel:"noopener noreferrer"},b=r('<h2 id="使用须知" tabindex="-1"><a class="header-anchor" href="#使用须知" aria-hidden="true">#</a> 使用须知</h2><p>本项目是代理调用的官方接口，本质还是访问的网易云音乐官方接口，因此有很多安全和限制问题。</p><h4 id="_1-登录接口" tabindex="-1"><a class="header-anchor" href="#_1-登录接口" aria-hidden="true">#</a> 1. 登录接口</h4><p>注意账号和密码，自己用还好。</p><p>不要频繁调登录接口,不然可能会被风控,登录状态还存在就不要重复调登录接口</p><p>如果遇到了301错误，那就是调用了需要登录才能调用的接口。</p><h4 id="_2-缓存问题" tabindex="-1"><a class="header-anchor" href="#_2-缓存问题" aria-hidden="true">#</a> 2. 缓存问题</h4><p>如果遇到不需要缓 存结果的接口 ,必须添加时间戳,使每次请求 url 不一样,不然请求会被缓存。</p><p>这是为了防止网易云音乐限制ip高频访问，被限制会报503错误。</p><h4 id="_3-跨域问题" tabindex="-1"><a class="header-anchor" href="#_3-跨域问题" aria-hidden="true">#</a> 3. 跨域问题</h4><p>如果是跨域请求，请在所有请求带上 ：</p>',11),g=e("ul",null,[e("li",{"withCredentials:":"",true:""},"xhrFields:"),e("li",null,"axios为withCredentials: true,"),e("li",null,"Fetch API 为 fetch(url, { credentials: 'include' }),"),e("li",null,"或直接手动传入 cookie")],-1),v=e("h4",{id:"_4-ip地址",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-ip地址","aria-hidden":"true"},"#"),a(" 4. ip地址")],-1),x=e("p",null,"此项目在国外服务器或部分国内云服务上使用会受到限制,如 460 cheating异常,如需解决 , 可使用realIP参数,传进国内IP解决,如:?realIP=116.25.146.177 即可解决",-1),k=e("h4",{id:"_5-图片大小",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-图片大小","aria-hidden":"true"},"#"),a(" 5. 图片大小")],-1),y=e("p",null,"图片加上 ?param=宽y高 可控制图片尺寸，如",-1),I={href:"http://p4.music.126.net/JzNK4a5PjjPIXAgVlqEc5Q==/109951164154280311.jpg?param=200y200",target:"_blank",rel:"noopener noreferrer"};function P(j,N){const n=s("ExternalLinkIcon");return l(),d("div",null,[h,e("ul",null,[e("li",null,[e("p",null,[e("a",p,[a("github源码"),i(n)])])]),e("li",null,[e("p",null,[e("a",u,[a("在线接口文档"),i(n)])])])]),_,e("ul",null,[e("li",null,[e("a",f,[a("接口主页"),i(n)])]),e("li",null,[e("a",m,[a("本地接口文档"),i(n)])])]),b,g,v,x,k,y,e("p",null,[e("a",I,[a("http://p4.music.126.net/JzNK4a5PjjPIXAgVlqEc5Q==/109951164154280311.jpg?param=200y200"),i(n)]),a(",")])])}const C=t(c,[["render",P],["__file","2.部署接口.html.vue"]]);export{C as default};
