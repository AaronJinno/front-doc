import{_ as a,o as n,c as s,e as t}from"./app-277eb25d.js";const p={},e=t(`<h2 id="i-label" tabindex="-1"><a class="header-anchor" href="#i-label" aria-hidden="true">#</a> Ⅰ. label</h2><p>label 元素不会向用户呈现任何特殊效果。</p><p>它为鼠标用户改进了可用性。如果在 label 元素内点击文本，就会触发此控件。就是说，当用户选择该标签时，浏览器就会自动将焦点转到和标签相关的表单控件上。</p><h4 id="_1-使用方法" tabindex="-1"><a class="header-anchor" href="#_1-使用方法" aria-hidden="true">#</a> 1. 使用方法</h4><p>首先为目标标签定义一个id，然后定义一个label标签，定义起标签间的文字和for属性，for属性的值要与目标标签的id相同，然后点击label标签的文字，目标标签就会获得焦点。</p><h4 id="_2-使用示例" tabindex="-1"><a class="header-anchor" href="#_2-使用示例" aria-hidden="true">#</a> 2. 使用示例</h4><p>点击label标签文本，该文本对应的标签焦点被选中，也就是点击单选框的旁边的文字，也可以选中单选框。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>male<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Male<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>male<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>female<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Female<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>radio<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>female<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-容器" tabindex="-1"><a class="header-anchor" href="#_3-容器" aria-hidden="true">#</a> 3. 容器</h4><p>可以将label当成普通的容器标签，但是他有特殊的功能，使标签内内容可以与input关联。label标签中间可以放任何元素，包括图片，只要点击该元素，目标input就获得焦点。</p><h4 id="_4-label标签的control属性" tabindex="-1"><a class="header-anchor" href="#_4-label标签的control属性" aria-hidden="true">#</a> 4. label标签的control属性</h4><p>可以在标签（label元素）内部放置一个表单元素，并且通过该标签的 control 属性来访问该表单元素。</p><p><strong>示例</strong><br> 点击设置默认值，触发js方法，为label标签添加了control属性，该属性的值为“123456”。label标签获得该属性后，便会使用该属性访问内部的文本框控件，并将控件的内容设置为了control属性的值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> label<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    label<span class="token punctuation">.</span>control<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token operator">&lt;</span>form<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>label id<span class="token operator">=</span><span class="token string">&quot;label&quot;</span><span class="token operator">&gt;</span>
        邮编：<span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">&quot;txt_zip&quot;</span> maxlength<span class="token operator">=</span><span class="token string">&quot;6&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>small<span class="token operator">&gt;</span>请输入六位数字<span class="token operator">&lt;</span><span class="token operator">/</span>small<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;设置默认值&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;setValue () &quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong><br> 此时的label标签不要带有for属性。</p><p><strong>用法</strong><br> 比如游戏中，自动设置游戏名。点击自动获取游戏名，随机生成游戏名，并显示。</p><h2 id="ii-output" tabindex="-1"><a class="header-anchor" href="#ii-output" aria-hidden="true">#</a> Ⅱ. output</h2><p>output 元素定义不同类型的输出，比如计算结果或脚本的输出。<br> output 元素必须从属于某个表单，写在表单内部，或者对它添加 form 属性。<br> 该标签直接显示内容，不带框。</p><p><strong>示例</strong></p><p>在这个例子中，元素被绑定到一个 range 元素上，当拖动 range 元素的滑块时， output 元素的父表单会接收到消息，同时通知 output 元素，将绑定它的 rang 元素的值显示出来。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testform<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    请选择一个数值：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rangel<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>range</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>0</span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>100</span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>5</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>10</span>
                                   <span class="token special-attr"><span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">value_change</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>output</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>outputl<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>output</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">function</span> <span class="token function">value_change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> number<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span><span class="token string">&quot;rangel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span><span class="token string">&quot;output&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token operator">=</span>number<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>       
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[e];function l(c,u){return n(),s("div",null,o)}const r=a(p,[["render",l],["__file","4-2.新增元素.html.vue"]]);export{r as default};
