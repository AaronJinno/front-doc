import{_ as t,r as p,o as i,c as l,a as n,b as a,d as o,e as s}from"./app-68218236.js";const r={},c=s(`<h2 id="响应式布局" tabindex="-1"><a class="header-anchor" href="#响应式布局" aria-hidden="true">#</a> 响应式布局</h2><p>整个主题都是响应式的，这意味着它可以在不同的屏幕尺寸上正常工作。</p><h4 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h4><ul><li>在中小型设备上: <ul><li>导航栏中，站点名称会被隐藏，导航栏链接以及主题切换、全屏按钮之类的元素会被收起至额外的弹窗，并通过导航栏右侧的按钮进行切换；</li><li>侧边栏会以侧拉菜单的形式显示并默认隐藏，导航栏左侧显示侧边栏切换按钮控制侧边栏侧弹出与收回；</li><li>路径导航、正文、返回顶部按钮文字缩小</li><li>当前页面的标题收起至侧边栏中</li></ul></li><li>在平板/笔记本设备上: <ul><li>导航栏链接会显示在导航栏中</li><li>侧边栏会以折叠菜单的形式显示</li><li>当前页面的标题收起至侧边栏中</li></ul></li><li>在电脑设备上: <ul><li>导航栏链接会显示在导航栏中</li><li>侧边栏会紧贴在页面著内容的左侧</li><li>当前页面的标题将显示在页面右侧</li></ul></li></ul><h4 id="_2-响应式配置" tabindex="-1"><a class="header-anchor" href="#_2-响应式配置" aria-hidden="true">#</a> 2. 响应式配置</h4><p>主题提供了断点变量用于控制响应式布局的行为。可以在 .vuepress/styles/config.scss 中修改它们:</p><ul><li>$pc: 电脑响应式布局断点，默认为 1440px</li><li>$laptop: 笔记本响应式布局断点，默认为 1280px</li><li>$pad: 大型平板响应式布局断点，默认为 959px</li><li>$tablet: 平板响应式布局断点，默认为 768px</li><li>$mobile: 手机响应式布局断点，默认为 480px</li></ul><h2 id="面包屑路径导航" tabindex="-1"><a class="header-anchor" href="#面包屑路径导航" aria-hidden="true">#</a> 面包屑路径导航</h2><h4 id="_1-开启面包屑" tabindex="-1"><a class="header-anchor" href="#_1-开启面包屑" aria-hidden="true">#</a> 1. 开启面包屑</h4><p>默认就是开启的，不用做任何配置，可以关闭。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hopeTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">breadcrumb</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//默认就是开启的,如果不是关闭的话，默认不用设置该选项</span>
    <span class="token literal-property property">breadcurmbIcon</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//路径上是否含有图标,默认也是开启的    </span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-readme-md" tabindex="-1"><a class="header-anchor" href="#_2-readme-md" aria-hidden="true">#</a> 2. <code>README.md</code></h4><p>为了保证路径导航更好的提示，建议在每一个路径下创建 README.mdopen in new window 文件，同时为它们设置标题。否则，路径导航将因对应层级文件夹没有主页，无法生成标题与链接而忽略那一层级。</p><p>尤其注意，为主页也设置一个标题</p><h4 id="_3-页面级控制" tabindex="-1"><a class="header-anchor" href="#_3-页面级控制" aria-hidden="true">#</a> 3. 页面级控制</h4><p>标题允许页面的配置覆盖全局的配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
breadcrub<span class="token punctuation">:</span><span class="token boolean important">false</span>
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页脚支持" tabindex="-1"><a class="header-anchor" href="#页脚支持" aria-hidden="true">#</a> 页脚支持</h2><p>vuepress-theme-hope 为所有页面提供了页脚功能，支持页面配置</p><h4 id="_1-全局配置" tabindex="-1"><a class="header-anchor" href="#_1-全局配置" aria-hidden="true">#</a> 1. 全局配置</h4><ul><li>footer：配置页脚</li><li>copyright：版权信息</li></ul><p>在主题选项中，footer 字段用于全局配置页脚。</p><p>可以在主题选项中设置 footer 和 copyright 全局设置默认的页脚内容与版权信息。可以在主题选项中通过 locales 为每个语言分别设置页脚。</p><p>默认情况下页脚不会显示在页面中。如果希望每个页面都显示页脚，需要在主题选项中设置 displayFooter: true。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hopeTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">locales</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string-property property">&quot;/zh/&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">footer</span><span class="token operator">:</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;http://github.com/aaronjinno&quot;</span><span class="token operator">&gt;</span>github<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">displayFooter</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//正每个页面下都显示页脚.            </span>
        <span class="token punctuation">}</span>    
    <span class="token punctuation">}</span>       
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-页面配置" tabindex="-1"><a class="header-anchor" href="#_2-页面配置" aria-hidden="true">#</a> 2. 页面配置</h4><p>可以在页面的 frontmatter 中配置 footer，copyright 字段，指定特定页面的页脚内容</p><h5 id="_2-1-footer" tabindex="-1"><a class="header-anchor" href="#_2-1-footer" aria-hidden="true">#</a> 2.1 footer</h5><ul><li>当 displayFooter: true 时，你可以在 frontmatter 中将 footer 设置为 false 来禁用特定页面的页脚。</li><li>当全局显示页脚未开启时，将 footer 设置为 true 会显示默认的页脚文字。</li><li>如果你填入一个字符串，它会以 v-html 指令的形式插入到页脚的位置作为页脚的内容，所以你可以填入 HTMLString。</li></ul><h5 id="_2-2-copyright" tabindex="-1"><a class="header-anchor" href="#_2-2-copyright" aria-hidden="true">#</a> 2.2 copyright</h5><p>copyright 字段用于设置特定页面的版权信息，它同样也支持 HTMLString</p><p>在 displayFooter: true 时，你也可以填入 false 来隐藏特定页面的版权信息。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">--</span><span class="token operator">-</span>
<span class="token literal-property property">copyright</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token operator">--</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面详情" tabindex="-1"><a class="header-anchor" href="#页面详情" aria-hidden="true">#</a> 页面详情</h2><h4 id="_1-图标支持" tabindex="-1"><a class="header-anchor" href="#_1-图标支持" aria-hidden="true">#</a> 1. 图标支持</h4><p>可以在页面的 frontmatter 中配置 icon 字段，填入对应图标的 FontClass 即可绑定图标到页面</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">--</span><span class="token operator">-</span>
<span class="token literal-property property">icon</span><span class="token operator">:</span> home
<span class="token operator">--</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-标题列表" tabindex="-1"><a class="header-anchor" href="#_2-标题列表" aria-hidden="true">#</a> 2. 标题列表</h4><p>在桌面模式下，文章的标题列表会自动显示在屏幕的右侧。(在移动视图下它们会放置在侧边栏里)。</p><p>如果不希望在桌面模式下显示右侧的标题列表，请在主题选项中设置 toc: false。<br> 也可以在特定页面的 frontmatter 中通过 toc 来指定它</p><h4 id="_3-上-下-一篇链接" tabindex="-1"><a class="header-anchor" href="#_3-上-下-一篇链接" aria-hidden="true">#</a> 3. 上/下 一篇链接</h4><p>上一篇和下一篇文章的链接将会自动地根据当前页面的侧边栏的顺序来获取。<br> 也可以通过主题选项或 frontmatter 来明确地重写或者禁用它:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">--</span><span class="token operator">-</span>
<span class="token literal-property property">prev</span><span class="token operator">:</span> <span class="token punctuation">.</span><span class="token operator">/</span>some<span class="token operator">-</span>other<span class="token operator">-</span>page
<span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token operator">--</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-自定义布局" tabindex="-1"><a class="header-anchor" href="#_4-自定义布局" aria-hidden="true">#</a> 4. 自定义布局</h4><p>默认情况下，每个 *.md 文件将会被渲染在一个 <code>&lt;div class=&quot;page&quot;&gt;</code> 容器中，同时还有侧边栏、自动生成的编辑链接，以及上 / 下一篇文章的链接。如果你想要使用一个完全自定义的组件来代替当前的页面，你可以通过 frontmatter 来指定布局组件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">--</span><span class="token operator">-</span>
<span class="token literal-property property">layout</span><span class="token operator">:</span> SpecialLayout
<span class="token operator">--</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录页面" tabindex="-1"><a class="header-anchor" href="#目录页面" aria-hidden="true">#</a> 目录页面</h2>`,47),d={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},u=s(`<p>可以在主题选项中使用 plugin.autoCatalog 来控制此功能。 如果要禁用它，请将 plugin.autoCatalog 设置为 false。</p><h2 id="首页" tabindex="-1"><a class="header-anchor" href="#首页" aria-hidden="true">#</a> 首页</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里以文档首页为例，博客首页配置是不同的。</p></div><h4 id="_1-readme-md" tabindex="-1"><a class="header-anchor" href="#_1-readme-md" aria-hidden="true">#</a> 1. <code>README.md</code></h4><p>vuepress-theme-hope 保留了默认主题的首页配置，在此基础上改进样式与配置。</p><p>启用：在 frontmatter 中设置 home: true</p><p>首页文件是src目录下的<code>README.md</code></p><h4 id="_2-站点信息" tabindex="-1"><a class="header-anchor" href="#_2-站点信息" aria-hidden="true">#</a> 2. 站点信息</h4><p>可以使用 heroText 设置主标题，并通过 tagline 设置副标题。</p><p>通过 heroImage 设置Logo</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">home</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">icon</span><span class="token punctuation">:</span> home
<span class="token key atrule">title</span><span class="token punctuation">:</span> Project home
<span class="token key atrule">heroImage</span><span class="token punctuation">:</span> /logo.svg
<span class="token key atrule">heroText</span><span class="token punctuation">:</span> Project name
<span class="token key atrule">tagline</span><span class="token punctuation">:</span> You can place the description of the project here.
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-主页按钮" tabindex="-1"><a class="header-anchor" href="#_3-主页按钮" aria-hidden="true">#</a> 3. 主页按钮</h4><p>可以将一些重要的链接以按钮的形式展示在主页中</p><p>可以通过 actions 设置它们，它是一个数组，每个元素都是一个对象，包含以下键值:</p><ul><li>text: 按钮文字</li><li>link: 按钮链接</li><li>type: 按钮类型 (仅支持 &quot;primary&quot; 与 &quot;default&quot; (默认))</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">actions</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">text</span><span class="token punctuation">:</span> How to Use 💡
    <span class="token key atrule">link</span><span class="token punctuation">:</span> /demo/
    <span class="token key atrule">type</span><span class="token punctuation">:</span> primary

  <span class="token punctuation">-</span> <span class="token key atrule">text</span><span class="token punctuation">:</span> Docs
    <span class="token key atrule">link</span><span class="token punctuation">:</span> /guide/
<span class="token punctuation">---</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-项目特性" tabindex="-1"><a class="header-anchor" href="#_4-项目特性" aria-hidden="true">#</a> 4. 项目特性</h4><p>可以通过 features 设置并展示项目特性，它是一个数组，每个元素都是一个对象，包含以下键值:</p><ul><li>title: 标题</li><li>details: 详情</li><li>icon(可选): 可填入完整路径或绝对路径的图片链接，或 FontClass</li><li>link(可选): 链接地址</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">features</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> Markdown Enhance
    <span class="token key atrule">icon</span><span class="token punctuation">:</span> markdown
    <span class="token key atrule">details</span><span class="token punctuation">:</span> mark and presentation support in markdown
    <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//theme<span class="token punctuation">-</span>hope.vuejs.press/guide/markdown/

  <span class="token punctuation">-</span> <span class="token key atrule">title</span><span class="token punctuation">:</span> Slide page
    <span class="token key atrule">icon</span><span class="token punctuation">:</span> slides
    <span class="token key atrule">details</span><span class="token punctuation">:</span> Adding slide pages to display things you like
    <span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//theme<span class="token punctuation">-</span>hope.vuejs.press/guide/layout/slides.html
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function h(k,v){const e=p("ExternalLinkIcon");return i(),l("div",null,[c,n("p",null,[a("VuePress Theme Hope 默认使用 vuepress-plugin-catalog 为每个文件夹自动生成带有目录的 "),n("a",d,[a("README.md"),o(e)]),a("。")]),u])}const b=t(r,[["render",h],["__file","3-4.页面布局.html.vue"]]);export{b as default};
