import{_ as a,o as e,c as r,e as c}from"./app-f9b28035.js";const t={},i=c('<h4 id="_1-什么是es6" tabindex="-1"><a class="header-anchor" href="#_1-什么是es6" aria-hidden="true">#</a> 1. 什么是ES6</h4><p>ECMAScript6.0是JavaScript语言的下一代标准。</p><p>它的目标是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p><h4 id="_2-ecmascript-和-javascript-的关系" tabindex="-1"><a class="header-anchor" href="#_2-ecmascript-和-javascript-的关系" aria-hidden="true">#</a> 2. ECMAScript 和 JavaScript 的关系</h4><p>ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现，日常场合，这两个词是可以互换的。</p><h4 id="_3-es6与es2015的联系" tabindex="-1"><a class="header-anchor" href="#_3-es6与es2015的联系" aria-hidden="true">#</a> 3. ES6与ES2015的联系</h4><p>ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。</p><h4 id="_4-ecmascript的历史" tabindex="-1"><a class="header-anchor" href="#_4-ecmascript的历史" aria-hidden="true">#</a> 4. ECMAScript的历史</h4><p>ES6 从开始制定到最后发布，整整用了 15 年。目前主流浏览器都已经支持ES6了。</p><h4 id="_5-babel转码器" tabindex="-1"><a class="header-anchor" href="#_5-babel转码器" aria-hidden="true">#</a> 5. Babel转码器</h4><p>ES6的兼容性并不好，需要进行转码才能用于生产环境。可以用ES6进行开发，开发完后，再进行转码使用。</p><p>对于脚手架环境，babel都已经配置好了。</p>',12),s=[i];function h(p,d){return e(),r("div",null,s)}const n=a(t,[["render",h],["__file","1-1.ES6简介.html.vue"]]);export{n as default};
