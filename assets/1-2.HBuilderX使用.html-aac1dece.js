import{_ as s,r as d,o as l,c,a,b as i,d as r,e}from"./app-fb2cd4f5.js";const p="/front-doc/img/applet/uniapp/1-2-1.png",o="/front-doc/img/applet/uniapp/1-2-2.png",h="/front-doc/img/applet/uniapp/1-2-3.png",u="/front-doc/img/applet/uniapp/1-2-4.png",t="/front-doc/img/applet/uniapp/1-2-5.png",_={},f=e('<h2 id="i-创建项目" tabindex="-1"><a class="header-anchor" href="#i-创建项目" aria-hidden="true">#</a> Ⅰ. 创建项目</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>创建项目一般使用官方IDE HBuilderX，也可以使用vue-cli。</p></div><h4 id="_1-新建项目" tabindex="-1"><a class="header-anchor" href="#_1-新建项目" aria-hidden="true">#</a> 1. 新建项目</h4><p>打开HBuilderX：文件-&gt;新建-&gt;项目<br> 填写项目名、储存路径；选择项目模板（推荐uin-ui）和Vue的版本。</p><figure><img src="'+p+'" alt="1-2-1" tabindex="0" loading="lazy"><figcaption>1-2-1</figcaption></figure><h4 id="_2-目录结构" tabindex="-1"><a class="header-anchor" href="#_2-目录结构" aria-hidden="true">#</a> 2. 目录结构</h4><p>新建项目的目录结构如下：</p><figure><img src="'+o+'" alt="1-2-2" tabindex="0" loading="lazy"><figcaption>1-2-2</figcaption></figure><h2 id="ii-运行uni-app" tabindex="-1"><a class="header-anchor" href="#ii-运行uni-app" aria-hidden="true">#</a> Ⅱ. 运行uni-app</h2><h4 id="_1-运行到浏览器" tabindex="-1"><a class="header-anchor" href="#_1-运行到浏览器" aria-hidden="true">#</a> 1. 运行到浏览器</h4>',10),g={href:"http://localhost:5173/",target:"_blank",rel:"noopener noreferrer"},m=e('<figure><img src="'+h+'" alt="1-2-3" tabindex="0" loading="lazy"><figcaption>1-2-3</figcaption></figure><h4 id="_2-运行到手机或模拟器" tabindex="-1"><a class="header-anchor" href="#_2-运行到手机或模拟器" aria-hidden="true">#</a> 2. 运行到手机或模拟器</h4><p>使用电压足够的usb端口连接手机，设置中开启USB调试，手机上允许电脑设备调试手机，进入hello-uniapp项目，点击工具栏的运行 -&gt; 运行App到手机或模拟器，即可在该设备里面体验uni-app。</p><h4 id="_3-运行到小程序" tabindex="-1"><a class="header-anchor" href="#_3-运行到小程序" aria-hidden="true">#</a> 3. 运行到小程序</h4><p>可以运行到指定类型的小程序开发者工具中。</p><ul><li>运行前需要进行配置小程序开发者工具的安装路径</li><li>微信开发者工具需要开启服务端口 在微信工具的设置-&gt;安全中</li></ul><h4 id="_4-小程序配置" tabindex="-1"><a class="header-anchor" href="#_4-小程序配置" aria-hidden="true">#</a> 4. 小程序配置</h4><ul><li>如果是第一次使用，需要配置开发工具的相关路径。点击工具栏的运行 -&gt; 运行到小程序模拟器 -&gt; 运行设置，配置相应小程序开发者工具的路径。</li><li>微信小程序工具需要配置允许权限，不然HBuilder无法调用微信小程序开发工具的命令行</li><li>支付宝/百度/字节跳动/360小程序工具，不支持直接指定项目启动并运行。因此开发工具启动后，请将 HBuilderX 控制台中提示的项目路径，在相应小程序开发者工具中打开。</li><li>如果自动启动小程序开发工具失败，请手动启动小程序开发工具并将 HBuilderX 控制台提示的项目路径，打开项目。</li></ul><h2 id="iii-发布uni-app" tabindex="-1"><a class="header-anchor" href="#iii-发布uni-app" aria-hidden="true">#</a> Ⅲ. 发布uni-app</h2><h4 id="_1-打包为原生app" tabindex="-1"><a class="header-anchor" href="#_1-打包为原生app" aria-hidden="true">#</a> 1. 打包为原生APP</h4><p>在HBuilderX工具栏，点击发行，选择原生app-云端打包，如下图，需要填写很多信息进行打包。</p><p>注意：如果涉及三方sdk，需进行申请并在manifest.json里配置，否则相关功能无法使用。</p><figure><img src="'+u+'" alt="1-2-4" tabindex="0" loading="lazy"><figcaption>1-2-4</figcaption></figure><h4 id="_2-发布为web网站" tabindex="-1"><a class="header-anchor" href="#_2-发布为web网站" aria-hidden="true">#</a> 2. 发布为Web网站</h4><h5 id="_2-1-配置网页信息" tabindex="-1"><a class="header-anchor" href="#_2-1-配置网页信息" aria-hidden="true">#</a> 2.1 配置网页信息</h5><p>在项目根目录下点击manifest.json 的可视化界面，进行如下配置：</p><figure><img src="'+t+'" alt="1-2-5" tabindex="0" loading="lazy"><figcaption>1-2-5</figcaption></figure><h5 id="_2-2-进行发布" tabindex="-1"><a class="header-anchor" href="#_2-2-进行发布" aria-hidden="true">#</a> 2.2 进行发布</h5><p>点击发行，选择网站-H5手机版。</p><p>如下图，点击即可生成 H5 的相关资源文件，保存于 unpackage 目录。</p><figure><img src="'+t+'" alt="1-2-5" tabindex="0" loading="lazy"><figcaption>1-2-5</figcaption></figure><h5 id="_2-3-注意事项" tabindex="-1"><a class="header-anchor" href="#_2-3-注意事项" aria-hidden="true">#</a> 2.3 注意事项</h5>',22),b=a("li",null,"history 模式发行需要后台配置支持（Vue-router）",-1),v=a("li",null,"打包后，可以使用前端网页托管服务，一键上传，自带CDN加速，无需安装nginx等；",-1),x={href:"https://juejin.im/post/5af003286fb9a07aac24611b",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="iv-hbuild使用技巧" tabindex="-1"><a class="header-anchor" href="#iv-hbuild使用技巧" aria-hidden="true">#</a> Ⅳ. HBuild使用技巧</h2><h4 id="_1-jsdoc-语法提示" tabindex="-1"><a class="header-anchor" href="#_1-jsdoc-语法提示" aria-hidden="true">#</a> 1. jsdoc+语法提示</h4><p>HBuilderX中所有js方法都支持jsdoc+的语法提示系统。<br> 在方法的开头通过/**输入特定格式的注释，在调用这个云对象的方法时就可以看到参数提示。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * method1方法描述
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">param1</span> 参数1描述
 * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token punctuation">}</span></span> 返回值描述
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-vue-cli命令行使用" tabindex="-1"><a class="header-anchor" href="#v-vue-cli命令行使用" aria-hidden="true">#</a> Ⅴ. vue-cli命令行使用</h2><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>除了HBuilderX可视化界面，也可以使用 cli 脚手架，可以通过 vue-cli 创建 uni-app 项目。</p><p>暂略</p></div>`,6);function B(j,H){const n=d("ExternalLinkIcon");return l(),c("div",null,[f,a("p",null,[i("默认访问地址："),a("a",g,[i("http://localhost:5173/"),r(n)])]),m,a("ul",null,[b,v,a("li",null,[i("若使用传统服务器部署，建议在服务器端开启 gzip 压缩，"),a("a",x,[i("详情"),r(n)])])]),k])}const X=s(_,[["render",B],["__file","1-2.HBuilderX使用.html.vue"]]);export{X as default};
