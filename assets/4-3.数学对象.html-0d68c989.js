import{_ as n,o as a,c as s,e as t}from"./app-277eb25d.js";const p={},e=t(`<p>JavaScript给我们提供的进行数学计算的对象：Math对象。</p><p>Math和其他的对象不同，它不是一个构造函数，他属于一个工具类，不用创建对象，他里面封装了数学运算相关的属性和方法（直接用就行了，不用new创建math对象）。</p><p>Math属性都是一些数学常量，比如：Math.PI。</p><h4 id="_1-math-abs-计算绝对值" tabindex="-1"><a class="header-anchor" href="#_1-math-abs-计算绝对值" aria-hidden="true">#</a> 1. Math.abs()：计算绝对值</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num_abs <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num_abs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果是100.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-math-ceil-向上取整数" tabindex="-1"><a class="header-anchor" href="#_2-math-ceil-向上取整数" aria-hidden="true">#</a> 2. Math.ceil()：向上取整数</h4><p>不管小数点后面小数是多少，都会进一取整。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">128.001</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num_ceil <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num_ceil<span class="token punctuation">)</span><span class="token comment">//结果是129.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-math-floor-向下取整数" tabindex="-1"><a class="header-anchor" href="#_3-math-floor-向下取整数" aria-hidden="true">#</a> 3. Math.floor()：向下取整数</h4><p>不管小数点后面是多少，忽略小数点后面的值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">29.99999</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num_floor <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num_floor<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果是29</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-计算最大-最小值" tabindex="-1"><a class="header-anchor" href="#_4-计算最大-最小值" aria-hidden="true">#</a> 4. 计算最大，最小值</h4><ul><li>Math.max()：计算最大值</li><li>Math.min()：计算最小值</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-math-pow-x-y-获得x的y次方【幂】" tabindex="-1"><a class="header-anchor" href="#_5-math-pow-x-y-获得x的y次方【幂】" aria-hidden="true">#</a> 5. Math.pow(x,y)：获得x的y次方【幂】</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> n_pow <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//结果是2的3次方。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-math-sqrt-num-获得num的平方根" tabindex="-1"><a class="header-anchor" href="#_6-math-sqrt-num-获得num的平方根" aria-hidden="true">#</a> 6. Math.sqrt(num)：获得num的平方根</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> num1 <span class="token operator">=</span> <span class="token number">144</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num1_sqrt <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num1_sqrt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到12.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-math-random-取得0-1之间的随机数" tabindex="-1"><a class="header-anchor" href="#_7-math-random-取得0-1之间的随机数" aria-hidden="true">#</a> 7. Math.random()：取得0-1之间的随机数</h4><p>注：默认是16位小数，且不包含0和1</p><p>如果想获得更大的随机数，可以乘以对应的倍数。<br> 使用时，可以乘以N倍获取想要的范围，并进行取整（如果要获取0和1，就要使用round）。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>random<span class="token punctuation">)</span><span class="token punctuation">;</span>
Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token operator">+</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//生成x-y之间的随机数</span>

<span class="token comment">//使用举例</span>
<span class="token comment">//将班级里的人都写入数组中</span>
<span class="token keyword">var</span> students <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;jerry&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;camel&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;trunp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//数组中的每个人都有一个固定索引下标，可以根据下标取出对应的值</span>
<span class="token comment">//获得随机下标:一共有4个人，所以要获得的随机数是0-4(数组是从0开始的，要取0)</span>
<span class="token keyword">var</span> key <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//对获取的随机数进行取整，因为要取0，不取最大值，所以要向下取整。</span>
<span class="token keyword">var</span> key <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>students<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-math-round-把一个数字舍入为最接近的整数。" tabindex="-1"><a class="header-anchor" href="#_8-math-round-把一个数字舍入为最接近的整数。" aria-hidden="true">#</a> 8. Math.round()：把一个数字舍入为最接近的整数。</h4><p>四舍五入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">//x必须为数字</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),o=[e];function c(u,l){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","4-3.数学对象.html.vue"]]);export{r as default};
