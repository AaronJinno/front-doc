import{_ as n,o as a,c as s,e as t}from"./app-c07941ad.js";const p={},e=t(`<h2 id="i-介绍" tabindex="-1"><a class="header-anchor" href="#i-介绍" aria-hidden="true">#</a> Ⅰ. 介绍</h2><p>Web Storage：顾名思义，就是让web页面实现在客户端浏览器存储数据到本地的功能，储存的方式是键值对。</p><h4 id="_1-web-storage储存的方式" tabindex="-1"><a class="header-anchor" href="#_1-web-storage储存的方式" aria-hidden="true">#</a> 1. Web Storage储存的方式</h4><ul><li>sessionStorage(临时储存)：将数据保存在 session 对象中，储存一个会话的数据，数据在同一个会话中可以访问，关闭会话，数据随之销毁。</li><li>localStorage(永久储存)：将数据储存到硬盘，没有时间限制的永久储存，浏览器关闭，数据也不会消失，用于持久化的本地储存，除非主动删除，否则数据永远不会过期。</li></ul><h4 id="_2-web-storage与cookie" tabindex="-1"><a class="header-anchor" href="#_2-web-storage与cookie" aria-hidden="true">#</a> 2. Web Storage与cookie</h4><p>Web Storage比cookie更为强大，弥补了cookie的很多缺点，主要优势如下：</p><ul><li>大小：cookie被限制为4kb，Web Storage要大的多。</li><li>带宽：cookie储存内容会随着http请求发送到服务器，对于本地储存的数据来说浪费带宽。</li><li>接口：Web Storage的接口更加丰富易用，</li><li>储存空间：Web Storage的储存空间每个域彼此独立，不会造成数据混乱</li><li>易操作：Web Storage比cookie更易操作</li></ul><h4 id="_3-缺点" tabindex="-1"><a class="header-anchor" href="#_3-缺点" aria-hidden="true">#</a> 3. 缺点</h4><p>Web Storage也有一些缺点，主要集中在安全方面，储存在本地的数据未加密而且永远不会过期，容易造成隐私泄露。<br> 每个域都有自己的独立空间，无法互相访问，但是浏览器不会检查脚本所在域与当前域是否相同。即可以跨域嵌入脚本实现跨域访问数据。</p><h4 id="_4-注意" tabindex="-1"><a class="header-anchor" href="#_4-注意" aria-hidden="true">#</a> 4. 注意</h4><p>因为安全问题，勿使用 localStorage 保存敏感信息，密码信息用token代替。</p><h4 id="_5-兼容性" tabindex="-1"><a class="header-anchor" href="#_5-兼容性" aria-hidden="true">#</a> 5. 兼容性</h4><p>IE8.0以上，所有主流浏览器都支持。</p><h2 id="ii-使用" tabindex="-1"><a class="header-anchor" href="#ii-使用" aria-hidden="true">#</a> Ⅱ. 使用</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>**localStorage和sessionStorage对象拥有相同的属性和方法，操作完全一样。 **<br> 以下语法都是在JS中操作的。</p></div><h4 id="_1-储存值" tabindex="-1"><a class="header-anchor" href="#_1-储存值" aria-hidden="true">#</a> 1. 储存值</h4><p>使用setItem()方法储存值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//key为数据的键，value表示值</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;jinno&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;jinno&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-读取值" tabindex="-1"><a class="header-anchor" href="#_2-读取值" aria-hidden="true">#</a> 2. 读取值</h4><p>使用getItem方法读取指定键名的值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> uname <span class="token operator">=</span> sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> uname <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-删除值" tabindex="-1"><a class="header-anchor" href="#_3-删除值" aria-hidden="true">#</a> 3. 删除值</h4><p>使用removeItem()方法可以删除指定键名的值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">removeItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-清空所有数据" tabindex="-1"><a class="header-anchor" href="#_4-清空所有数据" aria-hidden="true">#</a> 4. 清空所有数据</h4><p>使用clear()方法可以清空所有本地储存的键值对。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-对象语法" tabindex="-1"><a class="header-anchor" href="#_5-对象语法" aria-hidden="true">#</a> 5. 对象语法</h4><p>Web Storage 还可以通过点语法或字符串数组[]的方式进行读取和设置值。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> storage <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">;</span>
storage<span class="token punctuation">.</span>key1 <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
storage<span class="token punctuation">[</span><span class="token string">&#39;key2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>storage<span class="token punctuation">.</span>key1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>storage<span class="token punctuation">[</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-遍历操作" tabindex="-1"><a class="header-anchor" href="#_6-遍历操作" aria-hidden="true">#</a> 6. 遍历操作</h4><p>localStorage和sessionStorage提供key()方法和length属性，使用他们可以方便地实现储存数据的遍历。先用 length 属性获取保存数据的条数，然后做一个循环，在循环内使用一个变量，该变量从0 开始作为 index 参数传入key(index)属性，每次循环时该变量加1，通过这种方法，取得保存在 Storage 中的所有数据。</p><h5 id="_6-1-localstorage-key-idnex" tabindex="-1"><a class="header-anchor" href="#_6-1-localstorage-key-idnex" aria-hidden="true">#</a> 6.1 localStorage.key(idnex)</h5><p>将想要得到的数据的索引作为index参数传入，便可得到与这个索引对应的数据的key，index是从0开始计算的。<br> PS：添加数据的排序是客户端根据自己的规则进行，而不是按照添加顺序。建议谨慎使用key()方法</p><h5 id="_6-2-localstorage-length" tabindex="-1"><a class="header-anchor" href="#_6-2-localstorage-length" aria-hidden="true">#</a> 6.2 localStorage.length</h5><p>所有保存在 localStorage 中的数据的条数</p><h5 id="_6-3-示例-使用for循环遍历数据-并显示" tabindex="-1"><a class="header-anchor" href="#_6-3-示例-使用for循环遍历数据-并显示" aria-hidden="true">#</a> 6.3 示例：使用for循环遍历数据，并显示</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> storage <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token operator">=</span>storage<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> key <span class="token operator">=</span> storage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> storage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-storage-事件" tabindex="-1"><a class="header-anchor" href="#_7-storage-事件" aria-hidden="true">#</a> 7. storage 事件</h4><p>Web Storage 还提供了storage事件，当键值改变或者clear的时候，就会触发storage事件。</p><p>通过对 window对象的 storage 事件进行监听并指定其事件处理函数的方法，来定义当在其他页面中修改 sessionStorage 或 localStorage 中的值时所要执行的处理。</p><p><strong>storage事件对象属性</strong></p><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">类型</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">key</td><td style="text-align:left;">String</td><td style="text-align:left;">键的名称</td></tr><tr><td style="text-align:left;">oldValue</td><td style="text-align:left;">Any</td><td style="text-align:left;">以前的值（被覆盖的值），如果是新添加的项目，则为null</td></tr><tr><td style="text-align:left;">newValue</td><td style="text-align:left;">Any</td><td style="text-align:left;">新的值，如果是新添加的醒目，则为null</td></tr><tr><td style="text-align:left;">url</td><td style="text-align:left;">String</td><td style="text-align:left;">引发更改的方法所在页面地址</td></tr><tr><td style="text-align:left;">storageArea</td><td style="text-align:left;">object</td><td style="text-align:left;">被变动的 sessionStorage 对象或 localStorage 对象</td></tr></tbody></table><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;storage&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">&quot;key:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>key <span class="token operator">+</span> <span class="token string">&quot;,newValue:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>newValue <span class="token operator">+</span>
                    <span class="token string">&quot;oldValue:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>oldValue <span class="token operator">+</span> <span class="token string">&quot;,url:&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>                 
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-案例" tabindex="-1"><a class="header-anchor" href="#iii-案例" aria-hidden="true">#</a> Ⅲ. 案例</h2><h4 id="_1-用户登录信息保存和读取" tabindex="-1"><a class="header-anchor" href="#_1-用户登录信息保存和读取" aria-hidden="true">#</a> 1. 用户登录信息保存和读取</h4><p>进入登录页面后，判断是否有getItem，并自动读取getItem显示在输入框内。<br> 点击保存时，判断是否需要保存密码，并进行setItem。</p><h5 id="_1-1-html" tabindex="-1"><a class="header-anchor" href="#_1-1-html" aria-hidden="true">#</a> 1.1 HTML</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">page_load</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myform<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>get<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uname<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uname<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uname<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pwd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pwd<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pwd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>savepwd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>savepwd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>是否保存密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>登录<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">btn_click</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-js" tabindex="-1"><a class="header-anchor" href="#_1-2-js" aria-hidden="true">#</a> 1.2 JS</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1.加载页面是就查找是否有保存的数据，有就显示</span>
<span class="token keyword">function</span> <span class="token function">page_load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//1.1 获取用户名和密码对象</span>
    <span class="token keyword">var</span> uname <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> pwd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;pwd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//1.2 判断是否有保存的用户名</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;unamekey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        uname<span class="token punctuation">.</span>value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;unamekey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//1.3 判断是否有保存的密码</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;pwdKey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        pwd<span class="token punctuation">.</span>value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;pwdKey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//2.点击登录时，保存用户名和密码</span>
<span class="token keyword">function</span> <span class="token function">btn_click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//2.1 获取填写的用户名和密码</span>
    <span class="token keyword">var</span> unameValue <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;uname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>unameValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> pwdValue <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;pwd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pwdValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//2.2 设置用户名的localStorage</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;unameKey&#39;</span><span class="token punctuation">,</span>unameValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//2.3 判断是否要保存密码</span>
    <span class="token keyword">var</span> savepwd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;savepwd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>savepwd<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//2.3.1 需要保存，则保存</span>
       localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;pwdKey&#39;</span><span class="token punctuation">,</span>pwdValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token comment">//2.3.2 不需要保存，则进行删除</span>
        localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&#39;pwdKey&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-留言板" tabindex="-1"><a class="header-anchor" href="#_2-留言板" aria-hidden="true">#</a> 2. 留言板</h4><p>点击追加，将数据储存在localStorage中，数据的值是填写的文本，数据的key则是当前的时间戳。然后对localStorage的数据进行遍历显示在下方的表格中，点击初始化则清空所有的数据。</p><h5 id="_2-1-html" tabindex="-1"><a class="header-anchor" href="#_2-1-html" aria-hidden="true">#</a> 2.1 html</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>留言板<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>60<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>追加<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">saveStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>初始化<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">clearStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-2-js" tabindex="-1"><a class="header-anchor" href="#_2-2-js" aria-hidden="true">#</a> 2.2 js</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1.将文本作为值，时间戳作为key，保存在localStorage</span>
<span class="token keyword">function</span> <span class="token function">saveStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//1.1 获得文本框对象和它的值，以及当前的时间戳</span>
    <span class="token keyword">var</span> mbValue <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;mb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> msgValue <span class="token operator">=</span> mbValue<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token comment">//1.2 将key和值保存</span>
    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>time<span class="token punctuation">,</span>msgValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;数据保存成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//1.3 调用loadStroage()方法，显示留言信息</span>
    <span class="token function">loadStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//2. 以表格的形式显示留言信息</span>
<span class="token keyword">function</span> <span class="token function">loadStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//2.1 定义result作为要输出的值</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">&quot;&lt;table border=&#39;1&#39;&gt;&quot;</span>
    <span class="token comment">//2.2 遍历localStorage</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>localStorage<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//2.2.1 获得数据的key和value</span>
        <span class="token keyword">var</span> key <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">key</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> value <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.2.2 定义data对象，并以key设置对象值(时间戳)</span>
        <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        date<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.2.3 将data的值转化成字符串</span>
        <span class="token keyword">var</span> datestr <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//2.2.4 组装result</span>
        result <span class="token operator">+=</span> <span class="token string">&#39;&lt;tr&gt;&lt;td&gt;&#39;</span> <span class="token operator">+</span> value <span class="token operator">+</span><span class="token string">&#39;&lt;/td&gt;&lt;td&gt;&#39;</span> <span class="token operator">+</span> datestr <span class="token operator">+</span> <span class="token string">&#39;&lt;/td&gt;&lt;/tr&gt;&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//2.3 输出result</span>
    result <span class="token operator">+=</span> <span class="token string">&#39;&lt;/table&gt;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> msg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;msg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msg<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//3. 清除所有数据，并重新调用输出留言信息的方法</span>
<span class="token keyword">function</span> <span class="token function">clearStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">loadStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58),o=[e];function c(l,u){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","7-1.Web Storage.html.vue"]]);export{k as default};
