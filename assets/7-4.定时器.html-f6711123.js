import{_ as n,o as s,c as a,e as t}from"./app-351da1f5.js";const e={},p=t(`<h2 id="i-设置与清除" tabindex="-1"><a class="header-anchor" href="#i-设置与清除" aria-hidden="true">#</a> Ⅰ. 设置与清除</h2><h4 id="_1-设置定时器" tabindex="-1"><a class="header-anchor" href="#_1-设置定时器" aria-hidden="true">#</a> 1. 设置定时器</h4><p>设置间隔执行（每隔多少时间执行），类似于定时器。一旦开启之后，每隔一定的时间执行一次</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">&quot;num&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>

<span class="token comment">//向段落里面写入数字1：</span>
<span class="token keyword">var</span> oP <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token comment">//设置间隔执行（定时器），每隔一定的时间就执行一次</span>
<span class="token comment">//参数1：每隔一定的时间执行的代码，如果代码很多就可以写到函数中</span>
<span class="token comment">//参数2：间隔的时间，单位是毫秒：1000毫秒==1秒</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    num<span class="token operator">--</span><span class="token punctuation">;</span>
    oP<span class="token punctuation">.</span>innerText <span class="token operator">=</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-clearinterval-清除定时器" tabindex="-1"><a class="header-anchor" href="#_2-clearinterval-清除定时器" aria-hidden="true">#</a> 2. clearInterval:清除定时器.</h4><p>设置定时器时,可以将定时器赋给一个变量.便于以后删除，不删除定时器，会造成多个定时器同时开启，不仅浪费资源，而且可能会造成定时器不断加速。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
<span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-设置延迟执行" tabindex="-1"><a class="header-anchor" href="#ii-设置延迟执行" aria-hidden="true">#</a> Ⅱ. 设置延迟执行</h2><ul><li>setTimeout(): 设置延迟执行，延迟多少时间之后执行一次</li><li>clearTimeout(): 清除延迟执行</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//设置body的背景颜色</span>
<span class="token comment">//1秒之后变成绿色</span>
<span class="token keyword">var</span> timer1 <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>

<span class="token comment">//3秒之后变成蓝色</span>
<span class="token keyword">var</span> timer2 <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>

<span class="token comment">//5之后变成红色</span>
<span class="token keyword">var</span> timer3 <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>

<span class="token comment">//clearTimeout删除延迟执行，参数就是setTimeout的返回值</span>
<span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer2<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-定时器的数量" tabindex="-1"><a class="header-anchor" href="#iii-定时器的数量" aria-hidden="true">#</a> Ⅲ. 定时器的数量</h2><p>每setInterval()一次,内存中就会有一个定时器，将把多个定时器赋给同一个变量,那也只是该表了变量对不同定时器的指针.比如timer由指向a定时器,变成指向B定时器.timer只是代表了B定时器,A定时器并没有消失.</p><p>当使用clearInterval删除时,只能删除变量指定的定时器,没有绑定变量的定时器,无法直接删除.</p><p>解决方案：始终只在内存中创建一个定时器（创建新定时器的时候,先删除旧定时器）</p>`,14),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","7-4.定时器.html.vue"]]);export{r as default};
