import{_ as n,P as a,Q as s,a5 as t}from"./framework-3728cbf1.js";const e={},p=t(`<h2 id="i-canvas介绍" tabindex="-1"><a class="header-anchor" href="#i-canvas介绍" aria-hidden="true">#</a> Ⅰ. Canvas介绍</h2><p>H5新增的一套编程接口，使用 Canvas API , 你可以在页面上绘制出任何你想要的图形与图像。</p><h4 id="_1-canvas元素" tabindex="-1"><a class="header-anchor" href="#_1-canvas元素" aria-hidden="true">#</a> 1. canvas元素</h4><p>canvas元素用来使用Canvas接口。专门用来绘制图形。<br> 在页面上放置一个canvas 元素，就相当于在页面上放置了一块“画布”，可以在其中描绘图形。<br> canvas 元素只是一块无色透明的区域。元素本身并没有绘制能力（它仅仅是图形的容器）需要利用 JavaScript 编写在其中进行绘画的脚本。</p><h4 id="_2-getcontext-方法" tabindex="-1"><a class="header-anchor" href="#_2-getcontext-方法" aria-hidden="true">#</a> 2. getContext()方法</h4><p>getContext() 方法可返回一个对象，该对象提供了用于在画布上绘图的方法和属性。 可以在HTML页面中使用多个 <code>&lt;canvas&gt;</code> 元素，其实只需要使用一个function方法便可，在方法内各个canvas不冲突，可以一个方法画好几个。</p><h4 id="_3-canvas的用途" tabindex="-1"><a class="header-anchor" href="#_3-canvas的用途" aria-hidden="true">#</a> 3. Canvas的用途</h4><ul><li>做很炫的页面特效</li><li>做H5游戏</li><li>模拟仿真(暂时不知道是什么)</li><li>网页富媒体(不太清楚是什么)</li></ul><h2 id="ii-放置canvas" tabindex="-1"><a class="header-anchor" href="#ii-放置canvas" aria-hidden="true">#</a> Ⅱ. 放置canvas</h2><h4 id="_1-指定canvas的三个属性" tabindex="-1"><a class="header-anchor" href="#_1-指定canvas的三个属性" aria-hidden="true">#</a> 1. 指定canvas的三个属性</h4><p>要指定 canvas的ID 、 width 、 height 三个属性。<br> id属性用来让js脚本引用，width和height属性定义画布的大小。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>canvas1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>400<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-在js脚本中绘制图形" tabindex="-1"><a class="header-anchor" href="#_2-在js脚本中绘制图形" aria-hidden="true">#</a> 2. 在JS脚本中绘制图形</h4><p>body属性中使用了<code>onload =&quot;draw(&#39;canvas&#39;);&quot;</code>语句。调用脚本文件中的draw函数描画图形。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">draw函数</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">draw</span> <span class="token punctuation">(</span><span class="token string">&#39;canvas1 &#39;</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>//参数是canvas对象(id)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-设置图形样式" tabindex="-1"><a class="header-anchor" href="#iii-设置图形样式" aria-hidden="true">#</a> Ⅲ. 设置图形样式</h2><h4 id="_1-linewidth-线宽" tabindex="-1"><a class="header-anchor" href="#_1-linewidth-线宽" aria-hidden="true">#</a> 1. lineWidth：线宽</h4><p>线条的粗细，用于stroke，属性的值必须是整数，默认是1。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context1<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-linecap-添加线帽" tabindex="-1"><a class="header-anchor" href="#_2-linecap-添加线帽" aria-hidden="true">#</a> 2. lineCap：添加线帽</h4><p>可以使用context对象的 lineCap 属性为直线添加线帽（端点样式）。 <strong>lineCap属性的属性值</strong></p><ul><li>butt：默认属性值，不为直线添加线帽。</li><li>round：为直线添加圆形线帽。</li><li>square：为直线添加正方形线帽。</li></ul><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">canvas1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    canvas1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context1 <span class="token operator">=</span> canvas1<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context1<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span>
    context1<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token comment">//如果线太细，线帽显示的不明显</span>
    context1<span class="token punctuation">.</span>lineCap <span class="token operator">=</span> <span class="token string">&quot;round&quot;</span><span class="token punctuation">;</span><span class="token comment">//设置路径之前先设置线帽</span>
    context1<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context1<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context1<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context1<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-linejoin-直线拐角" tabindex="-1"><a class="header-anchor" href="#_3-linejoin-直线拐角" aria-hidden="true">#</a> 3. lineJoin：直线拐角</h4><p>可以使用context对象的 lineJoin 属性指定两条直线交汇时的拐角形状（连接处样式） <strong>lineJoin的属性值</strong></p><ul><li>miter：默认属性值，创建尖角拐角。</li><li>round：创建圆角拐角。</li><li>bevel：创建斜角拐角。 <strong>示例</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span>getContext<span class="token operator">&lt;</span>&#39;2d<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;#EEEEFF&quot;</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">beginPath</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>lineJoin<span class="token operator">=</span><span class="token string">&quot;round&quot;</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">lineTo</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-miterlimit-linejoin-miter连接的斜面长度" tabindex="-1"><a class="header-anchor" href="#_4-miterlimit-linejoin-miter连接的斜面长度" aria-hidden="true">#</a> 4. miterLimit：lineJoin-&gt;miter连接的斜面长度</h4><p>当lineJoin设置为miter时，可以通过此属性设置斜面的长度，默认是10（既规定斜面长度不能超过线条宽度的10倍，</p><h4 id="_5-setlinedash-设置虚线" tabindex="-1"><a class="header-anchor" href="#_5-setlinedash-设置虚线" aria-hidden="true">#</a> 5. setLineDash：设置虚线</h4><p>使用context对象的 setLineDash 方法自定义绘图时使用的虚线形状。<br> setLineDash方法中使用一个参数，参数值为一个数组，其中存放一些用于设置线段长度以及线段与线段之间距离的数值（形成虚线）。</p><h5 id="_5-1-一个参数值" tabindex="-1"><a class="header-anchor" href="#_5-1-一个参数值" aria-hidden="true">#</a> 5.1 一个参数值</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//1.第一个数值代表线段长度，第二个数值表示线段与线段之间的距离.</span>
context<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-2-两个参数值" tabindex="-1"><a class="header-anchor" href="#_5-2-两个参数值" aria-hidden="true">#</a> 5.2 两个参数值</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//数组中只有一个数值时表示线段长度及线段与线段之间的距离都等于该数值。</span>
context<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-3-三个参数" tabindex="-1"><a class="header-anchor" href="#_5-3-三个参数" aria-hidden="true">#</a> 5.3 三个参数</h5><p>如果数组中数值数量超过2 , 则数组中的数值数量应该为偶数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//第奇数个数值代表线段长度，第偶数个数值表示线段与线段之间的距离</span>
context<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//线段长度将轮流为5、15,线段与线段之间的距离将轮流为10、20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-4-四个参数" tabindex="-1"><a class="header-anchor" href="#_5-4-四个参数" aria-hidden="true">#</a> 5.4 四个参数</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//如果数组中数值数量大于1且不为偶数,浏览器自动复制数组中数值使数组数量为偶数倍</span>
context<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-5-示例" tabindex="-1"><a class="header-anchor" href="#_5-5-示例" aria-hidden="true">#</a> 5.5 示例</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>；
    context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">&quot;EEEEFF&quot;</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>lineWidth<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">setLineDash</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以分别取1,2...等多个值</span>
    context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),c=[p];function o(i,l){return a(),s("div",null,c)}const r=n(e,[["render",o],["__file","5-1.概述.html.vue"]]);export{r as default};
