import{_ as a,o as n,c as s,e}from"./app-351da1f5.js";const i={},l=e(`<h2 id="i-编译器" tabindex="-1"><a class="header-anchor" href="#i-编译器" aria-hidden="true">#</a> Ⅰ. 编译器</h2><p>uni-app能实现一套代码、多端运行，核心是通过编译器 + 运行时实现的</p><h4 id="_1-编译器" tabindex="-1"><a class="header-anchor" href="#_1-编译器" aria-hidden="true">#</a> 1. 编译器</h4><p>将uni-app统一代码编译生成每个平台支持的特有代码；如在小程序平台，编译器将.vue文件拆分生成wxml、wxss、js等代码。</p><h4 id="_2-运行时" tabindex="-1"><a class="header-anchor" href="#_2-运行时" aria-hidden="true">#</a> 2. 运行时</h4><p>动态处理数据绑定、事件代理，保证Vue和平台宿主数据的一致性；</p><h4 id="_3-vue版本" tabindex="-1"><a class="header-anchor" href="#_3-vue版本" aria-hidden="true">#</a> 3. vue版本</h4><p>uni-app项目根据所依赖的Vue版本不同，编译器的实现也不同：</p><ul><li>vue2：uni-app编译器基于wepback实现</li><li>vue3：uni-app编译器基于Vite实现，编译速度更快。</li></ul><h4 id="_4-项目创建方式" tabindex="-1"><a class="header-anchor" href="#_4-项目创建方式" aria-hidden="true">#</a> 4. 项目创建方式</h4><p>uni-app项目根据创建方式的不同，编译器在使用上也有差异：</p><ul><li>cli 方式创建的项目，编译器安装在项目下。编译器不会跟随HBuilderX升级。如需升级编译器，可以使用 @dcloudio/uvm 管理编译器的版本，如 npx @dcloudio/uvm。</li><li>HBuilderX可视化界面创建的项目，编译器在HBuilderX的安装目录下的plugin目录，随着HBuilderX的升级会自动升级编译器。</li><li>已经使用cli创建的项目，如果想继续在HBuilderX里使用，可以把工程拖到HBuilderX中。注意如果是把整个项目拖入HBuilderX，则编译时走的是项目下的编译器。如果是把src目录拖入到HBuilderX中，则走的是HBuilderX安装目录下plugin目录下的编译器。</li></ul><h2 id="ii-条件编译" tabindex="-1"><a class="header-anchor" href="#ii-条件编译" aria-hidden="true">#</a> Ⅱ. 条件编译</h2><p>uni-app 已将常用的组件、JS API 封装到框架中，开发者按照 uni-app 规范开发即可保证多平台兼容，大部分业务均可直接满足。</p><p>对于特殊的组件，uniapp采用的是条件编译处理。</p><h4 id="_1-条件编译" tabindex="-1"><a class="header-anchor" href="#_1-条件编译" aria-hidden="true">#</a> 1. 条件编译</h4><p>条件编译是用特殊的注释作为标记，在编译时根据这些特殊的注释，将注释里面的代码编译到不同平台。</p><h5 id="_1-1-语法" tabindex="-1"><a class="header-anchor" href="#_1-1-语法" aria-hidden="true">#</a> 1.1 语法</h5><p>以 #ifdef 或 #ifndef 加 %PLATFORM% 开头，以 #endif 结尾</p><ul><li>#ifdef：if defined 仅在某平台存在</li><li>#ifndef：if not defined 除了某平台均存在</li><li>%PLATFORM%：平台名称</li></ul><h5 id="_1-2-示例" tabindex="-1"><a class="header-anchor" href="#_1-2-示例" aria-hidden="true">#</a> 1.2 示例</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>#ifdef <span class="token constant">APP</span><span class="token operator">-</span><span class="token constant">PLUS</span>
    code1  <span class="token comment">//仅出现在 App 平台下的代码</span>
#endif
#ifdef <span class="token constant">H5</span>
    code2  <span class="token comment">//除了 H5 平台，其它平台均存在的代码</span>
#endif
#ifdef <span class="token constant">H5</span><span class="token operator">||</span><span class="token constant">MP</span><span class="token operator">-</span><span class="token constant">WEIXIN</span>
    code3  <span class="token comment">//在 H5 平台或微信小程序平台存在的代码</span>
#endif
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-platform-常用可取值" tabindex="-1"><a class="header-anchor" href="#_1-3-platform-常用可取值" aria-hidden="true">#</a> 1.3 %PLATFORM% 常用可取值</h5><ul><li>VUE3</li><li>H5</li><li>MP-WEIXIN：微信</li><li>MP-TOUTIAO：字节</li><li>MP-QQ：QQ</li><li>MP-KUAISHOU：快手</li><li>MP：主流小程序</li></ul><h5 id="_1-4-支持的文件" tabindex="-1"><a class="header-anchor" href="#_1-4-支持的文件" aria-hidden="true">#</a> 1.4 支持的文件</h5><ul><li>vue</li><li>JS</li><li>CSS</li><li>pages.json</li><li>各种预编译语言：SCSS、TS等</li></ul><h5 id="_1-5-注意" tabindex="-1"><a class="header-anchor" href="#_1-5-注意" aria-hidden="true">#</a> 1.5 注意</h5><ul><li>条件编译是利用注释实现的，在不同语法里注释写法不一样 <ul><li>js使用 // 注释、css 使用 /* 注释 */、vue/nvue 模板里使用 <!-- 注释 -->；</li></ul></li><li>条件编译APP-PLUS包含APP-NVUE和APP-VUE，APP-PLUS-NVUE和APP-NVUE没什么区别，为了简写后面出了APP-NVUE ；</li><li>使用条件编译请保证编译前和编译后文件的正确性，比如json文件中不能有多余的逗号；</li><li>VUE3 需要在项目的 manifest.json 文件根节点配置 &quot;vueVersion&quot; : &quot;3&quot;</li></ul><h4 id="_2-api的条件编译" tabindex="-1"><a class="header-anchor" href="#_2-api的条件编译" aria-hidden="true">#</a> 2. API的条件编译</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// #ifdef  %PLATFORM%</span>
平台特有的<span class="token constant">API</span>实现
<span class="token comment">// #endif</span>

<span class="token comment">//# ifndef H5 </span>
uni<span class="token punctuation">.</span><span class="token function">scanCode</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">//该代码不会出现在H5平台上</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//#endif</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-组件的条件编译" tabindex="-1"><a class="header-anchor" href="#_3-组件的条件编译" aria-hidden="true">#</a> 3. 组件的条件编译</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  #ifdef  <span class="token operator">%</span><span class="token constant">PLATFORM</span><span class="token operator">%</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
平台特有的组件
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>  #endif <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>#ifdef <span class="token constant">MP</span><span class="token operator">-</span><span class="token constant">WEIXIN</span><span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token comment">//仅在微信小程序出现</span>
     <span class="token operator">&lt;</span>official<span class="token operator">-</span>account<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>official<span class="token operator">-</span>account<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>#endif<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-样式的条件编译" tabindex="-1"><a class="header-anchor" href="#_4-样式的条件编译" aria-hidden="true">#</a> 4. 样式的条件编译</h4><p>样式的条件编译，无论是 css 还是 sass/scss/less/stylus 等预编译语言中，必须使用 <code>/*注释*/ </code>的写法。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">/*  #ifdef  %PLATFORM%  */</span>
平台特有样式
<span class="token comment">/*  #endif  */</span>
<span class="token comment">/* #ifdef MP-WEIXIN */</span>
<span class="token punctuation">.</span>wx<span class="token operator">-</span>color<span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span>#fff000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/* #endif */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-pages-json的条件编译" tabindex="-1"><a class="header-anchor" href="#_5-pages-json的条件编译" aria-hidden="true">#</a> 5. pages.json的条件编译</h4><p>pages.json是用来配置页面路由和一些原生组合和原生样式的。<br> 不同平台下的特有功能，以及小程序平台的分包，都可以通过 pages.json 的条件编译来实现。</p><h4 id="_6-static目录的条件编译" tabindex="-1"><a class="header-anchor" href="#_6-static目录的条件编译" aria-hidden="true">#</a> 6. static目录的条件编译</h4><p>static目录是存放静态资源的，不同的平台引用不同的静态资源。在项目的static目录下，可以为不同的平台建立专用的目录。专有目录下的静态资源只有在特定平台才会编译进去。</p><h5 id="_6-1-目录名规范" tabindex="-1"><a class="header-anchor" href="#_6-1-目录名规范" aria-hidden="true">#</a> 6.1 目录名规范</h5><ul><li>app-plus：APP</li><li>h5：H5</li><li>mp-weixin：微信小程序</li><li>mp-qq：QQ小程序</li><li>mp-toutiao：字节小程序</li><li>mp-kuaishou：快手小程序</li></ul><h5 id="_6-2-效果" tabindex="-1"><a class="header-anchor" href="#_6-2-效果" aria-hidden="true">#</a> 6.2 效果</h5><p>专有目录下的静态资源只有在特定平台才会编译进去。<br> 直接在static目录下的资源，所有平台都会被编译。</p><h4 id="_7-整体目录条件编译" tabindex="-1"><a class="header-anchor" href="#_7-整体目录条件编译" aria-hidden="true">#</a> 7. 整体目录条件编译</h4><p>如果想把各平台的页面文件更彻底的分开，也可以在uni-app项目根目录创建platforms目录，然后在下面进一步创建app-plus、mp-weixin等子目录，存放不同平台的文件。</p><p>platforms目录下只支持放置页面文件（即页面vue文件），如果需要对其他资源条件编译，建议使用static 目录。</p><h4 id="_8-编译器配置" tabindex="-1"><a class="header-anchor" href="#_8-编译器配置" aria-hidden="true">#</a> 8. 编译器配置</h4><p>可以通过如下入口，对uni-app编译器进行配置：</p><ul><li>manifest.json：可以配置Vue的版本（Vue2/Vue3），以及发行H5平台路由模式</li><li>vue.config.js：修改 webpack 配置，包括环境变量</li><li>vite.config.js：修改 Vite 配置，包括环境变量</li><li>package.json：自定义条件编译平台时，可以在 package.json 文件的 env 节点下配置环境变量</li><li>.env：CLI 创建的项目中可以在根目录中放置 .env 文件来指定环境变量</li></ul><h2 id="iii-环境变量" tabindex="-1"><a class="header-anchor" href="#iii-环境变量" aria-hidden="true">#</a> Ⅲ. 环境变量</h2><p>uni-app 项目中配置环境变量主要有如下三种方式：</p><ul><li>vue-config.js：修改 webpack 配置，包括环境变量</li><li>package.json：在自定义条件编译平台时，可在 env 节点下配置环境变量</li><li>.env：CLI创建的项目，可在根目录创建.env文件指定环境变量</li></ul>`,52),p=[l];function t(o,r){return n(),s("div",null,p)}const d=a(i,[["render",t],["__file","3-1.编译器.html.vue"]]);export{d as default};
