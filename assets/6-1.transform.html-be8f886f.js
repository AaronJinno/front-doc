import{_ as n,o as a,c as s,e}from"./app-68218236.js";const t="/front-doc/img/basic/css/6-1-1.jpg",i="/front-doc/img/basic/css/6-1-2.jpg",p="/front-doc/img/basic/css/6-1-3.jpg",c={},o=e(`<p>transform属性应用于2D转换，该属性允许我们对元素进行旋转、缩放、移动或倾斜。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> none | transform-functions<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>transform设置变形函数，可以是一个或多个变形函数列表。</p><p>函数列表如下：</p><ul><li>rotate()：旋转元素对象，取值为一个度数值</li><li>scale()：缩放元素对象，可以使任意元素的尺寸发生变化</li><li>translate()：移动元素对象，基于X和Y轴坐标重新定位元素</li><li>skew()：倾斜元素对象。取值为度数</li><li>matrix()：定义矩形变换，基于X和Y轴重新定位元素位置</li></ul><h4 id="_1-rotate-旋转" tabindex="-1"><a class="header-anchor" href="#_1-rotate-旋转" aria-hidden="true">#</a> 1. rotate：旋转</h4><p>旋转元素对象，取值为一个度数值。如90edg（90°，一圈是360°）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token selector">div:hover</span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：取整数是顺时针旋转，取负数是逆时针旋转。</p><h4 id="_2-scale-缩放" tabindex="-1"><a class="header-anchor" href="#_2-scale-缩放" aria-hidden="true">#</a> 2. scale()：缩放</h4><p>缩放元素对象，可以使任意元素的尺寸发生变化。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token selector">a:hover</span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">scale</span><span class="token punctuation">(</span>1.2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>两个参数分别是宽和高要缩放的倍数，如果只有一个值，代表宽高缩放倍数相同。</p><p>当number取正数，代表放大number被，取小数就会缩小（放大零点几被就成了缩小了），当取值为负数时，会先进行翻转元素，然后再根据绝对值进行缩放。（图为去负数内容反转）。</p><h4 id="_3-translate-移动" tabindex="-1"><a class="header-anchor" href="#_3-translate-移动" aria-hidden="true">#</a> 3. translate：移动</h4><p>移动元素对象，基于X和Y轴重新定位元素坐标。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>x-value<span class="token punctuation">,</span>y-value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token selector">a:hover</span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">translate</span><span class="token punctuation">(</span>4px<span class="token punctuation">,</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>两个参数分别表示对于X轴和Y轴的移动数值， <ul><li>参数1：表示相对于原位置的x轴偏移距离；</li><li>参数2：表示相对于原位置的y轴偏移距离。（如果省略参数2，则取0）。</li></ul></li><li>如果取负值，表示反向移动。</li><li>x-value取0，就只移动y轴，只去一个值，就只移动X轴。</li></ul><h4 id="_4-skew-倾斜" tabindex="-1"><a class="header-anchor" href="#_4-skew-倾斜" aria-hidden="true">#</a> 4. skew()：倾斜</h4><p>skew() 函数定义了一个元素在二维平面上的倾斜转换。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">skew</span><span class="token punctuation">(</span>ax<span class="token punctuation">,</span>ay<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="6-1-1" tabindex="0" loading="lazy"><figcaption>6-1-1</figcaption></figure><ul><li>该函数的参数为两个角度，ax是元素横坐标的倾斜角度，ay是元素纵坐标的倾斜角度。</li><li>参数单位是deg，当只有一个参数时，ay为0，若想只在y轴倾斜，ax取0即可。</li><li>如果ax为正：表示元素沿水平方向（X轴）顺时针倾斜；如果度数为负，表示元素沿水平方向（X轴）逆时针倾斜。</li><li>如果ay为正，表示元素沿垂直方向（Y轴）顺时针倾斜；如果度数为负，表示元素沿垂直方向（Y轴）逆时针倾斜。</li></ul><p>注意：无论如何变形，元素的面积是不会改变的。</p><h5 id="_4-1-transform-skew-30deg-效果" tabindex="-1"><a class="header-anchor" href="#_4-1-transform-skew-30deg-效果" aria-hidden="true">#</a> 4.1 transform:skew(30deg)效果</h5><p>原理：由于给元素限定了高度，而skewX()方法是沿着X轴方向倾斜。所以，只要倾斜角度不是180°，元素都会保持100px的高度。同时为了保持倾斜，只能沿着X轴拉长本身。</p><figure><img src="'+i+'" alt="6-1-2" tabindex="0" loading="lazy"><figcaption>6-1-2</figcaption></figure><p>skew（30deg，0）；是按照垂直方向X轴，逆时针旋转30度。</p><h5 id="_4-2-transform-skew-0-30deg-效果" tabindex="-1"><a class="header-anchor" href="#_4-2-transform-skew-0-30deg-效果" aria-hidden="true">#</a> 4.2 transform:skew(0,30deg)效果</h5><p>skew（0，30deg）；是按照水平方向Y轴，顺时针旋转30度。</p><figure><img src="'+p+`" alt="6-1-3" tabindex="0" loading="lazy"><figcaption>6-1-3</figcaption></figure><h4 id="_5-matrix-矩阵" tabindex="-1"><a class="header-anchor" href="#_5-matrix-矩阵" aria-hidden="true">#</a> 5. matrix：矩阵</h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>暂略</p></div><h4 id="_6-transform-origin-定义变形原点" tabindex="-1"><a class="header-anchor" href="#_6-transform-origin-定义变形原点" aria-hidden="true">#</a> 6. transform-origin：定义变形原点</h4><p>CSS变形的原点默认为对象元素的中心点，可以使用transform-origin改变中心点。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform-origin</span><span class="token punctuation">:</span>[x-axis] [y-axis] [z-axis]<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>主要用于选择rotate，改变了中心点，就改变了旋转的中心点。</p><ul><li>z-axis是z轴，是3D变形时用的，2D变形可以忽略</li><li>取值：参数可以取值可以是百分比、em、px等具体值，也可以是left、center、right、top、middle、bottom等描述性关键字。【0% 0%是左上角】</li><li>默认值是50% 50%【中心点为原点】</li></ul><h4 id="_7-变形的简写形式" tabindex="-1"><a class="header-anchor" href="#_7-变形的简写形式" aria-hidden="true">#</a> 7. 变形的简写形式</h4><p>可以将多个变形效果，简写到一起。如：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>80<span class="token punctuation">,</span>80<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>40deg<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.4<span class="token punctuation">,</span>3<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,41),l=[o];function r(u,d){return a(),s("div",null,l)}const m=n(c,[["render",r],["__file","6-1.transform.html.vue"]]);export{m as default};
