import{_ as n,o as s,c as a,e as i}from"./app-c07941ad.js";const t={},e=i(`<h2 id="i-page-visibility" tabindex="-1"><a class="header-anchor" href="#i-page-visibility" aria-hidden="true">#</a> Ⅰ. Page Visibility</h2><p>该 API 允许开发者知道一个 Web 页面在何时变为可见或获取焦点（比如用户去看别的网页了，这个网页就是不可见了）。<br> 不管手机或桌面电脑，所有情况下，这个 API 都会监听到页面的可见性发生变化。</p><p>该API是用来节省资源的。一旦用户不看网页，下面这些网页行为都是可以暂停的。</p><ul><li>对服务器的轮询</li><li>网页动画</li><li>正在播放的音频或视频【这个电脑端一般不暂停，手机端可以暂停】</li></ul><h4 id="_1-visibilitystate属性" tabindex="-1"><a class="header-anchor" href="#_1-visibilitystate属性" aria-hidden="true">#</a> 1. visibilityState属性</h4><p>这个 API 主要在document对象上，新增了一个document.visibilityState属性。该属性返回一个字符串，表示页面当前的可见性状态，共有三个可能的值。</p><ul><li>hidden：页面彻底不可见。只有以下四种情况，才会返回hidden <ul><li>浏览器最小化。</li><li>浏览器没有最小化，但是当前页面切换成了背景页。</li><li>浏览器将要卸载（unload）页面。</li><li>操作系统触发锁屏屏幕。</li></ul></li><li>visible：页面至少一部分可见。只要页面可见，哪怕只露出一个角，document.visibilityState属性就返回visible</li><li>prerender：页面即将或正在渲染，处于不可见状态。 <ul><li>部分浏览器支持，以在用户不可见的状态下，预先把页面渲染出来，等到用户要浏览的时候，直接展示渲染好的网页。</li></ul></li></ul><h4 id="_2-visibilitychange事件" tabindex="-1"><a class="header-anchor" href="#_2-visibilitychange事件" aria-hidden="true">#</a> 2. visibilitychange事件</h4><p>只要document.visibilityState属性发生变化，就会触发visibilitychange事件。因此，可以通过监听这个事件（通过document.addEventListener()方法或document.onvisibilitychange属性），跟踪页面可见性的变化。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//当页面不可见时自动暂停视频，当页面可见时自动播放视频。</span>
<span class="token keyword">var</span> video <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByID</span><span class="token punctuation">(</span><span class="token string">&#39;videoplayer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;visibilitychange&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>doucment<span class="token punctuation">.</span>visibilityState <span class="token operator">==</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;页面不可见,暂停视频播放&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        video<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>visibilityState <span class="token operator">==</span> <span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;页面可见，继续播放&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        video<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-页面卸载" tabindex="-1"><a class="header-anchor" href="#_3-页面卸载" aria-hidden="true">#</a> 3. 页面卸载</h4><p>页面卸载可以分成三种情况：</p><ul><li>页面可见时，用户关闭 Tab 页或浏览器窗口。</li><li>页面可见时，用户在当前窗口前往另一个页面。</li><li>页面不可见时，用户或系统关闭浏览器窗口。</li></ul><p>这三种情况，都会触发visibilitychange事件。</p><h2 id="ii-fullscreen-api" tabindex="-1"><a class="header-anchor" href="#ii-fullscreen-api" aria-hidden="true">#</a> Ⅱ. Fullscreen API</h2><div class="hint-container danger"><p class="hint-container-title">警告</p><p>其作用为将页面整体或页面中某个局部区域设为全屏显示状态。</p><p>注意：该API官网显示为 不支持使用，可能会在未来修改或者移除，谨慎使用。</p><p>暂略</p></div>`,16),p=[e];function l(c,o){return s(),a("div",null,p)}const d=n(t,[["render",l],["__file","x-7.页面状态.html.vue"]]);export{d as default};
