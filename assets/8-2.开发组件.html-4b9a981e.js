import{_ as n,o as s,c as a,e}from"./app-68218236.js";const t={},p=e(`<div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意，TS是无法识别Vue组件的，导入Vue组件需要相关的配置。<br> 嫌麻烦直接将配置文件后缀改为JS，一了百了。</p></div><h4 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h4><p>Markdown中允许直接使用Vue模板语法，也允许直接使用Vue组件。</p><p>可以引入内置组件、第三方组件（包括UI库）或者自定义组件。</p><p>自定义组件一般存放的目录为：<code>/.vuepress/components</code></p><ul><li>全局组件：全局生效，可直接导入使用</li><li>根组件：全局生效，不用导入使用，默认就应用了</li><li>局部组件：需要手动导入，才能生效。</li></ul><h2 id="使用组件的方式" tabindex="-1"><a class="header-anchor" href="#使用组件的方式" aria-hidden="true">#</a> 使用组件的方式</h2><h4 id="_1-client-ts手动注册组件" tabindex="-1"><a class="header-anchor" href="#_1-client-ts手动注册组件" aria-hidden="true">#</a> 1. client.ts手动注册组件</h4><p>client.ts和config.ts配置文件同级，是用来添加客户端代码的（UI）。</p><p>基础客户端配置文件如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">layout</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rootComponents</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>enhance：enhance 函数会在客户端应用创建后被调用，你可以对 Vue 应用添加各种能力。enhance 函数既可以是同步的，也可以是异步的。它接收一个 Context 参数，包含以下属性： <ul><li>app：由 createApp 创建的 Vue 应用实例。可以用来注册全局Vue组件</li><li>router：是由 createRouter 创建的路由实例</li><li>siteData：是一个根据用户配置生成的 Ref 对象，包含 base, lang, title, description, head 和 locales。</li></ul></li><li>setup：setup 函数会在客户端 Vue 应用的 setup Hook 中被调用。这里面可以使用组合式API。</li><li>layout：用于设置布局组件。你在此处注册布局后，用户就可以通过 layout frontmatter 来使用它们。</li><li>rootComponents：rootComponents 是一个组件数组，它们将会直接被放置在客户端 Vue 应用的根节点下。该选项的典型使用方式就是放置一些全局的 UI 组件，比如全局弹窗等</li></ul><h4 id="_2-自动引入组件" tabindex="-1"><a class="header-anchor" href="#_2-自动引入组件" aria-hidden="true">#</a> 2. 自动引入组件</h4><p>可以使用@vuepress/plugin-register-components插件。</p><p>该插件会根据组件文件或目录自动注册 Vue 组件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> @vuepress/plugin-register-components@next
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要在config.js中配置该插件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getDirname<span class="token punctuation">,</span> path <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/utils&#39;</span>
<span class="token keyword">const</span> __dirname <span class="token operator">=</span> <span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">registerComponentsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">componentsDir</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./components&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">FooBar</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./components/FooBar.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-局部引入组件" tabindex="-1"><a class="header-anchor" href="#_3-局部引入组件" aria-hidden="true">#</a> 3. 局部引入组件</h4><p>上述两种方式都是全局引入，可以选择局部引入组件</p><p>暂略，还没搞明白</p><h4 id="_4-根组件" tabindex="-1"><a class="header-anchor" href="#_4-根组件" aria-hidden="true">#</a> 4. 根组件</h4><p>直接加入数组，全局直接生效</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>
<span class="token keyword">import</span> GlobalPopup <span class="token keyword">from</span> <span class="token string">&#39;./components/GlobalPopup.vue&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">rootComponents</span><span class="token operator">:</span> <span class="token punctuation">[</span>GlobalPopup<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用自定义组件" tabindex="-1"><a class="header-anchor" href="#使用自定义组件" aria-hidden="true">#</a> 使用自定义组件</h2><p>组件目录：<code>.vuepress/components/*</code></p><h4 id="_1-配置" tabindex="-1"><a class="header-anchor" href="#_1-配置" aria-hidden="true">#</a> 1. 配置</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vuepress/client&quot;</span>
<span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&quot;./components/MyComponent.vue&quot;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">enhance</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app<span class="token punctuation">,</span> router<span class="token punctuation">,</span> siteData <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;MyComponent&quot;</span><span class="token punctuation">,</span> MyComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-使用" tabindex="-1"><a class="header-anchor" href="#_2-使用" aria-hidden="true">#</a> 2. 使用</h4><p>在md文件中直接使用组件标签即可</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用第三方组件" tabindex="-1"><a class="header-anchor" href="#使用第三方组件" aria-hidden="true">#</a> 使用第三方组件</h2><h4 id="_1-示例-使用elementplus" tabindex="-1"><a class="header-anchor" href="#_1-示例-使用elementplus" aria-hidden="true">#</a> 1. 示例：使用ElementPlus</h4><p>下载后，在client.js中引入ElemenPlus</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineClientConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>
<span class="token keyword">import</span> ElementPlus <span class="token keyword">from</span> <span class="token string">&#39;element-plus&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;element-plus/dist/index.css&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;element-plus/theme-chalk/index.css&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineClientConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function">enhance</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> app<span class="token punctuation">,</span>router<span class="token punctuation">,</span>siteData <span class="token punctuation">}</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">layouts</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),o=[p];function i(c,l){return s(),a("div",null,o)}const r=n(t,[["render",i],["__file","8-2.开发组件.html.vue"]]);export{r as default};
