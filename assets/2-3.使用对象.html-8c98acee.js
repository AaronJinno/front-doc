import{_ as n,o as a,c as s,e}from"./app-351da1f5.js";const t={},p=e(`<h2 id="i-与" tabindex="-1"><a class="header-anchor" href="#i-与" aria-hidden="true">#</a> Ⅰ. <code>.</code> 与 <code>[]</code></h2><p>操作对象有两种语法，<code>.</code>语法和<code>[]</code>语法。</p><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. <code>.</code> 语法</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>对象<span class="token punctuation">.</span>成员名 <span class="token comment">//去对象找成员名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-语法" tabindex="-1"><a class="header-anchor" href="#_2-语法" aria-hidden="true">#</a> 2. <code>[]</code> 语法</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>对象<span class="token punctuation">[</span><span class="token string">&quot;成员名&quot;</span><span class="token operator">|</span> 变量<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//去当前脚本找变量(不加引号)或去对象找成员名(加引号);</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>[]</code>中可以是成员名（加引号），也可以存一个变量，当是一个变量的时候，变量的值是什么，就会去取对应的属性，比较灵活。</p><h4 id="_3-与-的区别" tabindex="-1"><a class="header-anchor" href="#_3-与-的区别" aria-hidden="true">#</a> 3. <code>.</code> 与 <code>[]</code>的区别</h4><ul><li>&quot;.&quot;: 点是静态的，右侧必须是对象的一个成员名标识符</li><li>&quot;[]&quot;: &quot;[]&quot; 可以传变量，因此他是动态的，同一个变量，可以表示不同的对象成员</li><li>&quot;[]&quot;: 中括号法可以用数字作为属性名,而点语法不可以</li></ul><p>必用&quot;[]&quot;的情况: 属性名包含特殊字符，或属性名是变量。</p><h4 id="_4-使用示例" tabindex="-1"><a class="header-anchor" href="#_4-使用示例" aria-hidden="true">#</a> 4. 使用示例</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> snake <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Snake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//使用for...in循环，遍历对象的成员</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> attr <span class="token keyword">in</span> snake<span class="token punctuation">)</span><span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到的是对象的成员变量名，而不是值。</span>
<span class="token comment">//访问属性对应的值：</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>snake<span class="token punctuation">.</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//undefined,没有该属性，无法使用.语法</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>snake<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//attr是变量的</span>
<span class="token punctuation">}</span>
<span class="token comment">//属性不是变量，使用中括号必须加引号</span>
<span class="token keyword">var</span> odiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">tab</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    odiv<span class="token punctuation">[</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;display&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;block&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-操作属性" tabindex="-1"><a class="header-anchor" href="#ii-操作属性" aria-hidden="true">#</a> Ⅱ. 操作属性</h2><h4 id="_1-添加属性" tabindex="-1"><a class="header-anchor" href="#_1-添加属性" aria-hidden="true">#</a> 1. 添加属性</h4><ul><li><code>对象.属性名 = 属性值</code></li><li><code>对象[属性名] = 属性值</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;jinno&#39;</span>
person<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-删除属性" tabindex="-1"><a class="header-anchor" href="#_2-删除属性" aria-hidden="true">#</a> 2. 删除属性</h4><ul><li><code>delete 对象.属性名</code></li><li><code>delete 对象[属性名]</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">delete</span> person<span class="token punctuation">.</span>name
<span class="token keyword">delete</span> aaron<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-修改属性" tabindex="-1"><a class="header-anchor" href="#_3-修改属性" aria-hidden="true">#</a> 3. 修改属性</h4><ul><li><code>对象.属性名 = 新属性值</code></li><li><code>对象[属性名] = 新属性值</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;aaron&#39;</span>
person<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;13&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-获取属性" tabindex="-1"><a class="header-anchor" href="#_4-获取属性" aria-hidden="true">#</a> 4. 获取属性</h4><ul><li><code>对象.属性名</code></li><li><code>对象[属性名]</code><br> 如果获取的属性不存在，就会返回undefined，不会报错。</li></ul><p>如果属性名还是一个对象的话，可以嵌套去该对象内部的属性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-操作方法" tabindex="-1"><a class="header-anchor" href="#iii-操作方法" aria-hidden="true">#</a> Ⅲ. 操作方法</h2><p>和操作属性基本一样</p><h4 id="_1-添加" tabindex="-1"><a class="header-anchor" href="#_1-添加" aria-hidden="true">#</a> 1. 添加</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>person<span class="token punctuation">.</span><span class="token function-variable function">dance</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    code
<span class="token punctuation">}</span><span class="token punctuation">;</span>

person<span class="token punctuation">[</span><span class="token string">&#39;dance&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    code
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-删除" tabindex="-1"><a class="header-anchor" href="#_2-删除" aria-hidden="true">#</a> 2. 删除</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">delete</span> person<span class="token punctuation">.</span>dance
<span class="token keyword">delete</span> person<span class="token punctuation">[</span>dance<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-修改" tabindex="-1"><a class="header-anchor" href="#_3-修改" aria-hidden="true">#</a> 3. 修改</h4><p>给原方法的变量重新赋值。</p><h4 id="_4-调用" tabindex="-1"><a class="header-anchor" href="#_4-调用" aria-hidden="true">#</a> 4. 调用</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>person<span class="token punctuation">.</span><span class="token function">dance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="iv-其他操作" tabindex="-1"><a class="header-anchor" href="#iv-其他操作" aria-hidden="true">#</a> Ⅳ. 其他操作</h2><h4 id="_1-with简便操作" tabindex="-1"><a class="header-anchor" href="#_1-with简便操作" aria-hidden="true">#</a> 1. with简便操作</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span>对象名<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//直接获取对象内部的成员</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-in-运算符" tabindex="-1"><a class="header-anchor" href="#_2-in-运算符" aria-hidden="true">#</a> 2. in 运算符</h4><p>通过该运算符可以检查一个对象中是否含有指定的属性。</p><p>如果有就返回true，没有则返回false。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&quot;属性名&quot;</span> <span class="token keyword">in</span> 对象

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">in</span> person<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//检查person对象里是否有name属性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-for-in-枚举属性" tabindex="-1"><a class="header-anchor" href="#_3-for-in-枚举属性" aria-hidden="true">#</a> 3. for in 枚举属性</h4><p>for in可以遍历对象的属性，一般用于使用对象时，不清楚对象内部的具体情况。</p><ul><li>对象中有几个属性，循环体就会执行几次</li><li>每次执行，会将对象中的属性名，赋值给变量</li><li>也可以直接使用for循环遍历对象属性</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> 变量 <span class="token keyword">in</span> 对象<span class="token punctuation">)</span><span class="token punctuation">{</span>
    循环体
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//打印对象的属性名</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//打印属性名对应的属性值</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),c=[p];function i(o,l){return a(),s("div",null,c)}const u=n(t,[["render",i],["__file","2-3.使用对象.html.vue"]]);export{u as default};
