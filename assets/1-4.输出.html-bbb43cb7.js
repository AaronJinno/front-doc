import{_ as n,o as a,c as s,e as t}from"./app-fb2cd4f5.js";const e={},o=t(`<p>以下函数用于输出，常用与测试。</p><h4 id="_1-alert" tabindex="-1"><a class="header-anchor" href="#_1-alert" aria-hidden="true">#</a> 1. alert()</h4><p>在浏览器弹出窗口输出变量的内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Aaron Jinno&quot;</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;helo,world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;I am \\n jinno&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>alert一次只能输出一个“内容”</li><li>写多个alert，会按写的顺序依次弹出</li><li>alert 内部无法使用HTML标签，想换行用“\\t”</li></ul><h4 id="_2-console-log" tabindex="-1"><a class="header-anchor" href="#_2-console-log" aria-hidden="true">#</a> 2. console.log()</h4><p>在控制台输出内容，打开控制台：F12或FN+F12或右键-&gt;审查元素-&gt;console。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Aaron Jinno&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;my name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;is&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jinno&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fuck \\n you&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>console.log可以写字符串、变量名和转义字符</li><li>console.log可以写多个字符串和变量，用逗号分开</li></ul><h4 id="_3-document-write" tabindex="-1"><a class="header-anchor" href="#_3-document-write" aria-hidden="true">#</a> 3. document.write()</h4><p>向body里面写入内容</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Aaron Jinno&quot;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">wirte</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;world &lt;h1&gt;你好&lt;/h1&gt;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;\\t fuck&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>document.write可以写变量、字符串、转义字符和HTML标签，</li><li>多个空格只显示一个,不识别换行的转义字符。</li><li>可以写多个内容。</li></ul><h4 id="_4-document-title" tabindex="-1"><a class="header-anchor" href="#_4-document-title" aria-hidden="true">#</a> 4. document.title</h4><p>向html文档的title部分写入内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Aaron Jinno&quot;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>title <span class="token operator">=</span> name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>document.title只能写变量</li><li>变量里的内容，只解析字符串</li></ul><h4 id="_5-输出unicode编码对应的值" tabindex="-1"><a class="header-anchor" href="#_5-输出unicode编码对应的值" aria-hidden="true">#</a> 5. 输出Unicode编码对应的值</h4><p>Unicode编码是采用16进制的值。可以在字符串中使用转义字符输出Unicode（转义字符为\\u）。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\\u1C00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20),p=[o];function c(i,l){return a(),s("div",null,p)}const r=n(e,[["render",c],["__file","1-4.输出.html.vue"]]);export{r as default};
