import{_ as n,o as a,c as s,e as t}from"./app-fb2cd4f5.js";const e="/front-doc/img/basic/js/5-4-1.jpg",o={},p=t('<h2 id="〇-bom对象" tabindex="-1"><a class="header-anchor" href="#〇-bom对象" aria-hidden="true">#</a> 〇. BOM对象</h2><h4 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h4><p>BOM：( browse object model)浏览器对象模型</p><ul><li>浏览器对象模型：各内置对象之间按照某种层次组织起来的模型的统称</li><li>浏览器对象：浏览器提供的一系列内置对象的统称</li><li>作用：通过JS操作浏览器，实现用户和页面的动态交互</li></ul><figure><img src="'+e+`" alt="5-4-1" tabindex="0" loading="lazy"><figcaption>5-4-1</figcaption></figure><h4 id="_2-相关对象" tabindex="-1"><a class="header-anchor" href="#_2-相关对象" aria-hidden="true">#</a> 2. 相关对象</h4><p>window对象是BOM的顶层（核心）对象。<br> 其他的对象都是以属性的方式添加到window对象下，也可称为window的子对象。</p><ul><li>document（文档对象）：也称为DOM对象，是HTML页面当前窗体的内容，同时也是JavaScript重要组成部分之一。</li><li>history（历史对象）：主要用于记录浏览器的访问历史记录，也就是浏览网页的前进与后退功能。</li><li>location（地址栏对象）：用于获取当前浏览器中URL地址栏内的相关数据。</li><li>navigator（浏览器对象）：用于获取浏览器的相关数据，例如浏览器的名称、版本等，也称为浏览器的嗅探器。</li><li>screen（屏幕对象）：可获取与屏幕相关的数据，例如屏幕的分辨率等。</li></ul><h2 id="i-window对象" tabindex="-1"><a class="header-anchor" href="#i-window对象" aria-hidden="true">#</a> Ⅰ. window对象</h2><p>一切对象的父对象，js默认对象，浏览器的整个窗口。</p><h4 id="_1-测试windows对象" tabindex="-1"><a class="header-anchor" href="#_1-测试windows对象" aria-hidden="true">#</a> 1. 测试windows对象</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>widow<span class="token punctuation">.</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;widow对象的子对象&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;dog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//该元素被成功的添加进了数组对象</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//window对象是默认对象，不加对象的方法都属于window.</span>
window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&quot;http://google.com&quot;</span><span class="token punctuation">;</span><span class="token comment">//loaction也是window的子对象。</span>

<span class="token comment">//全局变量和函数是 window 对象的属性，包括document对象</span>
window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;header&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-window对象常用方法" tabindex="-1"><a class="header-anchor" href="#_2-window对象常用方法" aria-hidden="true">#</a> 2. window对象常用方法</h4><ul><li>window.innerHeight - 浏览器窗口的内高度（以像素计）</li><li>window.innerWidth - 浏览器窗口的内宽度（以像素计）</li><li>document.body.clientHeight（视口，不包括工具栏和滚动条）</li><li>document.body.clientWidth（视口，不包括工具栏和滚动条）</li><li>window.open() - 打开新窗口</li><li>window.close() - 关闭当前窗口</li><li>window.moveTo() -移动当前窗口</li><li>window.resizeTo() -重新调整当前窗口</li></ul><h2 id="ii-creen对象" tabindex="-1"><a class="header-anchor" href="#ii-creen对象" aria-hidden="true">#</a> Ⅱ. creen对象</h2><p>获得用户屏幕的信息，window.screen 对象不带 window 前缀也可以写</p><ul><li>screen.width :屏幕分辨率宽度</li><li>screen.height:屏幕分辨率高度</li><li>screen.availWidth:可用宽度(去掉屏幕任务栏的宽度)</li><li>screen.availHeight:可用高度(去掉屏幕任务栏的高度)</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>availWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>screen<span class="token punctuation">.</span>availHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-location对象" tabindex="-1"><a class="header-anchor" href="#iii-location对象" aria-hidden="true">#</a> Ⅲ. location对象</h2><p>window.location 对象可用于获取当前页面地址（URL）并把浏览器重定向到新页面</p><ul><li>location.href 返回当前页面的 href (URL)</li><li>location.hostname 返回 web 主机的域名</li><li>location.pathname 返回当前页面的路径或文件名</li><li>location.protocol 返回使用的 web 协议（http: 或 https:）</li><li>location.port 属性返回（当前页面的）互联网主机端口的编号。</li><li>location.assign(href) 加载新文档（刷新或重载一个新页面）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">&quot;http://www.sgugo.com&quot;</span><span class="token punctuation">;</span><span class="token comment">//也可以自己location=</span>
<span class="token comment">//执行该文件,直接跳转到指定的URL地址.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iv-history对象" tabindex="-1"><a class="header-anchor" href="#iv-history对象" aria-hidden="true">#</a> Ⅳ. history对象</h2><p>history子对象用来操作历史记录，前提是网页需要有历史记录。</p><p>由于隐私的原因，该对象不能获取到具体的历史记录，只能操作浏览器向前或向后跳转。<br> 而且该操作只能在当次访问时有效。</p><ul><li>go(n)：前进/后退N部: n=正数:前进n;n&lt;0,后退n,n=0:刷新页面.</li><li>back()：后退1步</li><li>forward()：前进1步</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//先创建几个HTML页面，让他们相互调整，产生历史记录</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.go(-1)&quot;</span><span class="token operator">&gt;</span>后退<span class="token number">1</span>步<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.back()&quot;</span><span class="token operator">&gt;</span>后退<span class="token number">1</span>步<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.go(-2)&quot;</span><span class="token operator">&gt;</span>后退<span class="token number">2</span>步<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.go(1)&quot;</span><span class="token operator">&gt;</span>前进<span class="token number">1</span>步<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.go(2)&quot;</span><span class="token operator">&gt;</span>前进<span class="token number">2</span>步<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.forward()&quot;</span><span class="token operator">&gt;</span>前进<span class="token number">1</span>步<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;javascript:history.go(0)&quot;</span><span class="token operator">&gt;</span>刷新<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-navigator对象" tabindex="-1"><a class="header-anchor" href="#v-navigator对象" aria-hidden="true">#</a> Ⅴ. navigator对象</h2><p>获得浏览器的信息 ,识别不同的浏览器</p><h4 id="_1-浏览器基础信息" tabindex="-1"><a class="header-anchor" href="#_1-浏览器基础信息" aria-hidden="true">#</a> 1. 浏览器基础信息</h4><ul><li>浏览器内核名称:appName</li><li>浏览器和平台的版本信息:appVersion</li><li>与很想浏览器的操作系统平台:platform</li><li>userAgent:由客户机发送服务器的user-agent头部的值.【等价于浏览器】</li><li>浏览器的应用程序代码名称：appCodeName：Mozila（几乎包含所有浏览器）</li><li>language 属性返回浏览器语言：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Netscape：网景(几乎包含所有浏览器)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>appVersion<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//版本 4.0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>platforrm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// win64</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//浏览器发送的头信息.//谷歌,苹果,火狐一样.</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>language<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//ch-zn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-浏览器版本" tabindex="-1"><a class="header-anchor" href="#_2-浏览器版本" aria-hidden="true">#</a> 2. 浏览器版本</h4><p>来自 navigator 对象的信息通常是误导性的，不应该用于检测浏览器版本，因为：</p><ul><li>不同浏览器能够使用相同名称</li><li>导航数据可被浏览器拥有者更改</li><li>某些浏览器会错误标识自身以绕过站点测试</li><li>浏览器无法报告发布晚于浏览器的新操作系统</li></ul><h4 id="_3-cookieenabled" tabindex="-1"><a class="header-anchor" href="#_3-cookieenabled" aria-hidden="true">#</a> 3. cookieEnabled</h4><p>如果 cookie 已启用，cookieEnabled 属性返回 true，否则返回 false。</p><h4 id="_4-useragent" tabindex="-1"><a class="header-anchor" href="#_4-useragent" aria-hidden="true">#</a> 4. userAgent</h4><p>userAgent等价于浏览器本身，可以用来判断浏览器信息，userAgent是一个字符串，这个字符串中包含有用来描述浏览器信息的内容，不同的浏览器会有不同的userAgent。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">firefox</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;火狐&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">chrome</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;chrome&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">msie</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>ua<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;IE&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//无法识别IE11，只能识别IE11(eage)之前</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40),i=[p];function c(l,r){return a(),s("div",null,i)}const d=n(o,[["render",c],["__file","5-4.BOM对象.html.vue"]]);export{d as default};
