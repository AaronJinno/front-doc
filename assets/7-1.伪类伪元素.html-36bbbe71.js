import{_ as s,o as n,c as a,e}from"./app-fb2cd4f5.js";const t={},p=e(`<h2 id="i-伪类" tabindex="-1"><a class="header-anchor" href="#i-伪类" aria-hidden="true">#</a> Ⅰ. 伪类</h2><p>CSS伪类是用来添加一些选择器的特殊效果。</p><p>伪类选择元素基于的是当前元素处于的状态，或者说元素当前所具有的特性，而不是元素的id、class、属性等静态的标志。由于状态是动态变化的，所以一个元素达到一个特定状态时，它可能得到一个伪类的样式；当状态改变时，它又会失去这个样式。</p><p>由此可以看出，它的功能和class有些类似，但它是基于文档之外的抽象，所以叫伪类。例外的是<code>:first-child</code>能通过文档树推断出来，<code>:lang</code>在一些情况下也在从文档树中推断出来。</p><h4 id="_1-解析" tabindex="-1"><a class="header-anchor" href="#_1-解析" aria-hidden="true">#</a> 1. 解析</h4><p>伪类就是css内置类，css内部本身赋予它一些特性和功能，也就是你不用再class=...或id=...你就可以直接拿来使用，当然你也可以改变它的部分属性。</p><p>语法如下：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">selector:pseudo-class</span> <span class="token punctuation">{</span>
    <span class="token property">property</span><span class="token punctuation">:</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">selector.class:pseudo-class</span> <span class="token punctuation">{</span>
    <span class="token property">property</span><span class="token punctuation">:</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-anchor伪类-a链接的伪类" tabindex="-1"><a class="header-anchor" href="#_2-anchor伪类-a链接的伪类" aria-hidden="true">#</a> 2. anchor伪类（a链接的伪类）</h4><p>链接的不同状态都可以以不同的方式显示。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">a:link</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>#FF0000<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* 未访问的链接 */</span>
 <span class="token selector">a:visited</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>#00FF00<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* 已访问的链接 */</span>
 <span class="token selector">a:hover</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>#FF00FF<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* 鼠标划过链接 */</span>
 <span class="token selector">a:active</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>#0000FF<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">/* 已选中的链接 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-伪类和css类" tabindex="-1"><a class="header-anchor" href="#_3-伪类和css类" aria-hidden="true">#</a> 3. 伪类和CSS类</h4><p>伪类可以与 CSS 类配合使用：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">a.red:visited</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>#FF0000<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

&lt;a class=<span class="token string">&quot;red&quot;</span> href=<span class="token string">&quot;css-syntax.html&quot;</span>&gt;CSS 语法&lt;/a&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-first-child伪类" tabindex="-1"><a class="header-anchor" href="#_4-first-child伪类" aria-hidden="true">#</a> 4. :first-child伪类</h4><p>可以使用 :first-child 伪类来选择元素的第一个子元素</p><h5 id="_4-1-例-选择器匹配任何元素的第一个子元素" tabindex="-1"><a class="header-anchor" href="#_4-1-例-选择器匹配任何元素的第一个子元素" aria-hidden="true">#</a> 4.1 例：选择器匹配任何元素的第一个子元素</h5><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">p:first-child</span><span class="token punctuation">{</span>
    <span class="token comment">/* 所有元素的第一个P标签里的内容将变成红色的 */</span>
    <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- body标签的第一个子P标签，会变红 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This is some text.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This is some text.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>fuck<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>fuck<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- div标签的第一个子P标签，会变红 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>fuck<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-2-匹配所有指定元素a中的第一个子元素b" tabindex="-1"><a class="header-anchor" href="#_4-2-匹配所有指定元素a中的第一个子元素b" aria-hidden="true">#</a> 4.2 匹配所有指定元素A中的第一个子元素B</h5><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 选择相匹配的所有&lt;p&gt;元素的第一个 &lt;i&gt; 元素 */</span>
<span class="token selector">p &gt; i:first-child</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-3-匹配所有作为第一个子元素a中的所有b元素" tabindex="-1"><a class="header-anchor" href="#_4-3-匹配所有作为第一个子元素a中的所有b元素" aria-hidden="true">#</a> 4.3 匹配所有作为第一个子元素A中的所有B元素</h5><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 匹配所有作为元素的第一个子元素的 &lt;p&gt; 元素中的所有 &lt;i&gt; 元素 */</span>
<span class="token selector">p:first-child i</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-lang伪类" tabindex="-1"><a class="header-anchor" href="#_5-lang伪类" aria-hidden="true">#</a> 5. :lang伪类</h4><p>:lang 伪类使你有能力为不同的语言定义特殊的规则。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 例：:lang 类为属性值为 no 的q元素定义引号的类型 */</span>
<span class="token selector">q:lang(no)</span> <span class="token punctuation">{</span>
    <span class="token property">quotes</span><span class="token punctuation">:</span> <span class="token string">&quot;~&quot;</span> <span class="token string">&quot;~&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-链接伪类样式" tabindex="-1"><a class="header-anchor" href="#ii-链接伪类样式" aria-hidden="true">#</a> Ⅱ. 链接伪类样式</h2><h4 id="_1-链接的状态" tabindex="-1"><a class="header-anchor" href="#_1-链接的状态" aria-hidden="true">#</a> 1. 链接的状态</h4><ul><li>a:link - 正常，未访问过的链接</li><li>a:visited - 用户已访问过的链接</li><li>a:hover - 当用户鼠标放在链接上时</li><li>a:active - 链接被点击的那一刻</li></ul><h4 id="_2-伪类样式" tabindex="-1"><a class="header-anchor" href="#_2-伪类样式" aria-hidden="true">#</a> 2. 伪类样式</h4><p>链接的样式可以用任何CSS属性（如颜色，字体，背景等）。</p><p>同时链接的不同状态也可以有不同的样式，可为四种状态分别设置各类属性。</p><ul><li>a:hover 必须跟在 a:link 和 a:visited后面</li><li>a:active 必须跟在 a:hover后面</li></ul><h4 id="_3-文本修饰" tabindex="-1"><a class="header-anchor" href="#_3-文本修饰" aria-hidden="true">#</a> 3. 文本修饰</h4><p>text-decoration 属性主要用于删除链接中的下划线：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 想取消下划线只设置这一个就可以了 */</span>
<span class="token selector">a:link</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">a:visited</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>underline<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">a:active</span> <span class="token punctuation">{</span><span class="token property">text-decoration</span><span class="token punctuation">:</span>underline<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-常用样式" tabindex="-1"><a class="header-anchor" href="#_4-常用样式" aria-hidden="true">#</a> 4. 常用样式</h4><ul><li>背景颜色: 背景颜色属性指定链接背景色：<code>a:link {background-color:#B2FF99;}</code></li><li>链接颜色: <code>a:link {color:#000000;}</code></li><li>点击字体变大: <code>a:hover {font-size:150%;}</code></li></ul><h2 id="iii-伪元素" tabindex="-1"><a class="header-anchor" href="#iii-伪元素" aria-hidden="true">#</a> Ⅲ. 伪元素</h2><p>CSS伪元素是用来添加一些选择器的特殊效果。</p><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">selector:pseudo-element</span> <span class="token punctuation">{</span> <span class="token property">property</span><span class="token punctuation">:</span>value<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">selector.class:pseudo-element</span> <span class="token punctuation">{</span> <span class="token property">property</span><span class="token punctuation">:</span>value<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>伪元素是创造关于文档语言能够指定的文档树之外的抽象。例如文档语言不能提供访问元素内容第一字或者第一行的机制。</p><p>伪元素允许设计师引用它们，否则这是难以办到的。伪元素还提供样式设计师给在源文档中不存在的内容分配样式（例如：<code>:before</code>和<code>:after</code>能够访问产生的内容）。</p><h4 id="_1-first-line-伪元素" tabindex="-1"><a class="header-anchor" href="#_1-first-line-伪元素" aria-hidden="true">#</a> 1. <code>:first-line</code> 伪元素</h4><p><code>:first-line</code> 伪元素用于向文本的首行设置特殊样式。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 所有P元素的第一行文本进行格式化 */</span>
<span class="token selector">p:first-line</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>#ff0000<span class="token punctuation">;</span>
    <span class="token property">font-variant</span><span class="token punctuation">:</span>small-caps<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>:first-line</code> 伪元素只能用于块级元素。</p><h4 id="_2-first-letter-伪元素" tabindex="-1"><a class="header-anchor" href="#_2-first-letter-伪元素" aria-hidden="true">#</a> 2. <code>:first-letter</code> 伪元素</h4><p><code>:first-letter</code> 伪元素用于向文本的首字母设置特殊样式：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:first-letter</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>#ff0000<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span>xx-large<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>:first-letter</code> 伪元素只能用于块级元素。</p><h4 id="_3-伪元素和css类" tabindex="-1"><a class="header-anchor" href="#_3-伪元素和css类" aria-hidden="true">#</a> 3. 伪元素和CSS类</h4><p>伪元素可以结合CSS类：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 使所有 class 为 article 的段落的首字母变为红色 */</span>
<span class="token selector">p.article:first-letter</span> <span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>#ff0000<span class="token punctuation">;</span><span class="token punctuation">}</span>

&lt;p class=<span class="token string">&quot;article&quot;</span>&gt;文章段落&lt;/p&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-多个伪元素" tabindex="-1"><a class="header-anchor" href="#_4-多个伪元素" aria-hidden="true">#</a> 4. 多个伪元素</h4><p>可以结合多个伪元素来使用。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">p:first-letter</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>#ff0000<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span>xx-large<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">p:first-line</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span>#0000ff<span class="token punctuation">;</span>
    <span class="token property">font-variant</span><span class="token punctuation">:</span>small-caps<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-before伪元素" tabindex="-1"><a class="header-anchor" href="#_5-before伪元素" aria-hidden="true">#</a> 5. :before伪元素</h4><p><code>:before</code> 伪元素可以在元素的内容前面插入新内容。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1:before</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 每个 &lt;h1&gt;元素前面插入一幅图片 */</span>
    <span class="token property">content</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>smiley.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-after-伪元素" tabindex="-1"><a class="header-anchor" href="#_6-after-伪元素" aria-hidden="true">#</a> 6. <code>:after</code> 伪元素</h4><p><code>:after</code> 伪元素可以在元素的内容之后插入新内容。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h1:after</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 在每个 &lt;h1&gt; 元素后面插入一幅图片 */</span>
    <span class="token property">content</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>smiley.gif<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63),c=[p];function i(l,o){return n(),a("div",null,c)}const d=s(t,[["render",i],["__file","7-1.伪类伪元素.html.vue"]]);export{d as default};
