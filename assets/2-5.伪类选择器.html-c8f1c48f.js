import{_ as t,o as a,c as n,e as s}from"./app-277eb25d.js";const e={},l=s(`<br><p>伪类选择器可以对同一个元素不同状态、不同行为、不同特性等因素下的元素定义不同的样式。</p><h4 id="写法" tabindex="-1"><a class="header-anchor" href="#写法" aria-hidden="true">#</a> 写法</h4><p>以冒号作为前缀标识符，冒号前可以添加选择符，来限定伪类应用的范围；冒号后为伪类和伪元素名；冒号前后没有空格（必须）。</p><h4 id="伪类选择器的用法" tabindex="-1"><a class="header-anchor" href="#伪类选择器的用法" aria-hidden="true">#</a> 伪类选择器的用法</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 单纯式 */</span>
<span class="token selector">E:pseudo-class</span><span class="token punctuation">{</span><span class="token property">property</span><span class="token punctuation">:</span>value<span class="token punctuation">}</span>

<span class="token comment">/* 混用式  .user是class值*/</span>
<span class="token selector">E.user:pseudo-class</span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="i-动态伪类" tabindex="-1"><a class="header-anchor" href="#i-动态伪类" aria-hidden="true">#</a> Ⅰ. 动态伪类</h2><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">类型</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:left;">E:link</td><td style="text-align:left;">未点击的链接</td><td style="text-align:left;">匹配元素被定义了超链接并未被访问过。常用于链接描点上</td></tr><tr><td style="text-align:left;">E:visited</td><td style="text-align:left;">已被点击的链接</td><td style="text-align:left;">匹配元素被定义了超链接并已被访问过。常用于链接描点上</td></tr><tr><td style="text-align:left;">E:active</td><td style="text-align:left;">点击还未释放</td><td style="text-align:left;">匹配元素被激活。常用于链接描点和按钮上</td></tr><tr><td style="text-align:left;">E:hover</td><td style="text-align:left;">鼠标悬停</td><td style="text-align:left;">用户鼠标停留在元素E上。IE6及以下浏览器仅支持a:hover</td></tr><tr><td style="text-align:left;">E:focus</td><td style="text-align:left;">获得焦点</td><td style="text-align:left;">匹配元素获取焦点</td></tr></tbody></table><h4 id="_1-示例" tabindex="-1"><a class="header-anchor" href="#_1-示例" aria-hidden="true">#</a> 1. 示例</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token punctuation">:</span>link <span class="token comment">/* 未访问的链接 */</span>
<span class="token punctuation">:</span>visited <span class="token comment">/* 已访问的链接 */</span>
<span class="token punctuation">:</span>hover <span class="token comment">/* 鼠标移动到链接上 */</span>
<span class="token punctuation">:</span>active <span class="token comment">/* 选定的链接 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-顺序" tabindex="-1"><a class="header-anchor" href="#_2-顺序" aria-hidden="true">#</a> 2. 顺序</h4><p>注意写的时候，他们的顺序尽量不要颠倒 按照 lvha 的顺序。</p><h2 id="ii-目标伪类" tabindex="-1"><a class="header-anchor" href="#ii-目标伪类" aria-hidden="true">#</a> Ⅱ. 目标伪类</h2><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:left;">E:target</td><td style="text-align:left;">匹配相关URL指向的E元素</td></tr></tbody></table><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>当以链接或锚点的形式访问了E元素，则E元素会被立即选中，并应用设定好的样式。</p><p>这是一个动态的选择器。</p><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 在地址栏使用#a方位id锚点的方式访问div，被访问的div背景变蓝 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span>200px<span class="token punctuation">;</span><span class="token punctuation">}</span>
<span class="token selector">div:target</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>a<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>aaaaaaaaaa<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>b<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>bbbbbbbbbbbb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ccccccccc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>d<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>dddddddd<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>e<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>eeeeeeeee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-结构伪类" tabindex="-1"><a class="header-anchor" href="#iii-结构伪类" aria-hidden="true">#</a> Ⅲ. 结构伪类</h2><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:left;">E:first-child</td><td style="text-align:left;">作为父元素E的第一个子元素。与E:nth-child(1)等同</td></tr><tr><td style="text-align:left;">E:last-child</td><td style="text-align:left;">作为父元素E的最后一个子元素。与E:nth-last-child(1)等同</td></tr><tr><td style="text-align:left;">E:root</td><td style="text-align:left;">选择匹配元素E所在文档的根元素。在HTML文档中，根元素始终是html</td></tr><tr><td style="text-align:left;">F:nth-child(n)</td><td style="text-align:left;">选择父元素E的第n个子元素。</td></tr><tr><td style="text-align:left;">E :nth-last-child(n)</td><td style="text-align:left;">选择父元素E的倒数第n个子元素</td></tr><tr><td style="text-align:left;">E:nth-of-type(n)</td><td style="text-align:left;">匹配同类型中的第n个同级兄弟元素E</td></tr><tr><td style="text-align:left;">E:nth-last-of-type(n)</td><td style="text-align:left;">匹配同类型中的倒数第n个同级兄弟元素E</td></tr><tr><td style="text-align:left;">E:first-of-type</td><td style="text-align:left;">选择父元素内具有指定类型的第一个E元素，与E:nth-of-type(1)等同</td></tr><tr><td style="text-align:left;">E:last-of-type</td><td style="text-align:left;">选择父元素内具有指定类型的最后一个E元素，与E:nth-last-of-type(1)等同</td></tr><tr><td style="text-align:left;">E:only-child</td><td style="text-align:left;">选择父元素只包含一个子元素，且该子元素匹配E元素</td></tr><tr><td style="text-align:left;">E:only-of-type</td><td style="text-align:left;">选择父元素只包含一个同类型子元素，且该子元素匹配E元素</td></tr><tr><td style="text-align:left;">E:empty</td><td style="text-align:left;">选择没有子元素的元素，而且该元素也不包含任何文本节点</td></tr></tbody></table><h4 id="_1-first-child-last-child" tabindex="-1"><a class="header-anchor" href="#_1-first-child-last-child" aria-hidden="true">#</a> 1. <code>:first-child</code> / <code>:last-child</code></h4><p>选择某个元素的第一个与最后一个子元素</p><h4 id="_2-nth-child-n-的多种用法" tabindex="-1"><a class="header-anchor" href="#_2-nth-child-n-的多种用法" aria-hidden="true">#</a> 2. <code>:nth-child(n)</code>的多种用法</h4><p>nth-child有多种用法，如下</p><h5 id="_2-1-e-nth-child-length" tabindex="-1"><a class="header-anchor" href="#_2-1-e-nth-child-length" aria-hidden="true">#</a> 2.1 <code>E:nth-child(length)</code></h5><p>length为具体的数字，表示E元素的父元素的第length个子元素被选中（从0计算）。</p><h5 id="_2-2-e-nth-child-n" tabindex="-1"><a class="header-anchor" href="#_2-2-e-nth-child-n" aria-hidden="true">#</a> 2.2 <code>E:nth-child(n)</code></h5><p>n就是字母n,不可改变，直接使用n，表示E元素的父元素的所有子元素都会被选中</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* E元素父元素的所有子元素中，排在偶数的子元素被选中 */</span>
<span class="token property">E</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span>2n<span class="token punctuation">)</span> 
<span class="token comment">/* 同上，这次选中的是奇数 */</span>
<span class="token property">E</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span>2n-1<span class="token punctuation">)</span>
<span class="token comment">/* 除了前四个，都被选中 */</span>
<span class="token property">E</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span>n+5<span class="token punctuation">)</span>
<span class="token comment">/* 只选中了前4个 */</span>
<span class="token property">E</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span>-n+5<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-nth-last-child" tabindex="-1"><a class="header-anchor" href="#_3-nth-last-child" aria-hidden="true">#</a> 3. <code>:nth-last-child()</code></h4><p>与<code>:nth-child()</code>类似，只是这个是从后向前数的。</p><h4 id="_4-nth-of-type-nth-last-of-type" tabindex="-1"><a class="header-anchor" href="#_4-nth-of-type-nth-last-of-type" aria-hidden="true">#</a> 4. <code>nth-of-type()</code> / <code>:nth-last-of-type()</code></h4><p>与<code>:nth-child(n)</code>和<code>:nth-last-child()</code>基本类似，但是指定了元素的类型，就是冒号前面的元素。</p><h4 id="_5-fist-of-type-last-of-type" tabindex="-1"><a class="header-anchor" href="#_5-fist-of-type-last-of-type" aria-hidden="true">#</a> 5. <code>fist-of-type</code> / <code>:last-of-type</code></h4><p>与<code>:first-child</code> / <code>:last-child</code>类似，不同之处是这里指定了类型。</p><h4 id="_6-only-child-only-of-type" tabindex="-1"><a class="header-anchor" href="#_6-only-child-only-of-type" aria-hidden="true">#</a> 6. <code>only-child</code>，<code>only-of-type</code></h4><h5 id="_6-1-e-only-child-e是独生子则e被选中" tabindex="-1"><a class="header-anchor" href="#_6-1-e-only-child-e是独生子则e被选中" aria-hidden="true">#</a> 6.1 <code>E:only-child</code>：E是独生子则E被选中</h5><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 当div元素只有一个子元素P时，会被选中 */</span>
div <span class="token property">p</span><span class="token punctuation">:</span>only-child
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-2-e-only-of-type-父母有多个孩子-但是只有e是单一性别时被选中" tabindex="-1"><a class="header-anchor" href="#_6-2-e-only-of-type-父母有多个孩子-但是只有e是单一性别时被选中" aria-hidden="true">#</a> 6.2 <code>E:only-of-type</code>：父母有多个孩子，但是只有E是单一性别时被选中</h5><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 当div有多个子元素，子元素里只有一个是p元素时，p元素被选中 */</span>
div <span class="token property">p</span><span class="token punctuation">:</span><span class="token property">only-of-type</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-empty" tabindex="-1"><a class="header-anchor" href="#_7-empty" aria-hidden="true">#</a> 7. <code>:empty</code></h4><p>选中没有任何内容的元素，连空格也不能有。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 隐藏没有内容的p元素 */</span>
<span class="token selector">p:empty</span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iv-否定伪类" tabindex="-1"><a class="header-anchor" href="#iv-否定伪类" aria-hidden="true">#</a> Ⅳ. 否定伪类</h2><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:left;">E:not(F)</td><td style="text-align:left;">匹配所有除元素F外的E元素</td></tr></tbody></table><h2 id="v-状态伪类" tabindex="-1"><a class="header-anchor" href="#v-状态伪类" aria-hidden="true">#</a> Ⅴ. 状态伪类</h2><p>作用：为表单元素的不同状态配备不同的CSS。</p><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">:first-letter</td><td style="text-align:left;">向文本的第一个字母（英文或中文）添加样式</td></tr><tr><td style="text-align:left;">:first-line</td><td style="text-align:left;">向文本的首行添加样式， 只能与块级元素关联</td></tr><tr><td style="text-align:left;">:before</td><td style="text-align:left;">在元素内部所有子元素之前添加内容</td></tr><tr><td style="text-align:left;">:after</td><td style="text-align:left;">在元素内部所有子元素之后添加内容</td></tr></tbody></table>`,49),i=[l];function c(d,p){return a(),n("div",null,i)}const r=t(e,[["render",c],["__file","2-5.伪类选择器.html.vue"]]);export{r as default};
