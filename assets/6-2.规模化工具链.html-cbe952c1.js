import{_ as n,r as s,o,c as d,a as e,b as a,d as i,e as t}from"./app-f9b28035.js";const l={},h=t('<h4 id="_1-vue-cli" tabindex="-1"><a class="header-anchor" href="#_1-vue-cli" aria-hidden="true">#</a> 1. vue cli</h4><p>Vue3推荐使用Vite脚手架构建Vue项目。</p><h4 id="_2-ide支持" tabindex="-1"><a class="header-anchor" href="#_2-ide支持" aria-hidden="true">#</a> 2. IDE支持</h4><p>推荐使用的 IDE 是 VSCode，配合 Volar 插件。</p><h4 id="_3-浏览器开发者插件" tabindex="-1"><a class="header-anchor" href="#_3-浏览器开发者插件" aria-hidden="true">#</a> 3. 浏览器开发者插件</h4>',5),c={href:"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd",target:"_blank",rel:"noopener noreferrer"},_=t('<p>该插件使我们可以浏览一个 Vue 应用的组件树，查看各个组件的状态，追踪状态管理的事件，还可以进行组件性能分析。</p><h4 id="_4-ts" tabindex="-1"><a class="header-anchor" href="#_4-ts" aria-hidden="true">#</a> 4. TS</h4><p>Vue支持TS，且源码改为了TS。</p><h4 id="_5-测试" tabindex="-1"><a class="header-anchor" href="#_5-测试" aria-hidden="true">#</a> 5. 测试</h4><ul><li>Cypress 推荐用于 E2E 测试。也可以通过 Cypress 组件测试运行器来给 Vue SFC 作单文件组件测试。</li><li>Vitest 是一个追求更快运行速度的测试运行器，由 Vue / Vite 团队成员开发。主要针对基于 Vite 的应用设计，可以为组件提供即时响应的测试反馈。</li><li>Jest 可以通过 vite-jest 配合 Vite 使用。不过只推荐在你已经有一套基于 Jest 的测试集、且想要迁移到基于 Vite 的开发配置时使用，因为 Vitest 也能够提供类似的功能，且后者与 Vite 的集成更方便高效。</li></ul><h4 id="_6-代码规范" tabindex="-1"><a class="header-anchor" href="#_6-代码规范" aria-hidden="true">#</a> 6. 代码规范</h4>',6),u=e("code",null,"npm install -D eslint eslint-plugin-vue",-1),p=e("br",null,null,-1),V={href:"https://eslint.vuejs.org/user-guide/#usage",target:"_blank",rel:"noopener noreferrer"},f=t('<p><strong>ESLint IDE插件</strong><br> 用 ESLint IDE 插件，比如 ESLint for VSCode，然后就可以在开发时获得规范检查器的反馈。<br> 这同时也避免了启动开发服务器时不必要的规范检查。</p><h4 id="_7-格式化" tabindex="-1"><a class="header-anchor" href="#_7-格式化" aria-hidden="true">#</a> 7. 格式化</h4><p>Volar VSCode 插件为 Vue SFC 提供了开箱即用的格式化功能。</p><h4 id="_8-fc自定义块集成" tabindex="-1"><a class="header-anchor" href="#_8-fc自定义块集成" aria-hidden="true">#</a> 8. FC自定义块集成</h4><p>自定义块被编译成导入到同一 Vue 文件的不同请求查询。这取决于底层构建工具如何处理这类导入请求。</p><ul><li>如果使用 Vite，需使用一个自定义 Vite 插件将自定义块转换为可执行的 JavaScript 代码。</li><li>如果使用 Vue CLI 或只是 webpack，需要使用一个 loader 来配置如何转换匹配到的自定义块。</li></ul>',6);function b(v,g){const r=s("ExternalLinkIcon");return o(),d("div",null,[h,e("p",null,[e("a",c,[a("点击安装 Vue.js devtools"),i(r)])]),_,e("p",null,[a("推荐安装："),u,a("，然后遵照 eslint-plugin-vue 的指引进行配置。"),p,e("a",V,[a("查看eslint-plugin-vue"),i(r)])]),f])}const S=n(l,[["render",b],["__file","6-2.规模化工具链.html.vue"]]);export{S as default};
