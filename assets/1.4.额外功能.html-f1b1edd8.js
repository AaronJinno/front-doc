import{_ as n,o as a,c as s,e}from"./app-8888c5c9.js";const p={},t=e(`<h2 id="主题" tabindex="-1"><a class="header-anchor" href="#主题" aria-hidden="true">#</a> 主题</h2><p>VuePress 主题提供了布局、样式和其他功能，帮助你专注于 Markdown 内容的写作。</p><h4 id="_1-默认主题" tabindex="-1"><a class="header-anchor" href="#_1-默认主题" aria-hidden="true">#</a> 1. 默认主题</h4><p>VuePress 有一个开箱即用的默认主题，如果不指定要使用的主题，那么就会自动使用默认主题。</p><h4 id="_2-默认主题的配置" tabindex="-1"><a class="header-anchor" href="#_2-默认主题的配置" aria-hidden="true">#</a> 2. 默认主题的配置</h4><p>为了配置默认主题，需要在配置文件中通过 theme 配置项来使用它：</p><p>更多配置详见：主题配置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defaultTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vuepress&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token function">defaultTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 默认主题配置</span>
    <span class="token literal-property property">navbar</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;首页&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-社区主题" tabindex="-1"><a class="header-anchor" href="#_3-社区主题" aria-hidden="true">#</a> 3. 社区主题</h4><p>社区用户创建了很多主题，并将它们发布到了 NPM 上。查看主题本身的文档可以获取更详细的指引</p><p>主题可以在github上寻找</p><h4 id="_4-本地主题-自定义主题" tabindex="-1"><a class="header-anchor" href="#_4-本地主题-自定义主题" aria-hidden="true">#</a> 4. 本地主题：自定义主题</h4><p>使用自己的自定义主题，但是又不想发布它，可以创建一个本地主题。</p><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2><p>借助于 插件 API ， VuePress 插件可以提供各种不同的功能。</p><h4 id="_1-插件类型" tabindex="-1"><a class="header-anchor" href="#_1-插件类型" aria-hidden="true">#</a> 1. 插件类型</h4><ul><li>官方插件：官方内置了很多常用的插件，详见官方插件。</li><li>社区插件：社区用户创建了很多插件，并将它们发布到了 NPM 上。</li><li>题插件：框架主题往往也集成了很多插件。</li></ul><h4 id="_2-导入插件" tabindex="-1"><a class="header-anchor" href="#_2-导入插件" aria-hidden="true">#</a> 2. 导入插件</h4><p>需要导入插件并通过配置文件的 plugins 配置项来使用它。</p><p>例如：使用 @vuepress/plugin-google-analytics 来使用 Google Analytics ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> googleAnalyticsPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/plugin-google-analytics&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">googleAnalyticsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;G-XXXXXXXXXX&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-本地插件" tabindex="-1"><a class="header-anchor" href="#_3-本地插件" aria-hidden="true">#</a> 3. 本地插件</h4><p>如果你想要使用自己的插件，但是又不想发布它，你可以创建一个本地插件。</p><p>PS：推荐你直接将 配置文件 作为插件使用，因为 几乎所有的插件 API 都可以在配置文件中使用</p><p>如果你在配置文件中要做的事情太多了，你可以考虑将它们提取到单独的插件中，然后在你的配置文件中使用它们</p><h2 id="组件" tabindex="-1"><a class="header-anchor" href="#组件" aria-hidden="true">#</a> 组件</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>vuepress 是基于Vue的，因此也兼容Vue语法，可以在Markdown文档里，插入自定义的组件，或者是第三方的组件。</p></div>`,27),i=[t];function l(o,r){return a(),s("div",null,i)}const d=n(p,[["render",l],["__file","1.4.额外功能.html.vue"]]);export{d as default};
