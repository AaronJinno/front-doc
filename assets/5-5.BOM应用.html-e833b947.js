import{_ as a,P as n,Q as e,a5 as s}from"./framework-3728cbf1.js";const i={},o=s(`<h2 id="i-cookie" tabindex="-1"><a class="header-anchor" href="#i-cookie" aria-hidden="true">#</a> Ⅰ. Cookie</h2><p>JavaScript 可以用 document.cookie 属性创建、读取、删除 cookie。</p><p>操作比较复杂，建议下载cookie插件【jquery.cookie.js；或cookie.js】</p><h4 id="_1-创建cookie" tabindex="-1"><a class="header-anchor" href="#_1-创建cookie" aria-hidden="true">#</a> 1. 创建cookie</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie <span class="token operator">=</span> <span class="token string">&quot;uname=jinno&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//设置cookie并制定cookie的相关属性</span>
doucment<span class="token punctuation">.</span>cookie<span class="token operator">=</span><span class="token string">&quot;uname=jinno; expires=Sun,31 Dec 2020 12:00:00 UTC;path=/&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>expires指定cookie的时间，只能指定UTC时间</li><li>各个参数以&quot;;&quot;分隔</li></ul><h4 id="_2-读取cookie" tabindex="-1"><a class="header-anchor" href="#_2-读取cookie" aria-hidden="true">#</a> 2. 读取cookie</h4><p>只能读取全部cookie，无法只读取一条，可以使用字符串函数获取想要的cookie</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span><span class="token comment">//返回所有cookie</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-改变cookie" tabindex="-1"><a class="header-anchor" href="#_3-改变cookie" aria-hidden="true">#</a> 3. 改变cookie</h4><p>以创建新cookie的方式覆盖旧cookie。</p><h4 id="_4-删除cookie" tabindex="-1"><a class="header-anchor" href="#_4-删除cookie" aria-hidden="true">#</a> 4. 删除cookie</h4><p>直接把 expires 参数设置为过去的日期即可</p><h2 id="ii-弹出框" tabindex="-1"><a class="header-anchor" href="#ii-弹出框" aria-hidden="true">#</a> Ⅱ. 弹出框</h2><p>JavaScript 有三种类型的弹出框：警告框、确认框和提示框。</p><h4 id="_1-alert-警告框" tabindex="-1"><a class="header-anchor" href="#_1-alert-警告框" aria-hidden="true">#</a> 1. alert()：警告框</h4><p>如果要确保信息传递给用户，通常会使用警告框。</p><p>当警告框弹出时，用户将需要单击“确定”来继续。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;sometext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-confirm-确认框" tabindex="-1"><a class="header-anchor" href="#_2-confirm-确认框" aria-hidden="true">#</a> 2. confirm()：确认框</h4><p>如果您希望用户验证或接受某个东西，则通常使用“确认”框。</p><p>当确认框弹出时，用户将不得不单击“确定”或“取消”来继续进行。 如果用户单击“确定”，该框返回 true。如果用户单击“取消”，该框返回 false。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&quot;sometext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-prompt-提示框" tabindex="-1"><a class="header-anchor" href="#_3-prompt-提示框" aria-hidden="true">#</a> 3. prompt()：提示框</h4><p>如果您希望用户在进入页面前输入值，通常会使用提示框。</p><p>当提示框弹出时，用户将不得不输入值后单击“确定”或点击“取消”来继续进行。 如果用户单击“确定”，该框返回输入值。如果用户单击“取消”，该框返回 NULL。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&quot;sometext&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;defaultText&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//如需在弹出框中显示折行，请在反斜杠后面加一个字符 n。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,27),t=[o];function c(p,r){return n(),e("div",null,t)}const l=a(i,[["render",c],["__file","5-5.BOM应用.html.vue"]]);export{l as default};
