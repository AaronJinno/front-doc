import{_ as e,o as a,c as i,e as s}from"./app-fb2cd4f5.js";const n={},d=s(`<h4 id="_1-控制台-开发者调试工具" tabindex="-1"><a class="header-anchor" href="#_1-控制台-开发者调试工具" aria-hidden="true">#</a> 1. 控制台：开发者调试工具</h4><ul><li>JS是委婉的出现错误提示</li><li>JS中的错误需要使用工具查看，浏览器F12-&gt;控制台[ console ]-&gt;调试工具</li><li>调试工具可供开发人员调试，可以输出等</li></ul><h4 id="_2-注释" tabindex="-1"><a class="header-anchor" href="#_2-注释" aria-hidden="true">#</a> 2. 注释</h4><p>分为单行注释和多行注释。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 单行注释 */</span>

<span class="token comment">/*
*多行注释
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-语句" tabindex="-1"><a class="header-anchor" href="#_3-语句" aria-hidden="true">#</a> 3. 语句</h4><ul><li>JavaScript中的语句以一个分号作为结尾</li><li>如果省略分号，则由解析器确定语句的结尾，一般情况下换行会被当做一个语句的结尾</li><li>严格要求加上分号，有时要把多行代码放到一行</li></ul><h4 id="_4-代码块" tabindex="-1"><a class="header-anchor" href="#_4-代码块" aria-hidden="true">#</a> 4. 代码块</h4><p>JS中，可以使用{}为语句进行分组，同一个{}中的语句我们称为一组语句，要么都 执行，要么都不执行。一个{}中的语句我们也称为一个代码块。</p><ul><li>代码块后面不用再编写 <code>;</code> 了</li><li>JS的代码块，只有分组的作用，没有其他作用</li><li>代码块内部的内容，外部是完全可用的（可访问）</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token punctuation">{</span>
    //多行代码
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-规范" tabindex="-1"><a class="header-anchor" href="#_5-规范" aria-hidden="true">#</a> 5. 规范</h4><p>建议将 <code>&lt;script&gt;</code> 的结束放在页面的 <code>&lt;/body&gt;</code> 之前以符合新移动WEB规范</p>`,13),l=[d];function c(r,t){return a(),i("div",null,l)}const u=e(n,[["render",c],["__file","1-2.基础语法.html.vue"]]);export{u as default};
