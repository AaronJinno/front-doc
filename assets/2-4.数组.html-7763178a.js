import{_ as n,o as a,c as s,e}from"./app-ba294a04.js";const p={},t=e(`<p>数组也是一个对象，它和普通的对象功能类似，也是用来储存一些值的，不同的是普通对象是使用字符串作为属性名的，而数组是使用数字作为索引操作元素的。</p><ul><li>数组和对象的数据类型都是object【都是复合型数据】 <ul><li>使用typeof检测数组是object类型</li></ul></li><li>数组只能保存索引数组。如果要定义关联数组，可以使用对象。</li><li>数组属于内置对象。</li><li>数组的存储性能比普通对象好，开发中经常使用数组来存储一些数据。</li></ul><h4 id="_1-创建数组" tabindex="-1"><a class="header-anchor" href="#_1-创建数组" aria-hidden="true">#</a> 1. 创建数组</h4><p>数组的构造函数是new Array()，可用构造函数创建数组。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//new Array(),必须是首字母大写的Array()</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">//向数组中添加元素</span>
数组<span class="token punctuation">[</span>索引<span class="token punctuation">]</span> <span class="token operator">=</span> 值
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span>

<span class="token comment">//创建数组的同时赋值</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;wangwu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">//读取数组中的元素，如果读取不存在的索引，不会报错，而是返回undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">//创建数组时指定数组的长度</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-获取数组长度" tabindex="-1"><a class="header-anchor" href="#_2-获取数组长度" aria-hidden="true">#</a> 2. 获取数组长度</h4><p>获取数组的长度，使用length属性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_2-1-非连续数组" tabindex="-1"><a class="header-anchor" href="#_2-1-非连续数组" aria-hidden="true">#</a> 2.1 非连续数组</h5><p>对于连续的数组，使用length可以获取数组的长度（元素的个数）。<br> 对于非连续的数组，使用length会获取到数组最大的索引+1；<br> 尽量不要创建非连续的数组（系统会默认占位的）。</p><h5 id="_2-2-修改长度" tabindex="-1"><a class="header-anchor" href="#_2-2-修改长度" aria-hidden="true">#</a> 2.2 修改长度</h5><p>可以通过修改length删除一些元素。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>如果修改的length大于原长度，则多余的部分会空出来。</li><li>如果修改的length小于原长度，则多余的元素会被删除。</li></ul><h5 id="_2-3-length的意义" tabindex="-1"><a class="header-anchor" href="#_2-3-length的意义" aria-hidden="true">#</a> 2.3 length的意义</h5><p>可以向数组的最大索引+1的位置添加数据。<br> arr.length就是最大索引+1。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">70</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-数组的值" tabindex="-1"><a class="header-anchor" href="#_3-数组的值" aria-hidden="true">#</a> 3. 数组的值</h4><p>数组中的元素可以是任意数据类型，也可以是对象。</p><p>数组中也可以放数组【嵌套】，成为二维数组（多维数组）。</p><h4 id="_4-数组字面量" tabindex="-1"><a class="header-anchor" href="#_4-数组字面量" aria-hidden="true">#</a> 4. 数组字面量</h4><p>数组字面量和函数字面量类似，也可以用来创建数组，并可以在创建数组时指定数组中的元素。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//创建一个数组，数组中只有一个元素10</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建一个长度为10的数组</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-数组的属性" tabindex="-1"><a class="header-anchor" href="#_5-数组的属性" aria-hidden="true">#</a> 5. 数组的属性</h4><p>数组也拥有length属性。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span>length
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_6-数组的遍历" tabindex="-1"><a class="header-anchor" href="#_6-数组的遍历" aria-hidden="true">#</a> 6. 数组的遍历</h4><p>将数组中所有的元素都取出来。</p><h5 id="_6-1-for-遍历" tabindex="-1"><a class="header-anchor" href="#_6-1-for-遍历" aria-hidden="true">#</a> 6.1 for 遍历</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-2-for-in-遍历" tabindex="-1"><a class="header-anchor" href="#_6-2-for-in-遍历" aria-hidden="true">#</a> 6.2 for...in 遍历</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> a <span class="token keyword">in</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//每遍历一次，将该元素的下标赋值给变量</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-3-foreach遍历" tabindex="-1"><a class="header-anchor" href="#_6-3-foreach遍历" aria-hidden="true">#</a> 6.3 forEach遍历</h5><p>foreach()需要一个函数作为参数，数组中有几个元素，函数就会执行几次。</p><p>每次执行时，浏览器会将遍历到的元素以实参的形式传递过来，我们可以定义形参来读取。<br> 浏览器会在回调函数中传递三个参数。</p><ul><li>参数1：当前正在遍历的元素</li><li>参数2：当前正在遍历的元素的索引</li><li>参数3：正在遍历的数组对象。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>arr<span class="token punctuation">.</span><span class="token function">foreach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>inx<span class="token punctuation">,</span>obj</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-数组的方法" tabindex="-1"><a class="header-anchor" href="#_7-数组的方法" aria-hidden="true">#</a> 7. 数组的方法</h4><p>数组属于内置对象，详见内置对象。</p>`,39),c=[t];function o(i,l){return a(),s("div",null,c)}const u=n(p,[["render",o],["__file","2-4.数组.html.vue"]]);export{u as default};
