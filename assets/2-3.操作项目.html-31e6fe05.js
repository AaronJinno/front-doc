import{_ as a,o as e,c as i,e as n}from"./app-c07941ad.js";const s="/front-doc/img/vue/vue/2-3-1.png",t="/front-doc/img/vue/vue/2-3-2.png",r="/front-doc/img/vue/vue/2-3-3.png",o="/front-doc/img/vue/vue/2-3-4.png",c="/front-doc/img/vue/vue/2-3-5.png",d="/front-doc/img/vue/vue/2-3-6.png",p="/front-doc/img/vue/vue/2-3-7.png",u="/front-doc/img/vue/vue/2-3-8.png",l={},g=n('<h2 id="i-启动项目" tabindex="-1"><a class="header-anchor" href="#i-启动项目" aria-hidden="true">#</a> Ⅰ. 启动项目</h2><h4 id="_1-操作提示" tabindex="-1"><a class="header-anchor" href="#_1-操作提示" aria-hidden="true">#</a> 1. 操作提示</h4><p>项目的构建的结果是在当前目录下创建了一个文件夹（名字就是项目名），该文件夹就是vue-cli项目。进入到该文件夹，执行以下命令进行项目初始化和启动。</p><figure><img src="'+s+`" alt="2-3-1" tabindex="0" loading="lazy"><figcaption>2-3-1</figcaption></figure><h4 id="_2-初始化项目" tabindex="-1"><a class="header-anchor" href="#_2-初始化项目" aria-hidden="true">#</a> 2. 初始化项目</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>npm install<span class="token punctuation">;</span> <span class="token comment">//初始化项目,安装vue-cli相关依赖</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装过程如下，WARNING信息是一些常用但没有安装的组件，因为构建项目的时候没有勾选这些组件，所以没有安装。</p><figure><img src="`+t+`" alt="2-3-2" tabindex="0" loading="lazy"><figcaption>2-3-2</figcaption></figure><h4 id="_3-启动vue-cli开发服务器" tabindex="-1"><a class="header-anchor" href="#_3-启动vue-cli开发服务器" aria-hidden="true">#</a> 3. 启动vue-cli开发服务器</h4><p>启动vu-cli开发服务器。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>npm run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如下：访问链接，就能访问到项目，vite的默认端口号就是5173.</p><figure><img src="`+r+'" alt="2-3-3" tabindex="0" loading="lazy"><figcaption>2-3-3</figcaption></figure><h4 id="_4-项目初始化界面" tabindex="-1"><a class="header-anchor" href="#_4-项目初始化界面" aria-hidden="true">#</a> 4. 项目初始化界面</h4><figure><img src="'+o+`" alt="2-3-4" tabindex="0" loading="lazy"><figcaption>2-3-4</figcaption></figure><h4 id="_5-构建项目的默认脚本" tabindex="-1"><a class="header-anchor" href="#_5-构建项目的默认脚本" aria-hidden="true">#</a> 5. 构建项目的默认脚本</h4><div class="hint-container tip"><p class="hint-container-title">提示</p><p>执行package.json中的script来控制项目。</p></div><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span> <span class="token comment">//npm run dev: 启动开发服务器,启动项目</span>
    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span> <span class="token comment">//npm run build: 打包项目</span>
    <span class="token property">&quot;preview&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview --port 4173&quot;</span> <span class="token comment">//启动打包后项目预览</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-vue-ui" tabindex="-1"><a class="header-anchor" href="#ii-vue-ui" aria-hidden="true">#</a> Ⅱ. Vue ui</h2><p>Vue ui 是Vue项目的图形化管理界面，这里可以创建项目、导入项目、管理插件和依赖，进行一些配置以及运行一些Vue命令。</p><h4 id="_1-进入vue-ui" tabindex="-1"><a class="header-anchor" href="#_1-进入vue-ui" aria-hidden="true">#</a> 1. 进入vue ui</h4><p>输入指令 <code>vue ui</code> 即可开启vue项目管理器。</p><p><img src="`+c+'" alt="2-3-5" loading="lazy"><br> 访问给出的连接地址 <code>http://localhost:8000</code>，即可进入Vue ui界面。</p><p><strong>界面如下</strong></p><figure><img src="'+d+'" alt="2-3-6" tabindex="0" loading="lazy"><figcaption>2-3-6</figcaption></figure><h4 id="_2-项目管理器" tabindex="-1"><a class="header-anchor" href="#_2-项目管理器" aria-hidden="true">#</a> 2. 项目管理器</h4><ul><li>项目：可以查看创建的vue项目 <ul><li>通过vite创建的项目这里看不到，需要导入</li></ul></li><li>创建：可视化的创建项目，并进行可视化的配置</li><li>导入：导入已有的vue项目，使其被Vue项目管理器管理</li><li>点击某个项目，即可进行该项目的详细管理。</li></ul><h4 id="_3-插件与依赖管理" tabindex="-1"><a class="header-anchor" href="#_3-插件与依赖管理" aria-hidden="true">#</a> 3. 插件与依赖管理</h4><p>注意：插件也被定义为了依赖。<br> 包含运行依赖（打包后需要引入的）和开发依赖（打包后不需要引入的）。</p><p>这里可以直接进行依赖的添加和卸载。</p><figure><img src="'+p+'" alt="2-3-7" tabindex="0" loading="lazy"><figcaption>2-3-7</figcaption></figure><h4 id="_4-任务" tabindex="-1"><a class="header-anchor" href="#_4-任务" aria-hidden="true">#</a> 4. 任务</h4><p>可以直接在这里运行一些Vue命令，如运行或编译项目，这里可以可视化的查看命令运行情况。</p><figure><img src="'+u+'" alt="2-3-8" tabindex="0" loading="lazy"><figcaption>2-3-8</figcaption></figure>',34),h=[g];function v(m,_){return e(),i("div",null,h)}const b=a(l,[["render",v],["__file","2-3.操作项目.html.vue"]]);export{b as default};
