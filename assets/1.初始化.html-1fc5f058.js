import{_ as t,P as o,Q as r,S as n,a3 as a,a4 as e,a5 as i,C as p}from"./framework-3728cbf1.js";const c="/front-doc/img/item/music-wy/v1&001.jpg",l="/front-doc/img/item/music-wy/v1&002.jpg",d="/front-doc/img/item/music-wy/v1&003.jpg",u="/front-doc/img/item/music-wy/v1&004.jpg",h="/front-doc/img/item/music-wy/v1&005.jpg",m={},v=i('<h2 id="开发前的准备" tabindex="-1"><a class="header-anchor" href="#开发前的准备" aria-hidden="true">#</a> 开发前的准备</h2><h4 id="_1-部署前端开发环境" tabindex="-1"><a class="header-anchor" href="#_1-部署前端开发环境" aria-hidden="true">#</a> 1. 部署前端开发环境</h4><ul><li>创建git仓库</li><li>部署node环境</li><li>下载HBuilderX</li><li>下载小程序开发工具：抖音 &amp; 微信</li></ul><h4 id="_2-准备接口" tabindex="-1"><a class="header-anchor" href="#_2-准备接口" aria-hidden="true">#</a> 2. 准备接口</h4><p>暂时采用github上第三方提供的开源接口项目。<br> 该项目是前端项目，采用nodejs的形式代理返回网易云音乐官方的接口。</p>',5),g={href:"https://github.com/Binaryify/NeteaseCloudMusicApi",target:"_blank",rel:"noopener noreferrer"},k={href:"https://binaryify.github.io/NeteaseCloudMusicApi/#/",target:"_blank",rel:"noopener noreferrer"},f=n("h4",{id:"_3-准备资源",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-准备资源","aria-hidden":"true"},"#"),a(" 3. 准备资源")],-1),_={href:"https://music.163.com/",target:"_blank",rel:"noopener noreferrer"},b=i('<h2 id="新建项目" tabindex="-1"><a class="header-anchor" href="#新建项目" aria-hidden="true">#</a> 新建项目</h2><p>通过HBuilder新建一个uni-app项目</p><h4 id="_1-创建项目" tabindex="-1"><a class="header-anchor" href="#_1-创建项目" aria-hidden="true">#</a> 1. 创建项目</h4><p>这里采用默认模板，不使用ui模板和预定于的项目模板。</p><p>PS：注意选择Vue3</p><figure><img src="'+c+`" alt="v1&amp;001" tabindex="0" loading="lazy"><figcaption>v1&amp;001</figcaption></figure><h4 id="_2-添加git仓库" tabindex="-1"><a class="header-anchor" href="#_2-添加git仓库" aria-hidden="true">#</a> 2. 添加git仓库</h4><p>为 music-wy-client目录创建gitignore。</p><p>注意：创建的uniapp项目默认是没有gitignore的，需要自己创建。</p><div class="language-gitignore line-numbers-mode" data-ext="gitignore"><pre class="language-gitignore"><code><span class="token entry string">node_modules<span class="token punctuation">/</span></span>
<span class="token entry string">.project</span>
<span class="token entry string">unpackage<span class="token punctuation">/</span></span>
<span class="token entry string">.DS_Store</span>
<span class="token entry string">wxcomponents<span class="token punctuation">/</span><span class="token operator">**</span><span class="token punctuation">/</span><span class="token operator">*</span>.vue</span>
<span class="token entry string">wxcomponents<span class="token punctuation">/</span><span class="token operator">**</span><span class="token punctuation">/</span><span class="token operator">*</span>.css</span>
<span class="token entry string">.hbuilderx<span class="token punctuation">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><h4 id="_1-项目的位置" tabindex="-1"><a class="header-anchor" href="#_1-项目的位置" aria-hidden="true">#</a> 1. 项目的位置</h4><figure><img src="`+l+'" alt="v1&amp;002" tabindex="0" loading="lazy"><figcaption>v1&amp;002</figcaption></figure><ul><li>music-wy：是整个项目的根目录，整个项目不止有前端 <ul><li>Git仓库就建立在这个目录，.gitignore子目录独立建立。</li></ul></li><li>music-wy-client: 客户端（前端）项目目录。</li><li>music-wy-admin: 管理端（前端-控制台）项目目录</li><li>music-wy-api: 后端项目目录（api目录）</li><li>source: 一些开发中用到的文件</li></ul><h4 id="_2-项目默认结构" tabindex="-1"><a class="header-anchor" href="#_2-项目默认结构" aria-hidden="true">#</a> 2. 项目默认结构</h4><figure><img src="'+d+`" alt="v1&amp;003" tabindex="0" loading="lazy"><figcaption>v1&amp;003</figcaption></figure><h4 id="_3-待添加的目录" tabindex="-1"><a class="header-anchor" href="#_3-待添加的目录" aria-hidden="true">#</a> 3. 待添加的目录</h4><ul><li>common：公共目录，可以存放工具</li><li>components：自定义组件目录</li><li>store: pinia目录</li><li>unpackage: 编译后的文件存放目录，自动生成</li><li>node_modules：依赖目录，自动生成的。</li></ul><h4 id="_4-项目完整版目录" tabindex="-1"><a class="header-anchor" href="#_4-项目完整版目录" aria-hidden="true">#</a> 4. 项目完整版目录</h4><p>这个不是初始化后能看到的，要开发完。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>┌─common/    # 公共目录，可以存放工具
├─components/    # 自定义组件目录
├─pages/    # 页面目录（页面可以理解为主组件）
├─static/    # 静态资源目录
├─store/    # pinia目录，状态管理
├─uni_modules   # 存放[uni_module]
├─unpackage/   # 存放运行或发行的编译结果
├─
├
├─.gitignore  
├─App.vue   # 应用配置、公共css、生命周期
├─index.html  # vue入口容器
├─main.js   # 同Vue项目，Vue初始化入口文件
├─manifest.json   # 应用级配置文件
├─pages.json   # 页面配置文件，
├─uni.promisfy.adaptor.js
├─uni.scss   # uni-app内置的常用样式变量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="项目初始化" tabindex="-1"><a class="header-anchor" href="#项目初始化" aria-hidden="true">#</a> 项目初始化</h2><h4 id="_1-启动项目" tabindex="-1"><a class="header-anchor" href="#_1-启动项目" aria-hidden="true">#</a> 1. 启动项目</h4><p>通过uniapp直接运行项目即可，本项目将以H5端为基础开发，功能开发完后，再适配其他端。</p><figure><img src="`+u+'" alt="v1&amp;004" tabindex="0" loading="lazy"><figcaption>v1&amp;004</figcaption></figure><p>该页面是首页：/pages/index/index.xue</p><h4 id="_2-准备图标字体" tabindex="-1"><a class="header-anchor" href="#_2-准备图标字体" aria-hidden="true">#</a> 2. 准备图标字体</h4><p>从阿里图标库下载需要的图标字体文件，并引入到项目。</p><p>这里采用Font class的方式使用图标。</p><h5 id="_2-1-下载图标文件" tabindex="-1"><a class="header-anchor" href="#_2-1-下载图标文件" aria-hidden="true">#</a> 2.1 下载图标文件</h5><figure><img src="'+h+`" alt="v1&amp;005" tabindex="0" loading="lazy"><figcaption>v1&amp;005</figcaption></figure><h5 id="_2-2-文件放入项目" tabindex="-1"><a class="header-anchor" href="#_2-2-文件放入项目" aria-hidden="true">#</a> 2.2 文件放入项目</h5><p>将下载的字体文件放入静态文件目录 /static/iconfront</p><ul><li>demo* 文件是示例，可以用来查看图标的引入方式</li><li>iconfont.css：Font class使用方式，该文件放入/common/css/，该文件本质也是一个通用的工具。</li><li>iconfont.js、json文件等都是其他引入方式，字节删了即可。</li></ul><h5 id="_2-3-修改图标文件的url" tabindex="-1"><a class="header-anchor" href="#_2-3-修改图标文件的url" aria-hidden="true">#</a> 2.3 修改图标文件的url</h5><p>修改iconfont.css里图标文件的url，因为iconfont和图标文件现在已经不是同目录下了。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;iconfont&quot;</span><span class="token punctuation">;</span> <span class="token comment">/* Project id 4065792 */</span>
  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;/static/iconfont/iconfont.woff2?t=1683963108253&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;/static/iconfont/iconfont.woff?t=1683963108253&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;/static/iconfont/iconfont.ttf?t=1683963108253&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;truetype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里采用<code>@</code>绝对路径会报错，只能使用 <code>/</code> 绝对路径，这是一个bug。</p><h5 id="_2-4-使用字体图标" tabindex="-1"><a class="header-anchor" href="#_2-4-使用字体图标" aria-hidden="true">#</a> 2.4 使用字体图标</h5><p>先引入，然后根据官方提供的方式使用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>view <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;content&quot;</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;iconfont icon-shouye&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token string">&#39;@/common/css/iconfont.css&#39;</span> 

<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),x={href:"https://www.iconfont.cn/manage/index?spm=a313x.7781069.1998910419.22&manage_type=myprojects&projectId=4065792&keyword=&project_type=&page=",target:"_blank",rel:"noopener noreferrer"};function y(w,j){const s=p("ExternalLinkIcon");return o(),r("div",null,[v,n("ul",null,[n("li",null,[n("a",g,[a("接口地址"),e(s)])]),n("li",null,[n("a",k,[a("接口文档"),e(s)])])]),f,n("p",null,[a("准备一些图标、图片类的设计资源。可以网上下载，或者截图网易云。 建议直接从 "),n("a",_,[a("网易云音乐网页版"),e(s)]),a(" 端抓取设计资源。")]),b,n("p",null,[a("icon-shouye就是图标的名字，可以直接在"),n("a",x,[a("阿里iconfont"),e(s)]),a("上查看图标名")])])}const q=t(m,[["render",y],["__file","1.初始化.html.vue"]]);export{q as default};
