import{_ as a,P as n,Q as s,a5 as t}from"./framework-3728cbf1.js";const e="/front-doc/img/vue/vue/3-3-1.png",p={},o=t('<h2 id="指令-directives" tabindex="-1"><a class="header-anchor" href="#指令-directives" aria-hidden="true">#</a> 指令：Directives</h2><figure><img src="'+e+`" alt="3-3-1" tabindex="0" loading="lazy"><figcaption>3-3-1</figcaption></figure><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><ul><li>指令是带有 v- 前缀的特殊 attribute，Vue 提供了许多内置指令</li><li>指令 attribute 的期望值为一个 JavaScript 表达式 (v-for 是例外情况)</li><li>指令的职责是，当表达式的值改变时，将其产生的连带影响，响应式地作用于 DOM</li></ul><h4 id="_2-参数-arguments" tabindex="-1"><a class="header-anchor" href="#_2-参数-arguments" aria-hidden="true">#</a> 2. 参数:Arguments</h4><p>一些指令能够接收一个“参数”，在指令名称之后以冒号表示。</p><p><strong>示例</strong><br> v-bind 指令可以用于响应式地更新 HTML attribute：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token comment">&lt;!--href 是参数，告知 v-bind 指令将该元素的 href属性与表达式 url 的值绑定--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-动态参数" tabindex="-1"><a class="header-anchor" href="#_3-动态参数" aria-hidden="true">#</a> 3. 动态参数</h4><p>在指令参数上也可以使用一个 JavaScript 表达式，需要包含在一对方括号内：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>[attributeName]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里的attrbuteName会被作为一个JS表达式动态值，取得的值会作为最终的参数来使用。</p><p>例如：组件实例有一个数据属性attributeName，值为&quot;href&quot;,那么这个绑定就==v-bind:href。</p><p><strong>语法限制</strong></p><ul><li>动态参数值的限制：动态参数预期会求出一个字符串，异常情况下值为 null。这个特殊的 null 值可以被显性地用于移除绑定。 任何其它非字符串类型的值都将会触发一个警告。</li><li>动态参数语法的限制：空格和引号放在HTML attribute名里是无效的，会触发警告，所以在使用时，不要加空格和引号的表达式。 <ul><li>推荐：计算属性替代复杂的表达式。</li></ul></li><li>大小写：在 DOM 中使用模板时 (直接在一个 HTML 文件里撰写模板)，还需要避免使用大写字符来命名键名，因为浏览器会把 attribute 名全部强制转为小写。尽量用连接符而不是驼峰命名法。</li></ul><h4 id="_4-修饰符-modifiers" tabindex="-1"><a class="header-anchor" href="#_4-修饰符-modifiers" aria-hidden="true">#</a> 4. 修饰符：Modifiers</h4><p>修饰符（modifier）是 &quot;.&quot; 指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。<br> 例：.prevent 修饰符告诉 v-on 指令对于触发的事件调用 event.preventDefault()：</p><h4 id="_5-缩写" tabindex="-1"><a class="header-anchor" href="#_5-缩写" aria-hidden="true">#</a> 5. 缩写</h4><p>Vue 为 v-bind 和 v-on 这两个最常用的指令，提供了特定简写。</p><h5 id="_5-1-v-bind绑定" tabindex="-1"><a class="header-anchor" href="#_5-1-v-bind绑定" aria-hidden="true">#</a> 5.1 v-bind绑定</h5><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> //完整语法
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> //缩写语法
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:[key]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> //动态参数缩写
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_5-2-v-on绑定" tabindex="-1"><a class="header-anchor" href="#_5-2-v-on绑定" aria-hidden="true">#</a> 5.2 v-on绑定</h5><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> //完整语法
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> //缩写
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@[event]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> //动态参数的缩写 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),c=[o];function l(u,i){return n(),s("div",null,c)}const d=a(p,[["render",l],["__file","3-3.指令.html.vue"]]);export{d as default};
