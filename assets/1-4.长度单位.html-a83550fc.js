import{_ as n,P as a,Q as s,a5 as e}from"./framework-3728cbf1.js";const i={},t=e(`<h2 id="i-em" tabindex="-1"><a class="header-anchor" href="#i-em" aria-hidden="true">#</a> Ⅰ. em</h2><h4 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍" aria-hidden="true">#</a> 1. 介绍</h4><p>em是一个相对长度单位，相对于当前对象内文本的字体尺寸，也就是font-size的大小。</p><p>他的长度是根据元素的文本文字垂直长度来决定的。</p><h4 id="_2-默认长度" tabindex="-1"><a class="header-anchor" href="#_2-默认长度" aria-hidden="true">#</a> 2. 默认长度</h4><p>如当前对行内文本的字体尺寸未被人为设置，则寻找父级的font-size，如果没有父级或者父级没有设置font-size，就相对于浏览器的默认字体尺寸(16px)。</p><h4 id="_3-设置rem" tabindex="-1"><a class="header-anchor" href="#_3-设置rem" aria-hidden="true">#</a> 3. 设置rem</h4><p>设置font-size，就间接设置1rem的长度。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#app</span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span>10em<span class="token punctuation">;</span>
    <span class="token property">heigth</span><span class="token punctuation">:</span>10em<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-rem" tabindex="-1"><a class="header-anchor" href="#ii-rem" aria-hidden="true">#</a> Ⅱ. rem</h2><p>rem同em一样皆为相对字体大小单位，是一个相对单位，相对根元素<code>&lt;html&gt;</code>字体大小的单位。</p><h4 id="_1-设置rem" tabindex="-1"><a class="header-anchor" href="#_1-设置rem" aria-hidden="true">#</a> 1. 设置rem</h4><p>设置跟元素的font-size，就间接设置了rem</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">html</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 根元素默认大小为16px */</span>
    <span class="token comment">/* 62.5% * 16 = 10px */</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 62.5%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.l1</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 10rem<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 10rem<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-em与rem" tabindex="-1"><a class="header-anchor" href="#_2-em与rem" aria-hidden="true">#</a> 2. em与rem</h4><ul><li>em：根据父元素的大小来决定</li><li>rem：根据根元素(html)元素来决定</li></ul><p>在计算子元素有关的尺寸时，只要根据html元素字体大小计算就好。不再像使用em时，得来回的找父元素字体大小频繁的计算。</p><h4 id="_3-注意" tabindex="-1"><a class="header-anchor" href="#_3-注意" aria-hidden="true">#</a> 3. 注意</h4><p>Chrome浏览器不支持12px以下的字体大小(字体大小小于12px后改字体一直为12px)，其他浏览器没问题。</p><h2 id="iii-视口单位" tabindex="-1"><a class="header-anchor" href="#iii-视口单位" aria-hidden="true">#</a> Ⅲ. 视口单位</h2><p>视口单位，就是根据你浏览器窗口的大小的单位，不受显示器分辨率的影响</p><h4 id="_1-vw-视口宽度" tabindex="-1"><a class="header-anchor" href="#_1-vw-视口宽度" aria-hidden="true">#</a> 1. vw：视口宽度</h4><p>1vw = 可视窗口的宽度的百分之一。</p><h4 id="_2-vh-视口高度" tabindex="-1"><a class="header-anchor" href="#_2-vh-视口高度" aria-hidden="true">#</a> 2. vh：视口高度</h4><p>1vw = 可视窗口的高度的百分之一。</p><h4 id="_3-vmin与vmax" tabindex="-1"><a class="header-anchor" href="#_3-vmin与vmax" aria-hidden="true">#</a> 3. vmin与vmax</h4><ul><li>vmin：vw和vh中较小的那个。</li><li>vmax：vw和vh中较大的那个。</li></ul><h4 id="_4-使用示例" tabindex="-1"><a class="header-anchor" href="#_4-使用示例" aria-hidden="true">#</a> 4. 使用示例</h4><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">#box</span> <span class="token punctuation">{</span> 
  <span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span> 
  <span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span> 
  <span class="token property">margin</span><span class="token punctuation">:</span> 25vh auto<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),p=[t];function c(r,l){return a(),s("div",null,p)}const o=n(i,[["render",c],["__file","1-4.长度单位.html.vue"]]);export{o as default};
