import{_ as a,o as t,c as s,e as n}from"./app-fb2cd4f5.js";const e="/front-doc/img/basic/css/4-7-1.jpg",i={},l=n(`<h2 id="i-css文档流" tabindex="-1"><a class="header-anchor" href="#i-css文档流" aria-hidden="true">#</a> Ⅰ. CSS文档流</h2><h4 id="_1-标准文档流" tabindex="-1"><a class="header-anchor" href="#_1-标准文档流" aria-hidden="true">#</a> 1. 标准文档流</h4><p>其实就是一个“默认”状态。文档流指的是元素排版布局过程中，元素会自动从左往右，从上往下的流式排列。并最终窗体自上而下分成一行行，并在每行中从左至右的顺序排放元素。</p><h4 id="_2-文档流的概念" tabindex="-1"><a class="header-anchor" href="#_2-文档流的概念" aria-hidden="true">#</a> 2. 文档流的概念</h4><p>确切的说应该是文档文档流模型的机制，html的布局机制就是用文档流模型的，即块元素（block）独占一行，内联元素（inline），不独占一行。</p><h4 id="_3-脱离文档流的定位" tabindex="-1"><a class="header-anchor" href="#_3-脱离文档流的定位" aria-hidden="true">#</a> 3. 脱离文档流的定位</h4><ul><li>absolute</li><li>fixed</li><li>sticky</li><li>float元素</li></ul><h2 id="ii-定位属性" tabindex="-1"><a class="header-anchor" href="#ii-定位属性" aria-hidden="true">#</a> Ⅱ. 定位属性</h2><p>position 属性指定了元素的定位属性。元素的定位属性主要包括position定位模式(类型)和边偏移两部分。定位要和这边偏移搭配使用。</p><h4 id="_1-边偏移" tabindex="-1"><a class="header-anchor" href="#_1-边偏移" aria-hidden="true">#</a> 1. 边偏移</h4><p>这些属性无法工作，除非是先设定position属性。</p><table><thead><tr><th style="text-align:left;">边偏移属性</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">top</td><td style="text-align:left;">顶端偏移量，定义元素相对于其父元素上边线的距离</td></tr><tr><td style="text-align:left;">bottom</td><td style="text-align:left;">底部偏移量，定义元素相对于其父元素下边线的距离</td></tr><tr><td style="text-align:left;">left</td><td style="text-align:left;">左侧偏移量，定义元素相对于其父元素左边线的距离</td></tr><tr><td style="text-align:left;">right</td><td style="text-align:left;">右侧偏移量，定义元素相对于其父元素右边线的距离</td></tr></tbody></table><h4 id="_2-position定位模式" tabindex="-1"><a class="header-anchor" href="#_2-position定位模式" aria-hidden="true">#</a> 2. position定位模式</h4><p>position属性的值有五个，表示了五种定位模式，其中四种是常用的。</p><table><thead><tr><th style="text-align:left;">定位模式</th><th style="text-align:left;">是否脱标占有位置</th><th style="text-align:left;">是否可以使用边偏移</th><th style="text-align:left;">移动位置基准</th></tr></thead><tbody><tr><td style="text-align:left;">静态static</td><td style="text-align:left;">不脱标，正常模式</td><td style="text-align:left;">不可以</td><td style="text-align:left;">正常模式</td></tr><tr><td style="text-align:left;">相对定位relative</td><td style="text-align:left;">脱标，占有位置</td><td style="text-align:left;">可以</td><td style="text-align:left;">相对自身位置移动（自恋型）</td></tr><tr><td style="text-align:left;">绝对定位absolute</td><td style="text-align:left;">完全脱标，不占有位置</td><td style="text-align:left;">可以</td><td style="text-align:left;">相对于定位父级移动位置（拼爹型）</td></tr><tr><td style="text-align:left;">固定定位fixed</td><td style="text-align:left;">完全脱标，不占有位置</td><td style="text-align:left;">可以</td><td style="text-align:left;">相对于浏览器移动位置（认死理型）</td></tr></tbody></table><h4 id="_3-定位模式转换" tabindex="-1"><a class="header-anchor" href="#_3-定位模式转换" aria-hidden="true">#</a> 3. 定位模式转换</h4><p>跟浮动一样，元素添加了绝对定位和固定定位之后，元素模式也会发生转换，都转换为行内块模式，行内块的宽度和高度跟内容有关系，比如行内元素如果添加了绝对定位或者固定定位浮动后，可以不用转换模式，直接给高度和宽度就可以了。</p><h2 id="iii-五种定位模式" tabindex="-1"><a class="header-anchor" href="#iii-五种定位模式" aria-hidden="true">#</a> Ⅲ. 五种定位模式</h2><h4 id="_1-static-静态定位" tabindex="-1"><a class="header-anchor" href="#_1-static-静态定位" aria-hidden="true">#</a> 1. static：静态定位</h4><p>HTML元素的默认值，即没有定位，元素出现在正常的流中，默认是省略不写的。</p><p>在静态定位状态下，无法通过边偏移属性（top、bottom、left或right）来改变元素的位置。静态定位唯一的用处就是取消定位。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">position</span><span class="token punctuation">:</span> static<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-fixed-固定定位" tabindex="-1"><a class="header-anchor" href="#_2-fixed-固定定位" aria-hidden="true">#</a> 2. fixed：固定定位</h4><p>固定定位是绝对定位的一种特殊形式，类似于正方形是一个特殊的矩形。它以浏览器窗口作为参照物来定义网页元素。</p><p>当对元素设置固定定位后，它将脱离标准文档流的控制，始终依据浏览器窗口来定义自己的显示位置。不管浏览器滚动条如何滚动也不管浏览器窗口的大小如何变化，该元素都会始终显示在浏览器窗口的固定位置。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">p</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span>
    <span class="token property">right</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>固定定位的元素跟父亲没有任何关系，只认浏览器。</li><li>固定定位完全脱标，不占有位置，不随着滚动条滚动。</li></ul><h4 id="_3-relative-相对定位" tabindex="-1"><a class="header-anchor" href="#_3-relative-相对定位" aria-hidden="true">#</a> 3. relative：相对定位</h4><p>&quot;相对定位元素&quot; 的定位是相对其 正常位置的。例如：相对正常位置的定位左移20px。</p><p>对元素设置相对定位后，可以通过边偏移属性改变元素的位置，但是它在文档流中的位置仍然保留。每次移动的位置，是以自己的左上角为基点移动（相对于自己来移动位置）。相对定位的盒子仍在标准流中，它后面的盒子仍以标准流方式对待它。（相对定位不脱标）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h2</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>-20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>可以移动的“相对定位元素”的内容会跟其他元素重叠的，它原本所占的空间不会改变</li><li>相对定位元素经常被用来作为绝对定位元素的容器块</li></ul><h4 id="_4-absolute-绝对定位" tabindex="-1"><a class="header-anchor" href="#_4-absolute-绝对定位" aria-hidden="true">#</a> 4. absolute：绝对定位</h4><p>绝对定位的元素的位置相对于最近的已定位父元素（一般会定位一个relation元素作为absolute定位的容器），如果元素没有已定位的父元素（上级元素是static,属于没有定位），则子元素会相对于更上一级的父元素(直到body)进行相对定位。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">h2</span><span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>100px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>150px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>absolute 定位使元素的位置与文档流无关，因此不占据空间，通过边偏移移动位置。absolute 定位的元素也可以与其他元素重叠。边偏移是相对父元素进行偏移的，如果没有已定位的父元素，就相对整个body进行偏移。定位为absolute的层脱离正常文本流，但与relative的区别是其在正常流中的位置不在存在。</p><p>如图可以看到，在将黄色背景层定位为absolute后，灰色背景层自动补上。</p><figure><img src="`+e+`" alt="4-7-1" tabindex="0" loading="lazy"><figcaption>4-7-1</figcaption></figure><h5 id="_4-1-自动转为block" tabindex="-1"><a class="header-anchor" href="#_4-1-自动转为block" aria-hidden="true">#</a> 4.1 自动转为block</h5><p>一旦给元素加上absolute或float就相当于给元素加上了<code>display:block</code>;。比如内联元素span默认宽度是自适应的，你给其加上width是不起作用的。要想width定宽，你需要将span设成<code>display:block</code>。但如果你给span加上absolute或float，那span的display属性自动就变成block，就可以指定width了。</p><h5 id="_4-2-子绝父相" tabindex="-1"><a class="header-anchor" href="#_4-2-子绝父相" aria-hidden="true">#</a> 4.2 子绝父相</h5><p>这句话的意思是 子级是绝对定位的话， 父级要用相对定位。</p><p>因为子级是绝对定位，不会占有位置， 可以放到父盒子里面的任何一个地方。父盒子布局时，需要占有位置，因此父只能是相对定位,这就是子绝父相的由来。</p><h4 id="_5-sticky-特殊的定位" tabindex="-1"><a class="header-anchor" href="#_5-sticky-特殊的定位" aria-hidden="true">#</a> 5. sticky：特殊的定位</h4><p>sticky 英文字面意思是粘，粘贴，所以可以把它称之为粘性定位，position: sticky; 基于用户的滚动位置来定位。</p><p>粘性定位的元素是依赖于用户的滚动，在 position:relative 与 position:fixed 定位之间切换。它的行为就像 position:relative; 而当页面滚动超出目标区域时，它的表现就像 position:fixed;，它会固定在目标位置。元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。这个特定阈值指的是 top, right, bottom 或 left 之一。</p><p>换言之，指定 top, right, bottom 或 left 四个阈值其中之一，才可使粘性定位生效。否则其行为与相对定位相同。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div.y</span> <span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span> -webkit-sticky<span class="token punctuation">;</span> <span class="token comment">/* Safari */</span>
    <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token comment">/* 阀值 */</span> 
    <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #4CAF50<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-z-index-重叠的元素" tabindex="-1"><a class="header-anchor" href="#_6-z-index-重叠的元素" aria-hidden="true">#</a> 6. z-index：重叠的元素</h4><p>当对多个元素同时设置定位时，定位元素之间有可能会发生重叠。要想调整重叠定位元素的堆叠顺序，可以对定位元素应用z-index层叠等级属性，其取值可为正整数、负整数和0。（规定哪个元素应该放在前面，或后面）。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">img</span><span class="token punctuation">{</span>
    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>
    <span class="token property">left</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>
    <span class="token property">top</span><span class="token punctuation">:</span>0px<span class="token punctuation">;</span>
    <span class="token property">z-index</span><span class="token punctuation">:</span>2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>z-index的默认属性值是0，取值越大，定位元素在层叠元素中越居上，可以取负数。</li><li>如果取值相同，则根据书写顺序，后来居上。</li><li>后面数字一定不能加单位。</li><li>只有相对定位，绝对定位，固定定位有此属性，其余标准流，浮动，静态定位都无此属性，亦不可指定此属性。</li></ul>`,52),p=[l];function o(d,c){return t(),s("div",null,p)}const u=a(i,[["render",o],["__file","4-7.position.html.vue"]]);export{u as default};
