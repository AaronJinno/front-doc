import{_ as n,o as s,c as a,e as t}from"./app-fb2cd4f5.js";const p={},e=t(`<h2 id="i-类的操作" tabindex="-1"><a class="header-anchor" href="#i-类的操作" aria-hidden="true">#</a> Ⅰ. 类的操作</h2><h4 id="_1-修改style属性" tabindex="-1"><a class="header-anchor" href="#_1-修改style属性" aria-hidden="true">#</a> 1. 修改style属性</h4><p>通过style属性来修改元素的样式，每修改一个样式，浏览器就需要重新渲染一次页面，这样的执行性能是比较差的，而且这种形式当我们要修改多个样式时，也不太方便。</p><h4 id="_2-同时修改多个样式" tabindex="-1"><a class="header-anchor" href="#_2-同时修改多个样式" aria-hidden="true">#</a> 2. 同时修改多个样式</h4><p>为不同的样式设置不同的class属性，然后通过修改class属性的方式，一次性修改多个样式。</p><p>这样一来，只需修改一次，即可同时修改多个样式，浏览器只需要渲染页面一次，性能比较好，且这种方式，即使表现和行为进一步的分离。<br> 当然，一个元素可以有多个类，如果只修改某个属性，可以通过增加类的方式修改。</p><h4 id="_3-toggleclass" tabindex="-1"><a class="header-anchor" href="#_3-toggleclass" aria-hidden="true">#</a> 3. toggleClass</h4><p>toggleClass可以用来切换一个类，如果元素中具有该类，则删除，没有则添加。</p><h2 id="ii-封装动画框架" tabindex="-1"><a class="header-anchor" href="#ii-封装动画框架" aria-hidden="true">#</a> Ⅱ. 封装动画框架</h2><p>实际应用时，可能会多个css属性，同时执行动画效果，所以我们就将这些效果(位置,大小,透明度)进行封装</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//自定义函数实现多css属性执行动画效果</span>
<span class="token comment">//参数1：执行动画效果的DOM节点对象</span>
<span class="token comment">//参数2：执行动画的css属性: 位置,大小,透明度.</span>
<span class="token comment">//json参数使用对象格式,属性是CSS属性名,值为CSS属性到什么程度.如:透明度到达0.8</span>
   <span class="token comment">// 格式{opacity:0.3,left:500,top:300,width:500}  </span>
<span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">animation</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>json</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//遍历所有执行动画的css属性，获得每个属性到达的目的地</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> attr <span class="token keyword">in</span> json<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//每隔50毫秒，让当前的位置加上或减去 speed</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//针对opacity特殊的处理一下</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>attr <span class="token operator">==</span> <span class="token string">&#39;opacity&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//当前的位置，     加或减到达目的地</span>
                <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">getStyle</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span><span class="token string">&#39;opacity&#39;</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token comment">//从当前的位置     加或减到达目的地</span>
                <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token function">getStyle</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//要想到达目的地，就需要从当前的位置+ 或 -</span>
            <span class="token keyword">var</span> mudidi <span class="token operator">=</span> json<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">//计算，从起点到达目的地移动的速度：</span>
            <span class="token comment">//每次移动当前的10分之1,速度会越来越慢,而且无法执行完,需要进一步判断</span>
            <span class="token keyword">var</span> speed <span class="token operator">=</span> <span class="token punctuation">(</span>mudidi <span class="token operator">-</span> now<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token comment">//也可以每次移动固定的长度</span>
            <span class="token comment">// if(mudidi&gt;now){</span>
            <span class="token comment">//  var speed = 5;</span>
            <span class="token comment">// }else{</span>
            <span class="token comment">//  var speed = -5;</span>
            <span class="token comment">// }            </span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>attr <span class="token operator">==</span><span class="token string">&#39;opacity&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token punctuation">(</span>now <span class="token operator">+</span> speed<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                element<span class="token punctuation">.</span>style<span class="token punctuation">[</span>attr<span class="token punctuation">]</span> <span class="token operator">=</span> now <span class="token operator">+</span> speed<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>            
            <span class="token keyword">if</span><span class="token punctuation">(</span>now <span class="token operator">==</span> mudidi<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//让div，宽度、高度500；位置到达left:500，透明度到达1</span>
oDiv<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">animation</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token literal-property property">opacity</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-多物体执行动画" tabindex="-1"><a class="header-anchor" href="#iii-多物体执行动画" aria-hidden="true">#</a> Ⅲ. 多物体执行动画</h2><p>如果多个元素执行动画，如果共用一个定时器，就会导致某个元素执行动画时，先把其他的定时器都关闭，也就是说，只能有一个元素执行动画</p><p>解决办法: 让每个元素拥有自己独立的定时器，这样清除定时器时，只清除自己元素身上的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> div2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> div3 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">animation</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span>json</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token function">clearInterval</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token comment">//清除的定时器加上了属性名字</span>
   element<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token comment">//定时器的名字也加上了属性名字</span>
     <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>同上<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token punctuation">}</span>
<span class="token comment">//让div，宽度、高度500；位置到达left:500，透明度到达1</span>
div1<span class="token punctuation">.</span><span class="token function-variable function">onmouseover</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">animation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
div2<span class="token punctuation">.</span><span class="token function-variable function">onmouseover</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">animation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">500</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
div3<span class="token punctuation">.</span><span class="token function-variable function">onmouseover</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">animation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">opacity</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","7-3.封装动画框架.html.vue"]]);export{r as default};
