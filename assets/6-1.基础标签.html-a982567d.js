import{_ as a,o as n,c as s,e as t}from"./app-c07941ad.js";const p={},e=t(`<div class="hint-container danger"><p class="hint-container-title">警告</p><p><strong>多媒体是播放器在前端属于非常复杂的组件，没有单独造轮子的必要，直接使用第三方组件即可。</strong></p></div><h2 id="i-video-audio" tabindex="-1"><a class="header-anchor" href="#i-video-audio" aria-hidden="true">#</a> Ⅰ. video &amp; audio</h2><h4 id="_1-video与audio" tabindex="-1"><a class="header-anchor" href="#_1-video与audio" aria-hidden="true">#</a> 1. video与audio</h4><p>H5 新增了两个元素： video 元素与 audio 元素，使用这两个元素就可以播放视频和音频了。不需要额外的插件（只要浏览器支持H5）<br> video ：专门用来播放网络上的视频或电影。<br> audio ：专门用来播放网络上的音频数据。</p><h4 id="_2-audio使用示例" tabindex="-1"><a class="header-anchor" href="#_2-audio使用示例" aria-hidden="true">#</a> 2. audio使用示例</h4><p>只要把播放音频的 URL 地址指定给该元素的 src 属性就可以了</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> http://Lulingniu/demo/test .mp3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>当不支持H5时显示的替代文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>替换信息：不仅可以插入替换文字，也可以插入播放插件和音频连接等。</li><li>controls：显示播放控件的，如果不设置该属性，播放器将不可见。</li></ul><h4 id="_3-video使用示例" tabindex="-1"><a class="header-anchor" href="#_3-video使用示例" aria-hidden="true">#</a> 3. video使用示例</h4><p>设定好元素的长、宽等属性，把播放视频的URL 地址指定给该元素的 src 属性</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>640<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>360<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test.mp4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>当不支持H5时显示的替代文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>替换信息：不仅可以插入替换文字，也可以插入播放插件和音频连接等。</li><li>controls：同理，不加control将只显示一个封面，不显示播放控件</li></ul><h2 id="ii-source" tabindex="-1"><a class="header-anchor" href="#ii-source" aria-hidden="true">#</a> Ⅱ. source</h2><p>利用source指定多个播放源</p><h4 id="_1-video-audio添加多个播放源" tabindex="-1"><a class="header-anchor" href="#_1-video-audio添加多个播放源" aria-hidden="true">#</a> 1. video/audio添加多个播放源</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span><span class="token punctuation">&gt;</span></span>
    //在 Ogg theora 格式、Quicktim+e 格式与mp4格式之间 ，挑选自己支持的播放格式
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>sample.ogv<span class="token punctuation">&#39;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>video/ogg; codecs=&quot;theora, vorbis&quot;<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>sample.mov<span class="token punctuation">&#39;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>video/quicktime<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.mp3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>audio/mpeg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.ogg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>audio/ogg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于数据源，浏览器会根据声明顺序，自动选择能识别的进行播放。</p><h4 id="_2-source的属性" tabindex="-1"><a class="header-anchor" href="#_2-source的属性" aria-hidden="true">#</a> 2. source的属性</h4><ul><li>src 属性：是指播放媒体的 URL 地址</li><li>type：表示媒体类型，其属性值为播放文件的 MIME 类型，可选，最好别省略，否则浏览器会在从上往下选择时无法判断自己能不能播放而先行下载一小段视频（或音频）数据，浪费带宽和时间。</li><li>codes 参数：表示所使用的媒体的编码格式。</li></ul><h4 id="_3-各浏览器对编码格式的支持情况" tabindex="-1"><a class="header-anchor" href="#_3-各浏览器对编码格式的支持情况" aria-hidden="true">#</a> 3. 各浏览器对编码格式的支持情况</h4><p>因为各浏览器对于各种媒体的媒体类型及其编码格式的支持情况各不相同，所以使用source 元素来指定多种媒体类型是非常有必要的，实际应用中，一般会选个通用的，以减轻服务器的储存压力。</p>`,21),o=[e];function c(l,u){return n(),s("div",null,o)}const r=a(p,[["render",c],["__file","6-1.基础标签.html.vue"]]);export{r as default};
