import{_ as n,r as s,o as d,c as r,a as t,b as e,d as i,e as l}from"./app-2b89a278.js";const p={},h=l(`<h2 id="i-js语法" tabindex="-1"><a class="header-anchor" href="#i-js语法" aria-hidden="true">#</a> Ⅰ. JS语法</h2><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>uni-app的js API由标准ECMAScript的js API 和 uni 扩展 API 这两部分组成。</p><ul><li>标准ECMAScript的js仅是最基础的js。</li><li>浏览器基于它扩展了window、document、navigator等对象。</li><li>小程序也基于标准js扩展了各种wx.xx、my.xx、swan.xx的API。</li><li>node也扩展了fs等模块。</li><li>uni-app基于ECMAScript扩展了uni对象，并且API命名与小程序保持兼容。</li></ul><h4 id="_2-标准js和浏览器js的区别" tabindex="-1"><a class="header-anchor" href="#_2-标准js和浏览器js的区别" aria-hidden="true">#</a> 2. 标准js和浏览器js的区别</h4><ul><li>uni-app的js代码，h5端运行于浏览器中。</li><li>非h5端（包含小程序和App），Android平台运行在v8引擎中</li><li>iOS平台运行在iOS自带的jscore引擎中，都没有运行在浏览器或webview里。</li></ul><h5 id="_2-1-uniapp的选择" tabindex="-1"><a class="header-anchor" href="#_2-1-uniapp的选择" aria-hidden="true">#</a> 2.1 Uniapp的选择</h5><p>非H5端虽然不支持window、document、navigator等浏览器的js API，但也支持标准ECMAScript。<br> 请注意不要把浏览器里的js扩展对象等价于标准js。</p><p>uni-app的非H5端，一样支持标准js，支持if、for等语法，支持字符串、数字、时间、布尔值、数组、自定义对象等变量类型及各种处理方法。仅仅是不支持window、document、navigator等浏览器专用对象。</p><h4 id="_3-es6支持" tabindex="-1"><a class="header-anchor" href="#_3-es6支持" aria-hidden="true">#</a> 3. ES6支持</h4><p>uni-app 在支持绝大部分 ES6 API 的同时，也支持了 ES7 的 await/async。</p><h4 id="_4-注意" tabindex="-1"><a class="header-anchor" href="#_4-注意" aria-hidden="true">#</a> 4. 注意</h4><ul><li>App端Android支持不依赖Android版本号。因为uni-app的js代码运行在自带的独立jscore中，没有js的浏览器兼容性问题。 <ul><li>uni-app的vue页面在Android低端机上只有css浏览器兼容性问题，因为vue页面仍然渲染在webview中，受Android版本影响，太新的css语法在低版本不支持。</li></ul></li><li>默认不需要在微信工具里继续开启es6转换。 <ul><li>如果用了微信的wxml自定义组件（wxcomponents目录下），uni-app编译器并不会处理这些文件中的es6代码，需要去微信工具里开启转换。从HBuilderX调起微信工具时，如果发现工程下有wxcomponents目录会自动配置微信工程打开es6转换。</li></ul></li></ul><h2 id="ii-css语法支持" tabindex="-1"><a class="header-anchor" href="#ii-css语法支持" aria-hidden="true">#</a> Ⅱ. CSS语法支持</h2><p>uni-app 的 css 与 web 的 css 基本一致。</p><h4 id="_1-尺寸单位" tabindex="-1"><a class="header-anchor" href="#_1-尺寸单位" aria-hidden="true">#</a> 1. 尺寸单位</h4><p>uni-app 支持的通用 css 单位包括 px、rpx。</p><ul><li>px 即屏幕像素</li><li>rpx 即响应式 px，一种根据屏幕宽度自适应的动态单位</li></ul><h4 id="_2-rpx介绍" tabindex="-1"><a class="header-anchor" href="#_2-rpx介绍" aria-hidden="true">#</a> 2. rpx介绍</h4><p>设计师在提供设计图时，一般只提供一个分辨率的图，严格按设计图标注的 px 做开发，在不同宽度的手机上界面很容易变形。而且主要是宽度变形。高度一般因为有滚动条，不容易出问题。由此，引发了较强的动态宽度单位需求。</p><p>微信小程序设计了 rpx 解决这个问题。uni-app 在 App 端、H5 端都支持了 rpx，并且可以配置不同屏幕宽度的计算方式。rpx 是相对于基准宽度的单位，可以根据屏幕宽度进行自适应。uni-app 规定屏幕基准宽度 750rpx。</p><h5 id="_2-1-px与rpx转换" tabindex="-1"><a class="header-anchor" href="#_2-1-px与rpx转换" aria-hidden="true">#</a> 2.1 px与rpx转换</h5><p>开发者可以通过设计稿基准宽度计算页面元素 rpx 值，设计稿 1px 与框架样式 1rpx 转换公式如下：</p><p><code>设计稿 1px / 设计稿基准宽度 = 框架样式 1rpx / 750rpx</code></p><p>换言之，页面元素宽度在 uni-app 中的宽度计算公式：</p><p><code>750 * 元素在设计稿中的宽度 / 设计稿基准宽度</code></p><h5 id="_2-2-举例" tabindex="-1"><a class="header-anchor" href="#_2-2-举例" aria-hidden="true">#</a> 2.2 举例</h5><ul><li>若设计稿宽度为 750px，元素 A 在设计稿上的宽度为 100px，那么元素 A 在 uni-app 里面的宽度应该设为：750 * 100 / 750，结果为：100rpx。</li><li>若设计稿宽度为 640px，元素 A 在设计稿上的宽度为 100px，那么元素 A 在 uni-app 里面的宽度应该设为：750 * 100 / 640，结果为：117rpx。</li><li>若设计稿宽度为 375px，元素 B 在设计稿上的宽度为 200px，那么元素 B 在 uni-app 里面的宽度应该设为：750 * 200 / 375，结果为：400rpx。</li></ul><h5 id="_2-3-tips" tabindex="-1"><a class="header-anchor" href="#_2-3-tips" aria-hidden="true">#</a> 2.3 Tips</h5><ul><li>注意 rpx 是和宽度相关的单位，屏幕越宽，该值实际像素越大。如不想根据屏幕宽度缩放，则应该使用 px 单位。</li><li>如果开发者在字体或高度中也使用了 rpx ，那么需注意这样的写法意味着随着屏幕变宽，字体会变大、高度会变大。如果你需要固定高度，则应该使用 px 。</li><li>rpx 不支持动态横竖屏切换计算，使用 rpx 建议锁定屏幕方向</li><li>设计师可以用 iPhone6 作为视觉稿的标准。</li><li>如果设计稿不是 750px，HBuilderX 提供了自动换算的工具，详见：HBuilderX中自动转换px为upx。</li><li>App 端，在 pages.json 里的 titleNView 或页面里写的 plus api 中涉及的单位，只支持 px，不支持 rpx。</li><li>早期 uni-app 提供了 upx ，目前已经推荐统一改为 rpx 了</li></ul><h4 id="_3-样式导入" tabindex="-1"><a class="header-anchor" href="#_3-样式导入" aria-hidden="true">#</a> 3. 样式导入</h4><p>使用@import语句可以导入外联样式表，@import后跟需要导入的外联样式表的相对路径，用;表示语句结束。</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
<span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;../../common/uni.css&quot;</span><span class="token punctuation">;</span></span>

<span class="token selector">.uni-card</span> <span class="token punctuation">{</span>
    <span class="token property">box-shadow</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-内联样式" tabindex="-1"><a class="header-anchor" href="#_4-内联样式" aria-hidden="true">#</a> 4. 内联样式</h4><p>框架组件上支持使用 style、class 属性来控制组件的样式</p><ul><li>style：静态的样式统一写到 class 中。style 接收动态的样式，在运行时会进行解析，请尽量避免将静态的样式写进 style 中，以免影响渲染速度。</li><li>class：用于指定样式规则，其属性值是样式规则中类选择器名(样式类名)的集合，样式类名不需要带上.，样式类名之间用空格分隔。</li></ul><h4 id="_5-选择器" tabindex="-1"><a class="header-anchor" href="#_5-选择器" aria-hidden="true">#</a> 5. 选择器</h4><table><thead><tr><th style="text-align:left;">选择器</th><th style="text-align:left;">样例</th><th style="text-align:left;">样例描述</th></tr></thead><tbody><tr><td style="text-align:left;">.class</td><td style="text-align:left;">.intro</td><td style="text-align:left;">选择所有拥有 class=&quot;intro&quot; 的组件</td></tr><tr><td style="text-align:left;">#id</td><td style="text-align:left;">#firstname</td><td style="text-align:left;">选择拥有 id=&quot;firstname&quot; 的组件</td></tr><tr><td style="text-align:left;">element</td><td style="text-align:left;">view</td><td style="text-align:left;">选择所有 view 组件</td></tr><tr><td style="text-align:left;">element, element</td><td style="text-align:left;">view, checkbox</td><td style="text-align:left;">选择所有文档的 view 组件和所有的 checkbox 组件</td></tr><tr><td style="text-align:left;">::after</td><td style="text-align:left;">view::after</td><td style="text-align:left;">在 view 组件后边插入内容，</td></tr><tr><td style="text-align:left;">::before</td><td style="text-align:left;">view::before</td><td style="text-align:left;">在 view 组件前边插入内容，</td></tr></tbody></table><ul><li>在 uni-app 中不能使用 * 选择器。</li><li>微信小程序自定义组件中仅支持 class 选择器</li><li>page 相当于 body 节点</li></ul><h4 id="_6-全局样式与局部样式" tabindex="-1"><a class="header-anchor" href="#_6-全局样式与局部样式" aria-hidden="true">#</a> 6. 全局样式与局部样式</h4><ul><li>全局：定义在 App.vue 中的样式为全局样式，作用于每一个页面。 <ul><li>App.vue 中通过 @import 语句可以导入外联样式，一样作用于每一个页面。</li><li>nvue 页面暂不支持全局样式</li></ul></li><li>局部：在 pages 目录下 的 vue 文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 App.vue 中相同的选择器。</li></ul><h4 id="_7-css-变量" tabindex="-1"><a class="header-anchor" href="#_7-css-变量" aria-hidden="true">#</a> 7. CSS 变量</h4><h5 id="_7-1-内置css变量" tabindex="-1"><a class="header-anchor" href="#_7-1-内置css变量" aria-hidden="true">#</a> 7.1 内置CSS变量</h5><p>uni-app 提供内置 CSS 变量</p><table><thead><tr><th style="text-align:left;">SS 变量</th><th style="text-align:left;">描述</th><th style="text-align:left;">App</th><th style="text-align:left;">小程序</th><th style="text-align:left;">H5</th></tr></thead><tbody><tr><td style="text-align:left;">--status-bar-height</td><td style="text-align:left;">系统状态栏高度</td><td style="text-align:left;">系统状态栏高度</td><td style="text-align:left;">25px</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">--window-top</td><td style="text-align:left;">内容区域距离顶部的距离</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">NavigationBar 的高度</td></tr><tr><td style="text-align:left;">--window-bottom</td><td style="text-align:left;">内容区域距离底部的距离</td><td style="text-align:left;">0</td><td style="text-align:left;">0</td><td style="text-align:left;">TabBar 的高度</td></tr></tbody></table><h5 id="_7-2-内置变量注意事项" tabindex="-1"><a class="header-anchor" href="#_7-2-内置变量注意事项" aria-hidden="true">#</a> 7.2 内置变量注意事项</h5><ul><li>var(--status-bar-height) 此变量在微信小程序环境为固定 25px，在 App 里为手机实际状态栏高度。</li><li>当设置 &quot;navigationStyle&quot;:&quot;custom&quot; 取消原生导航栏后，由于窗体为沉浸式，占据了状态栏位置。此时可以使用一个高度为 var(--status-bar-height) 的 view 放在页面顶部，避免页面内容出现在状态栏。</li><li>由于在 H5 端，不存在原生导航栏和 tabbar，也是前端 div 模拟。如果设置了一个固定位置的居底 view，在小程序和 App 端是在 tabbar 上方，但在 H5 端会与 tabbar 重叠。此时可使用--window-bottom，不管在哪个端，都是固定在 tabbar 上方。</li><li>目前 nvue 在 App 端，还不支持 --status-bar-height变量，替代方案是在页面 onLoad 时通过 uni.getSystemInfoSync().statusBarHeight 获取状态栏高度，然后通过 style 绑定方式给占位 view 设定高度。下方提供了示例代码</li></ul><h5 id="_7-3-代码块" tabindex="-1"><a class="header-anchor" href="#_7-3-代码块" aria-hidden="true">#</a> 7.3 代码块</h5><p>快速书写 css 变量的方法是：在 css 中敲 hei，在候选助手中即可看到 3 个 css 变量。</p><h4 id="_8-固定值" tabindex="-1"><a class="header-anchor" href="#_8-固定值" aria-hidden="true">#</a> 8. 固定值</h4><p>uni-app 中以下组件的高度是固定的，不可修改：</p><table><thead><tr><th style="text-align:left;">组件</th><th style="text-align:left;">描述</th><th style="text-align:left;">App</th><th style="text-align:left;">H5</th></tr></thead><tbody><tr><td style="text-align:left;">NavigationBar</td><td style="text-align:left;">导航栏</td><td style="text-align:left;">44px</td><td style="text-align:left;">44px</td></tr><tr><td style="text-align:left;">TabBar</td><td style="text-align:left;">底部选项卡</td><td style="text-align:left;">50px，可以自主更改</td><td style="text-align:left;">50p</td></tr></tbody></table><p>各小程序平台，包括同小程序平台的 iOS 和 Android 的高度也不一样</p><h4 id="_9-flex" tabindex="-1"><a class="header-anchor" href="#_9-flex" aria-hidden="true">#</a> 9. Flex</h4><p>为支持跨平台，框架建议使用 Flex 布局。</p><h4 id="_10-背景图片" tabindex="-1"><a class="header-anchor" href="#_10-背景图片" aria-hidden="true">#</a> 10. 背景图片</h4><p>uni-app 支持使用在 css 里设置背景图片，使用方式与普通 web 项目大体相同，但需要注意以下几点：</p><ul><li>支持 base64 格式图片。</li><li>支持网络路径图片。</li><li>小程序不支持在 css 中使用本地文件，包括本地的背景图和字体文件。需以 base64 方式方可使用。</li><li>使用本地路径背景图片需注意 <ul><li>为方便开发者，在背景图片小于 40kb 时，uni-app 编译到不支持本地背景图的平台时，会自动将其转化为 base64 格式；</li><li>图片大于等于 40kb，会有性能问题，不建议使用太大的背景图，如开发者必须使用，则需自己将其转换为 base64 格式使用，或将其挪到服务器上，从网络地址引用。</li><li>本地背景图片的引用路径推荐使用以 ~@ 开头的绝对路径。</li></ul></li><li>微信小程序不支持相对路径（真机不支持，开发工具支持）</li></ul><h4 id="_11-字体图标" tabindex="-1"><a class="header-anchor" href="#_11-字体图标" aria-hidden="true">#</a> 11. 字体图标</h4><p>uni-app 支持使用字体图标，使用方式与普通 web 项目相同，需要注意以下几点：</p>`,60),o=t("li",null,"支持 base64 格式字体图标。",-1),c=t("li",null,"支持网络路径字体图标。",-1),u=t("li",null,"小程序不支持在 css 中使用本地文件，包括本地的背景图和字体文件。需以 base64 方式方可使用。",-1),x={href:"http://www.iconfont.cn",target:"_blank",rel:"noopener noreferrer"},f={href:"http://www.iconfont.cn",target:"_blank",rel:"noopener noreferrer"},b=t("li",null,[e("使用本地路径图标字体需注意： "),t("ul",null,[t("li",null,"为方便开发者，在字体文件小于 40kb 时，uni-app 会自动将其转化为 base64 格式；"),t("li",null,"字体文件大于等于 40kb，仍转换为 base64 方式使用的话可能有性能问题，如开发者必须使用，则需自己将其转换为 base64 格式使用，或将其挪到服务器上，从网络地址引用；"),t("li",null,"字体文件的引用路径推荐使用以 ~@ 开头的绝对路径。")])],-1),_=t("li",null,"nvue中不可直接使用 css 的方式引入字体文件，需要在 js 内引入",-1),g=l('<h2 id="iii-ts支持" tabindex="-1"><a class="header-anchor" href="#iii-ts支持" aria-hidden="true">#</a> Ⅲ. TS支持</h2><p>uni-app 支持使用 ts 开发，可参考 Vue.js TypeScript 支持</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>暂略</p></div><h2 id="iv-其他支持" tabindex="-1"><a class="header-anchor" href="#iv-其他支持" aria-hidden="true">#</a> Ⅳ. 其他支持</h2><h4 id="_1-uts语法支持" tabindex="-1"><a class="header-anchor" href="#_1-uts语法支持" aria-hidden="true">#</a> 1. UTS语法支持</h4><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>暂略</p></div><h4 id="_2-jsx语法支持" tabindex="-1"><a class="header-anchor" href="#_2-jsx语法支持" aria-hidden="true">#</a> 2. JSX语法支持</h4><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>暂略</p></div><h4 id="_3-tsx语法支持" tabindex="-1"><a class="header-anchor" href="#_3-tsx语法支持" aria-hidden="true">#</a> 3. TSX语法支持</h4><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>暂略</p></div>',10);function y(v,w){const a=s("ExternalLinkIcon");return d(),r("div",null,[h,t("ul",null,[o,c,u,t("li",null,[e("网络路径必须加协议头 https。 "),t("ul",null,[t("li",null,[e("从 "),t("a",x,[e("http://www.iconfont.cn"),i(a)]),e(" 上拷贝的代码，默认是没加协议头的。")]),t("li",null,[e("从 "),t("a",f,[e("http://www.iconfont.cn"),i(a)]),e(" 上下载的字体文件，都是同名字体（字体名都叫 iconfont，安装字体文件时可以看到），在 nvue 内使用时需要注意，此字体名重复可能会显示不正常，可以使用工具修改。")])])]),b,_]),g])}const A=n(p,[["render",y],["__file","2-4.语言支持.html.vue"]]);export{A as default};
