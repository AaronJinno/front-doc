import{_ as a,P as n,Q as s,a5 as t}from"./framework-3728cbf1.js";const e={},p=t(`<h2 id="i-标记变化" tabindex="-1"><a class="header-anchor" href="#i-标记变化" aria-hidden="true">#</a> Ⅰ. 标记变化</h2><h4 id="_1-内容类型" tabindex="-1"><a class="header-anchor" href="#_1-内容类型" aria-hidden="true">#</a> 1. 内容类型</h4><p>H5的文件扩展名和内容类型保持不变，扩展名依然是<code>.html</code>，内容类型依然是 <code>text/html</code>。</p><h4 id="_2-文档类型-doctype" tabindex="-1"><a class="header-anchor" href="#_2-文档类型-doctype" aria-hidden="true">#</a> 2. 文档类型(doctype)</h4><p>doctype命令声明文档的类型，必须位于代码的第一行。<br> 在H5中，doctype进行了简化，只有一行，H5刻意不声明版本，一份文档将适用所有的版本。 使用H5的doctype会触发浏览器使用标准模式显示页面。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-字符编码" tabindex="-1"><a class="header-anchor" href="#_3-字符编码" aria-hidden="true">#</a> 3. 字符编码</h4><p>在H5中，继续沿用meta元素来设置字符编码，但是简化了charset属性的写法。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ii-兼容性" tabindex="-1"><a class="header-anchor" href="#ii-兼容性" aria-hidden="true">#</a> Ⅱ. 兼容性</h2><p>H5语法是为了保证与之前的HTML语法达到最大程度的兼容而设计的。</p><h4 id="_1-标记省略" tabindex="-1"><a class="header-anchor" href="#_1-标记省略" aria-hidden="true">#</a> 1. 标记省略</h4><p>在H5中，元素的标记可以省略，具体分为3种类型。</p><h5 id="_1-1-不允许写结束标记的元素" tabindex="-1"><a class="header-anchor" href="#_1-1-不允许写结束标记的元素" aria-hidden="true">#</a> 1.1 不允许写结束标记的元素</h5><p>不允许使用开始标记与结束标记将元素括起来的形势，只能使用&lt;元素/&gt;的形势进行书写。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>area、base、br、col、command、embed、hr、img、input、Keygen、
link、meta、param、source、track、wbr。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-可以省略结束标签的元素" tabindex="-1"><a class="header-anchor" href="#_1-2-可以省略结束标签的元素" aria-hidden="true">#</a> 1.2 可以省略结束标签的元素</h5><p>虽然可以省略但是不建议省略。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>li、dt、dd、p、rt、rp、optgroup、option、colgroup、
thead、tbody、tfood、tr、td、th。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-可以省略全部标记的元素" tabindex="-1"><a class="header-anchor" href="#_1-3-可以省略全部标记的元素" aria-hidden="true">#</a> 1.3 可以省略全部标记的元素：</h5><p>即使不写，该元素还是会存在的，可以使用document访问，建议写出来。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>html、head、body、colgroup、tbody.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-布尔值" tabindex="-1"><a class="header-anchor" href="#_2-布尔值" aria-hidden="true">#</a> 2. 布尔值</h4><p>对于具有Boolean值的属性，如disable与readonly等，当只写属性而不指定属性值时，表示属性值为true；如果想要将属性值设置为false，可以不使用该属性。</p><p>将属性名设置为属性值，或用空字符串代替属性值都可以使属性为true。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--只写属性，不写值，代表属性为true--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checked<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--属性值=属性名，代表属性为true--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--属性值=空字符串，代表属性为true--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--不写属性代表属性为false--&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-属性值" tabindex="-1"><a class="header-anchor" href="#_3-属性值" aria-hidden="true">#</a> 3. 属性值</h4><p>属性值两边既可以使用双引号，也可以用单引号。当属性值不包括空字符串、&lt;、&gt;、=、单引号、双引号等字符时，属性值两边的引号可以省略。【不建议省略】</p>`,28),c=[p];function l(o,i){return n(),s("div",null,c)}const u=a(e,[["render",l],["__file","2-2.语法规范.html.vue"]]);export{u as default};
