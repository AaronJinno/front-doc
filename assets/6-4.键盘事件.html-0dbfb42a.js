import{_ as n,o as s,c as a,e as t}from"./app-68218236.js";const p={},e=t(`<h4 id="_1-keydown-按下键盘" tabindex="-1"><a class="header-anchor" href="#_1-keydown-按下键盘" aria-hidden="true">#</a> 1. keydown：按下键盘</h4><p>通常该行为发生的时候，我们可以通过事件对象的keyCode属性获得按下的是哪个按键</p><p>按下键盘后，该事件会连续触发，直到松手。在第一次和第二次之间会间隔稍微长一点，其他的会非常快（为了防止误操作）。</p><h5 id="_1-1-keycode" tabindex="-1"><a class="header-anchor" href="#_1-1-keycode" aria-hidden="true">#</a> 1.1 keycode</h5><p>JS的设计者给每个键盘的按键都分配了一个acsii码，通过事件对象的keyCode属性获得。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function-variable function">onkeydown</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//通过事件对象获得按下的键的数字码</span>
    <span class="token comment">// alert(ev.keyCode);</span>
    <span class="token comment">//判断人物，上下左右哪个方向走：</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>keyCode<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">87</span><span class="token operator">:</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;向上走&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">65</span><span class="token operator">:</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;向左走&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">83</span><span class="token operator">:</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;向下走&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">68</span><span class="token operator">:</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;向右走&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-示例-文本框只能输入文本" tabindex="-1"><a class="header-anchor" href="#_1-2-示例-文本框只能输入文本" aria-hidden="true">#</a> 1.2 示例：文本框只能输入文本</h5><p>可以监控键盘事件，当键盘输入文本时，正常在文本框显示，当键盘输入数字时，在事件方法中return false，禁止默认事件（默认事件就是将文字显示在输入框）。</p><h4 id="_2-keyup-键盘抬起事件" tabindex="-1"><a class="header-anchor" href="#_2-keyup-键盘抬起事件" aria-hidden="true">#</a> 2. keyup：键盘抬起事件</h4><p>通常是用来表示输入完毕（刚刚写的文字写完了），验证内容、或者发射子弹的时候，可以通过keyup事件监视</p><p>keyup的意义: 防止键盘按着不动的时候，程序一直处于验证状态.</p><p>比如用键盘发射子弹</p><ul><li>子弹连发:验证keydown;</li><li>子弹单发:验证keyup;</li></ul><h5 id="_2-1-示例" tabindex="-1"><a class="header-anchor" href="#_2-1-示例" aria-hidden="true">#</a> 2.1 示例</h5><p>验证用户的昵称是否符合正则，在用户抬起按键的时候进行验证,每输完一个字符验证一次.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onkeyup</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-特殊按键" tabindex="-1"><a class="header-anchor" href="#_3-特殊按键" aria-hidden="true">#</a> 3. 特殊按键</h4><p>ctrl、alt、和shift按键都有特殊含义，除了使用keyCode获得外，还有其他获得方法，以此来判断用户是否按下了功能键，因为无法同时判断keyCode等于两个值。</p><p>如何判断用户是否按下ctrl键了，通过事件对象的ctrlKey属性获得，只有按下ctrl键的时候，ctrlKey属性的才为true；altKey、shiftKey一样，只有按下这两个键的时候，值才为true</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function-variable function">onkeydown</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//按下哪个键，对应的值才为true</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>ctrlKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>altKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>shiftKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-实例-通过enter键发布" tabindex="-1"><a class="header-anchor" href="#_4-实例-通过enter键发布" aria-hidden="true">#</a> 4. 实例：通过enter键发布</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">//监视textarea是否发生了键盘按下事件</span>
    <span class="token keyword">var</span> oTextarea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;textarea&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> oContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    oTextarea<span class="token punctuation">.</span><span class="token function-variable function">onkeydown</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// alert(ev.keyCode);</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>keyCode<span class="token operator">==</span><span class="token number">13</span> <span class="token operator">&amp;&amp;</span> ev<span class="token punctuation">.</span>ctrlKey<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//说明按下的是enter键</span>
            oContent<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span><span class="token comment">//将输入框内的信息发送，显示在div</span>
            <span class="token comment">//清除textarea里面的内容</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">//通过事件对象的preventDefault方法阻止默认的行为</span>
            ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//默认是换行,把他取消,不然按下enter键会同时触发该默认行为</span>
        <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","6-4.键盘事件.html.vue"]]);export{k as default};
