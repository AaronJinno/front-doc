import{_ as n,o as s,c as a,e}from"./app-f9b28035.js";const t={},p=e(`<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>默认主题功能有限，很多常用的功能，并没有提供。</p><p>可以选择安装插件补齐需要的功能，也可以自己开发组件和插件丰富功能。</p><p>而第三方主题，就是集成了很多插件和组件的vuepress框架。</p></div><h2 id="hope主题" tabindex="-1"><a class="header-anchor" href="#hope主题" aria-hidden="true">#</a> Hope主题</h2><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>vuePress-them-hope框架集成了大量的插件和细节，可以以该主题为基础进行开发，缺少某个功能再去安装插件。</p><h4 id="_2-特性" tabindex="-1"><a class="header-anchor" href="#_2-特性" aria-hidden="true">#</a> 2. 特性</h4><ul><li>强大且独立的功能：将每个功能提取到一个插件中，可以抽取到其他主题，也可以单独决定是否使用</li><li>最小化配置：所有配置项都有最优的默认值</li><li>改进的布局：默认的布局模式就是最优的</li><li>树摇：主题在保持强大的同时充分实现了“Tree-shaking”</li><li>功能丰富</li><li>UI改进</li><li>SEO优化</li></ul><h4 id="_3-创建项目" tabindex="-1"><a class="header-anchor" href="#_3-创建项目" aria-hidden="true">#</a> 3. 创建项目</h4><p>注意要在cmd里安装。</p><p>dir是要创建的项目的目录名，会在当前目录下创建该目录作为项目根目录。</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pnpm create vuepress-theme-hope [dir]
//npm init vuepress-theme-hope [dir]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>后续操作：会有一些对话，选择包管理器、是否git托管等。</p><h4 id="_4-使用" tabindex="-1"><a class="header-anchor" href="#_4-使用" aria-hidden="true">#</a> 4. 使用</h4><p>创建项目后，本身就是个Demo项目，而非是个单独的框架，可以直接使用。</p><p>只需要了解配置项和插件的使用即可。</p><h4 id="_5-项目命令" tabindex="-1"><a class="header-anchor" href="#_5-项目命令" aria-hidden="true">#</a> 5. 项目命令</h4><p>可以使用pnpm命令，也可以直接使用vuepress命令</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pnpm docs:dev  //启动开发服务器
Ctrl + C  //终止开发服务器
pnpm docs:build  //构建项目并输出
pnpm docs:clean-dev  //清除缓存并启动开发服务器

pnpm dlx vp-update //升级主题和 VuePress 版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-项目内容" tabindex="-1"><a class="header-anchor" href="#_6-项目内容" aria-hidden="true">#</a> 6. 项目内容</h4><h5 id="_6-1-页面的生成" tabindex="-1"><a class="header-anchor" href="#_6-1-页面的生成" aria-hidden="true">#</a> 6.1 页面的生成</h5><ul><li>页面：项目中的每一个 Markdown 文件都是一个单独的页面。</li><li>路由：默认情况下，页面的路由路径是根据你的 Markdown 文件的相对路径决定的。</li></ul><h5 id="_6-2-frontmatter" tabindex="-1"><a class="header-anchor" href="#_6-2-frontmatter" aria-hidden="true">#</a> 6.2 Frontmatter</h5><p>可以理解为对当前页面的页面级配置。Frontmatter会覆盖配置文件中相同的全局配置。</p><p>Frontmatter 必须在 Markdown 文件的顶部，并且被包裹在一对三短划线中间。下面是一个基本的示例</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">lang</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN
<span class="token key atrule">title</span><span class="token punctuation">:</span> 页面的标题
<span class="token key atrule">description</span><span class="token punctuation">:</span> 页面的描述
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_6-3-markdown" tabindex="-1"><a class="header-anchor" href="#_6-3-markdown" aria-hidden="true">#</a> 6.3 Markdown</h5><p>每一个 Markdown 文件都会被 VuePress Theme Hope 处理，将文件内容渲染为网页内容。</p><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><p>PS：Vuepress对目录和文件的大小写敏感</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>├─ <span class="token punctuation">.</span>github <span class="token operator">-</span><span class="token operator">&gt;</span>github page工作流
├─ src  <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">文档文件夹</span><span class="token punctuation">(</span>也可以命名为docs<span class="token punctuation">)</span>
│  ├─ <span class="token punctuation">.</span><span class="token function">vuepress</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">&gt;</span>存放全局配置、组件、静态资源等
│  │  ├─ <span class="token function">dist</span><span class="token punctuation">(</span>最终部署的目录<span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">&gt;</span>整个项目打包后的目录
│  │  ├─ <span class="token punctuation">.</span>cache  <span class="token operator">-</span><span class="token operator">&gt;</span>缓存目录
│  │  ├─ <span class="token punctuation">.</span>temp  <span class="token operator">-</span><span class="token operator">&gt;</span>临时目录
│  │  ├─ components  <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">自定义组件目录</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span>
│  │  ├─ navbar  <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">导航配置目录</span><span class="token punctuation">(</span>包含中英两种语言<span class="token punctuation">)</span>
│  │  ├─ <span class="token keyword">public</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">&gt;</span>静态资源目录 
│  │  │  └─ images <span class="token operator">-</span><span class="token operator">&gt;</span>存放图片静态资源
│  │  ├─ sidebar  <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">侧边栏配置目录</span><span class="token punctuation">(</span>包含中英两种语言<span class="token punctuation">)</span>
│  │  ├─ styles  <span class="token operator">-</span><span class="token operator">&gt;</span>样式目录
│  │  ├─ theme<span class="token punctuation">.</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token punctuation">,</span>ts<span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">&gt;</span>主题配置文件
│  │  ├─ client<span class="token punctuation">.</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token punctuation">,</span>ts<span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">客户端配置文件</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span>
│  │  └─ config<span class="token punctuation">.</span><span class="token function">js</span><span class="token punctuation">(</span><span class="token punctuation">,</span>ts<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>全局配置文件
│  ├─ <span class="token function">zh</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span>  <span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">多语言之中文文档</span><span class="token punctuation">(</span>默认是英文<span class="token punctuation">)</span>
│  ├─ <span class="token function">python</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span>文档分类目录<span class="token punctuation">,</span>可以有很多同类的
│  ├─ <span class="token operator">...</span><span class="token punctuation">(</span>可选<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span>其他项目文档<span class="token punctuation">,</span>可以有非常多
│  └─ <span class="token constant">README</span><span class="token punctuation">.</span>md <span class="token operator">-</span><span class="token operator">&gt;</span>文档首页
├─ node_modules
├─ <span class="token punctuation">.</span>gitignore
├─ <span class="token keyword">package</span><span class="token operator">-</span>lock<span class="token punctuation">.</span>json
└─ <span class="token keyword">package</span><span class="token punctuation">.</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置主题" tabindex="-1"><a class="header-anchor" href="#配置主题" aria-hidden="true">#</a> 配置主题</h2><p>VuePress 使用文档文件夹中的 .vuepress 文件夹存放配置，所有 VuePress 相关的文件都将会被放在这里。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里只是简单介绍信配置，详见：配置中心</p></div><h4 id="_1-配置文件分类" tabindex="-1"><a class="header-anchor" href="#_1-配置文件分类" aria-hidden="true">#</a> 1. 配置文件分类</h4><p>有配置作用的文件非常多，入口配置文件（主配置文件）是config.js</p><ul><li>config.ts：站点配置文件，入口配置文件</li><li>theme.js：主题配置文件，主要配置文件，包含主题内几乎所有的配置项 <ul><li>navbar/*.js：主题配置中提取的导航栏配置文件</li><li>sidebar/*.js: 主题配置中提取的侧边栏配置文件</li></ul></li><li>client.js：客户端配置文件，用来直接配置Vue的</li></ul><h4 id="_2-config-ts" tabindex="-1"><a class="header-anchor" href="#_2-config-ts" aria-hidden="true">#</a> 2. config.ts</h4><p>config.ts是入口配置文件，主题配置文件需要引入该配置文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .vuepress/config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> theme <span class="token keyword">from</span> <span class="token string">&quot;./theme.js&quot;</span><span class="token punctuation">;</span> <span class="token comment">//引入主题配置对象</span>


<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 此处放置配置</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-theme-ts" tabindex="-1"><a class="header-anchor" href="#_3-theme-ts" aria-hidden="true">#</a> 3. theme.ts</h4><p>主题配置文件，为了避免配置文件过长，使用 JavaScript 原生提供的 ESM 特性，将主题配置、导航栏和侧边栏配置拆分到了单独的文件夹中。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> hopeTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress-theme-hope&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> enNavbar<span class="token punctuation">,</span> zhNavbar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./navbar/index.js&quot;</span><span class="token punctuation">;</span> <span class="token comment">//导航栏</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> enSidebar<span class="token punctuation">,</span> zhSidebar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./sidebar/index.js&quot;</span><span class="token punctuation">;</span>
 <span class="token comment">//侧边栏</span>

<span class="token comment">// 我们默认导出了主题对象</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hopeTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// 主题配置</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-配置作用域" tabindex="-1"><a class="header-anchor" href="#_4-配置作用域" aria-hidden="true">#</a> 4. 配置作用域</h4><ul><li>站点配置：站点配置中的配置项被 VuePress 直接读取，和主题无关且在所有主题均可生效。</li><li>主题配置：主题配置是传递给 hopeTheme 函数的对象，它将由 VuePress Theme Hope 处理。</li><li>插件配置：主题捆绑了一些插件，可以在主题选项中通过 plugins.插件名称 来传递插件选项。想要额外使用插件，自行调用插件并传递插件选项</li></ul><h4 id="_5-样式配置" tabindex="-1"><a class="header-anchor" href="#_5-样式配置" aria-hidden="true">#</a> 5. 样式配置</h4><p>主题按照约定俗称，使用 .vuepress/styles 文件夹存放样式配置。</p><ul><li>index.scss 来注入额外的 CSS 样式</li><li>config.scss 来进行样式配置</li><li>palette.scss 来配置颜色与布局</li></ul>`,46),i=[p];function o(c,l){return s(),a("div",null,i)}const u=n(t,[["render",o],["__file","3-1.Hope介绍.html.vue"]]);export{u as default};
