import{_ as h,r as l,o as m,c as v,a,b as r,d as e,n as o,g as c,w as n,e as i}from"./app-ba294a04.js";const g="/front-doc/img/vue/vuepress/2-4-4.jpg",b="/front-doc/img/vue/vuepress/2-4-3.jpg",k="/front-doc/img/vue/vuepress/2-4-2.jpg",f="/front-doc/img/vue/vuepress/2-4-1.jpg",_={},x=i(`<h2 id="container-容器" tabindex="-1"><a class="header-anchor" href="#container-容器" aria-hidden="true">#</a> container：容器</h2><p>主题可以为你添加提示、注释、信息、注意、警告和详情自定义容器的支持。</p><p>很多markdown的小功能本质上都是基于容器的。</p><h4 id="_1-使用容器" tabindex="-1"><a class="header-anchor" href="#_1-使用容器" aria-hidden="true">#</a> 1. 使用容器</h4><p>语法如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>::: 容器样式 自定义标题
  容器内容
:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>样式：容器样式都是内置固定的，不能自定义样式。</li><li>标题：可以为容器设置一个标题，不设置自定义标题，就使用样式对应的标题</li><li>容器内容：内容几乎可以是任意markdown语法</li></ul><h4 id="_2-内置容器样式" tabindex="-1"><a class="header-anchor" href="#_2-内置容器样式" aria-hidden="true">#</a> 2. 内置容器样式</h4>`,8),w={href:"https://plugin-md-enhance.vuejs.press/zh/guide/container.html#%E6%BC%94%E7%A4%BA",target:"_blank",rel:"noopener noreferrer"},z=i(`<h5 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h5><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>::: info 通知信息
这里可以写具体的内容，可以是任意markdown语法
:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="内置样式" tabindex="-1"><a class="header-anchor" href="#内置样式" aria-hidden="true">#</a> 内置样式</h5><ul><li>info：信息容器；默认标题【蓝色】</li><li>note：注释容器；【灰色】</li><li>tip：提示容器；【浅绿色】</li><li>warning：警告容器；【黄色】</li><li>danger：危险容器；【红色】</li><li>details：详情容器；【可折叠灰色】</li></ul><h4 id="_3-嵌套容器" tabindex="-1"><a class="header-anchor" href="#_3-嵌套容器" aria-hidden="true">#</a> 3. 嵌套容器</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>:::: danger 这是嵌套容器
:::tip 子容器1
注意：外面的容器要四个:::
:::
::::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">这是嵌套容器</p><p>很酷</p><div class="hint-container tip"><p class="hint-container-title">子容器1</p><p>注意：外面的容器要四个<code>::::</code></p></div><div class="hint-container info"><p class="hint-container-title">子容器2</p><p>注意：外面的容器要四个<code>::::</code></p></div></div><h2 id="card-卡片" tabindex="-1"><a class="header-anchor" href="#card-卡片" aria-hidden="true">#</a> card：卡片</h2><p>可以在 Markdown 中添加卡片</p><p>该功能默认是不开启的，需要手动开启。</p><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. 语法</h4><p>使用代码块来添加卡片。默认情况下，应该使用 YAML 格式来编写卡片数据，但也可以通过在代码块后添加 :json 后缀来使用 JSON 格式。</p><h5 id="卡片数据支持的属性" tabindex="-1"><a class="header-anchor" href="#卡片数据支持的属性" aria-hidden="true">#</a> 卡片数据支持的属性</h5><ul><li>title</li><li>desc</li><li>logo</li><li>link</li><li>color</li></ul><h4 id="_2-卡片容器" tabindex="-1"><a class="header-anchor" href="#_2-卡片容器" aria-hidden="true">#</a> 2. 卡片容器</h4><p>如果想要将多个卡片放在一起，可以将它们包裹在 card 容器中：<br><img src="`+g+'" alt="2-4-4" loading="lazy"></p><h4 id="_3-示例" tabindex="-1"><a class="header-anchor" href="#_3-示例" aria-hidden="true">#</a> 3. 示例</h4><figure><img src="'+b+'" alt="2-4-3" tabindex="0" loading="lazy"><figcaption>2-4-3</figcaption></figure>',18),q=i(`<h2 id="选项卡" tabindex="-1"><a class="header-anchor" href="#选项卡" aria-hidden="true">#</a> 选项卡</h2><p>需要使用tabs容器，语法如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>::: tabs 
  @tab 标题1
    标题1的内容
    
  @tab 标题2
    标题2的内容
:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>@tab 用来定义一个选项卡，后接选项卡的标题</li></ul>`,4),y=a("pre",null,[a("code",null,`标题1的内容
`)],-1),A=a("pre",null,[a("code",null,`标题2的内容
`)],-1),j=i(`<h2 id="角标" tabindex="-1"><a class="header-anchor" href="#角标" aria-hidden="true">#</a> 角标</h2><h4 id="_1-上角标" tabindex="-1"><a class="header-anchor" href="#_1-上角标" aria-hidden="true">#</a> 1. 上角标</h4><p>使用 <code>^ ^</code> 进行上角标标注</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>2^10^ == 1024
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2<sup>10</sup> == 1024</p><h4 id="_2-下角标" tabindex="-1"><a class="header-anchor" href="#_2-下角标" aria-hidden="true">#</a> 2. 下角标</h4><p>使用 <code>~ ~</code> 进行下角标标注</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>H<span class="token strike"><span class="token punctuation">~</span><span class="token content">2</span><span class="token punctuation">~</span></span>O is water
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>H<sub>2</sub>O is water</p><h2 id="attrs-属性支持" tabindex="-1"><a class="header-anchor" href="#attrs-属性支持" aria-hidden="true">#</a> attrs：属性支持</h2><p>可以使用特殊标记为 Markdown 元素添加额外的属性，默认该功能是开启的。</p><h4 id="_1-作用" tabindex="-1"><a class="header-anchor" href="#_1-作用" aria-hidden="true">#</a> 1. 作用</h4><p>这里的属性可以理解为html标签里的属性。</p><p>可以为一个markdown元素添加一些html标签属性，如：id,class,和一些标签固有的属性，如align。</p><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token comment">&lt;!-- 标题添加id属性 --&gt;</span>
<span class="token title important"><span class="token punctuation">##</span> Chapter{#user}</span>

<span class="token comment">&lt;!-- 链接添加target属性 --&gt;</span>
<span class="token url">[<span class="token content">首页</span>](<span class="token url">/</span>)</span> {target=&quot;_blank&quot;}

<span class="token comment">&lt;!-- 图片添加width属性 --&gt;</span>
<span class="token url"><span class="token operator">!</span>[<span class="token content">img</span>](<span class="token url">link/to/image.png</span>)</span> {width=100rpx}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="footnote-脚注" tabindex="-1"><a class="header-anchor" href="#footnote-脚注" aria-hidden="true">#</a> footnote：脚注</h2><p>为markdown添加脚注，默认该功能是没有开启的。</p><h4 id="_1-语法-1" tabindex="-1"><a class="header-anchor" href="#_1-语法-1" aria-hidden="true">#</a> 1. 语法</h4><p>在 Markdown 中使用 <code>[^锚点文字]</code> 来定义脚注。</p><p>在之后的任何位置使用 <code>[^锚点文字]</code>: ... 来描述脚注内容。不过，无论在哪里描述，脚注的解释都是在最底部。</p><h4 id="_2-示例-1" tabindex="-1"><a class="header-anchor" href="#_2-示例-1" aria-hidden="true">#</a> 2. 示例</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>奥特曼[^1]创建了openAI[^2]

[^1]:奥特曼很厉害 
[^2]:openAI is awasome
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>奥特曼<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>创建了openAI<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><figure><img src="`+k+`" alt="2-4-2" tabindex="0" loading="lazy"><figcaption>2-4-2</figcaption></figure><h2 id="图片处理" tabindex="-1"><a class="header-anchor" href="#图片处理" aria-hidden="true">#</a> 图片处理</h2><p>一系列图片相关的语法增强：figure、懒加载、图片标记、图片大小。</p><h4 id="_1-imglazyload-图片懒加载" tabindex="-1"><a class="header-anchor" href="#_1-imglazyload-图片懒加载" aria-hidden="true">#</a> 1. imgLazyload：图片懒加载</h4><p>延迟加载图片，默认是开启的，采用的是原生H5的loading=lazy属性。<br> 默认图片已经采用了懒加载，不用进行处理。</p><h4 id="_2-imgmark-图片id标记" tabindex="-1"><a class="header-anchor" href="#_2-imgmark-图片id标记" aria-hidden="true">#</a> 2. imgMark：图片ID标记</h4><p>为图片链接添加id标记，使图片只在特定模式显示（白/黑），该功能默认是不开启的。</p><ul><li>#dark</li><li>#light</li></ul><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token url"><span class="token operator">!</span>[<span class="token content">logo</span>](<span class="token url">../.vuepress/public/logo.png#dark</span>)</span>  //图片只在dark模式显示
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>PS：如果图片在某个模式不显示，但设置了文件名，会单独显示文件名。</p><h4 id="_3-imgsize-图片尺寸" tabindex="-1"><a class="header-anchor" href="#_3-imgsize-图片尺寸" aria-hidden="true">#</a> 3. imgSize：图片尺寸</h4><p>可以直接在图片链接里设置图片大小，该功能默认是开启的。</p><p>PS：页面上显示的是指定的大小，点击图片可以查看原始图片。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>![logo](../.vuepress/public/logo.png &quot;logo&quot; =200x300)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-figure" tabindex="-1"><a class="header-anchor" href="#_4-figure" aria-hidden="true">#</a> 4. figure</h4><p>略，默认编译时，图片是会编译成figure的，只要给了title（猜的）。</p><h2 id="导入文件" tabindex="-1"><a class="header-anchor" href="#导入文件" aria-hidden="true">#</a> 导入文件</h2><p>让Markdown 文件支持导入其他文件，该功能默认是开启的</p><p>注意：这里的导入指的是导入其他md文件的内容（而不是文件本身）</p><h4 id="_1-语法-2" tabindex="-1"><a class="header-anchor" href="#_1-语法-2" aria-hidden="true">#</a> 1. 语法</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>@include(filename) //完整导入目标文件
@include(filename{start-end}) //导入指定的行数范围
@include(filename{start-}) //从指定行数开始导入
@include(filename{-end}) //导入到指定行数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-示例-2" tabindex="-1"><a class="header-anchor" href="#_2-示例-2" aria-hidden="true">#</a> 2. 示例</h4><figure><img src="`+f+`" alt="2-4-1" tabindex="0" loading="lazy"><figcaption>2-4-1</figcaption></figure><h2 id="幻灯片" tabindex="-1"><a class="header-anchor" href="#幻灯片" aria-hidden="true">#</a> 幻灯片</h2><p>使用reveal.js插件，可以让markdown支持幻灯片，该功能默认是开启的。</p><p>配置如下：resentation.plugins 接收一个字符串数组，可以自由配置是否启用一些预设的插件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">presentation</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">//开启幻灯片</span>
    <span class="token comment">//这里是幻灯片支持的功能(plugin)</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;highlight&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;math&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;search&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;notes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zoom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-语法-3" tabindex="-1"><a class="header-anchor" href="#_1-语法-3" aria-hidden="true">#</a> 1. 语法</h4><ul><li>使用 --- 分割幻灯片</li><li>使用 -- 对幻灯片进行二次分割(垂直显示)</li></ul><h4 id="_2-主题" tabindex="-1"><a class="header-anchor" href="#_2-主题" aria-hidden="true">#</a> 2. 主题</h4><p>主题和幻灯片的背景色有关。</p><ul><li>auto (默认)</li><li>black</li><li>white</li><li>league</li><li>beige</li><li>sky</li><li>night</li><li>serif</li><li>simple</li><li>solarized</li><li>blood</li><li>moon</li></ul><h4 id="_3-示例-1" tabindex="-1"><a class="header-anchor" href="#_3-示例-1" aria-hidden="true">#</a> 3. 示例</h4><p>注意：---风格符前后需要有空格。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>@slidestart black

<span class="token title important"><span class="token punctuation">##</span> 幻灯片 1</span>
一个有文字和 <span class="token url">[<span class="token content">链接</span>](<span class="token url">https://mrhope.site</span>)</span> 的段落

<span class="token hr punctuation">---</span>

<span class="token title important"><span class="token punctuation">##</span> 幻灯片 2</span>
<span class="token list punctuation">-</span> 项目 1
<span class="token list punctuation">-</span> 项目 2

<span class="token hr punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>奥特曼很厉害 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>openAI is awasome <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>`,61);function M(I,C){const p=l("ExternalLinkIcon"),t=l("VPCard"),u=l("Tabs");return m(),v("div",null,[x,a("p",null,[a("a",w,[r("样式详见"),e(p)])]),z,e(t,o(c({title:"Mr.Hope",desc:"Where there is light, there is hope",logo:"https://mrhope.site/logo.svg",link:"https://mrhope.site",color:"rgba(253, 230, 138, 0.15)"})),null,16),e(t,o(c({title:"Mr.Hope",desc:"Where there is light, there is hope",logo:"https://mrhope.site/logo.svg",link:"https://mrhope.site",color:"rgba(253, 230, 138, 0.15)"})),null,16),q,e(u,{id:"170",data:[{id:"标题1"},{id:"标题2"}]},{title0:n(({value:s,isActive:d})=>[r("标题1")]),title1:n(({value:s,isActive:d})=>[r("标题2")]),tab0:n(({value:s,isActive:d})=>[y]),tab1:n(({value:s,isActive:d})=>[A]),_:1}),j])}const V=h(_,[["render",M],["__file","2-4.常用增强语法.html.vue"]]);export{V as default};
