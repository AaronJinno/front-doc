import{_ as i,o as a,c as e,e as l}from"./app-351da1f5.js";const d={},r=l(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>H5新增Geolocation API 来作为地理位置的应用接口。</p><p>该API在大部分浏览器中子支持https通信。</p><p>该API一般应用于移动端，且该设备可以进行定位。</p><p>仅做基本了解，具体API更新较快，暂略。</p></div><h2 id="i-地理位置基础" tabindex="-1"><a class="header-anchor" href="#i-地理位置基础" aria-hidden="true">#</a> Ⅰ. 地理位置基础</h2><h4 id="_1-geolocation使用方法" tabindex="-1"><a class="header-anchor" href="#_1-geolocation使用方法" aria-hidden="true">#</a> 1. Geolocation使用方法</h4><p>请求一个地理位置信息，如果用户同意，浏览器就会返回位置信息，该位置信息是通过支持HTML5地理定位功能的底层设备（手机等）提供给浏览器的，位置信息由经纬度坐标和一些其他元数据组成。</p><h4 id="_2-geolocation应用场景" tabindex="-1"><a class="header-anchor" href="#_2-geolocation应用场景" aria-hidden="true">#</a> 2. Geolocation应用场景</h4><ul><li>提供周边商务信息</li><li>运动信息</li><li>导航信息</li><li>交友等位置信息。</li></ul><h4 id="_3-位置信息的表达方式" tabindex="-1"><a class="header-anchor" href="#_3-位置信息的表达方式" aria-hidden="true">#</a> 3. 位置信息的表达方式</h4><p>位置信息主要由经纬度坐标组成，如：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Latitude:39.18333,longitude:-120.12334
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Latitude是维度，longitude是经度。</li><li>数据有两种格式，上面的是十进制格式，该API返回的数据是十进制格式。</li><li>位置信息还包括：位置准确度、海拔、海拔准确度、行驶方向、速度等。取决于设备和浏览器，如果这些元数据不存在，则返回null。</li></ul><h4 id="_4-位置信息来源" tabindex="-1"><a class="header-anchor" href="#_4-位置信息来源" aria-hidden="true">#</a> 4. 位置信息来源</h4><p>Geolocation API不指定位置信息的来源，只用于检索信息，设备可以使用下列数据</p><ul><li>IP地址；</li><li>三维坐标：GPS、RFID、Wi-Fi、和蓝牙的MAC地址</li><li>用户自定义数据：GSM、CDMA手机的ID。</li></ul><h4 id="_5-ip定位" tabindex="-1"><a class="header-anchor" href="#_5-ip定位" aria-hidden="true">#</a> 5. IP定位</h4><p>自动查询用户的IP地址，然后检索其注册的物理地址，如果用户的IP地址是ISP提供的，其位置往往就由服务供应商的物理地址决定，该地址举例用户数千米。（用作判断用户所在城市是可以的）。</p><ul><li>优点：任何地方都可用、在服务器端处理</li><li>缺点：不精确（城市级）、运算代价大，易出错。</li><li>用途：根据IP地址进行推广。</li></ul><h4 id="_6-gps定位" tabindex="-1"><a class="header-anchor" href="#_6-gps定位" aria-hidden="true">#</a> 6. GPS定位</h4><p>比较精确的定位，一般要通过异步处理。<br> 比较耗电、需要硬件支持。</p><h4 id="_7-wi-fi定位" tabindex="-1"><a class="header-anchor" href="#_7-wi-fi定位" aria-hidden="true">#</a> 7. Wi-Fi定位</h4><p>通过用户当前位置到已知的多个Wi-Fi介入点的距离来进行定位。<br> 比较精确且能在室内使用，前提是有WiFi。</p><h4 id="_8-手机定位" tabindex="-1"><a class="header-anchor" href="#_8-手机定位" aria-hidden="true">#</a> 8. 手机定位</h4><p>基于手机的地理定位信息是通过计算用户到一些基站三角定位确定的。</p><h4 id="_9-自定义定位" tabindex="-1"><a class="header-anchor" href="#_9-自定义定位" aria-hidden="true">#</a> 9. 自定义定位</h4><p>除了计算用户位置外，允许用户自定义其位置，手动输入。<br> 可以配合自动定位使用。比如外卖地址。</p>`,24),t=[r];function n(h,o){return a(),e("div",null,t)}const s=i(d,[["render",n],["__file","x-6.地理位置.html.vue"]]);export{s as default};
