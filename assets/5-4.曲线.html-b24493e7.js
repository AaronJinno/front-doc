import{_ as n,o as a,c as s,e as t}from"./app-68218236.js";const p="/front-doc/img/basic/html/5-4-1.png",e="/front-doc/img/basic/html/5-4-2.png",c={},o=t('<h2 id="i-绘制曲线" tabindex="-1"><a class="header-anchor" href="#i-绘制曲线" aria-hidden="true">#</a> Ⅰ. 绘制曲线</h2><p>可以使用context对象的 arcTo 方法绘制曲线。</p><h4 id="_1-说明" tabindex="-1"><a class="header-anchor" href="#_1-说明" aria-hidden="true">#</a> 1. 说明</h4><p>arcTo 方法可以说是lineTo的曲线版，在路径中添加一条曲线，使用直线连接当前坐标点与曲线起点。</p><h4 id="_2-图示" tabindex="-1"><a class="header-anchor" href="#_2-图示" aria-hidden="true">#</a> 2. 图示</h4><figure><img src="'+p+`" alt="5-4-1" tabindex="0" loading="lazy"><figcaption>5-4-1</figcaption></figure><p>(x0, y0)为当前坐标点坐标，(x2, y2) 为圆弧终点坐标，(x1，y1) 为绘制圆弧时使用的控制点坐标，radius代表圆弧半径。</p><h4 id="_3-arcto方法定义" tabindex="-1"><a class="header-anchor" href="#_3-arcto方法定义" aria-hidden="true">#</a> 3. arcTo方法定义</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">arcTo</span><span class="token punctuation">(</span>xl<span class="token punctuation">,</span>yl<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>radiusX<span class="token punctuation">[</span><span class="token punctuation">,</span>radiusY<span class="token punctuation">,</span>rotation<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>x1 与 y2 代表控制点的横纵坐标，X2参数与 y2参数代表圆弧终点的横纵坐标。</p><p>当不使用第六个参数 radiusY 时， mdiusX 参数代表圆弧半径，当使用第六个参数radiusY 时， radiusX 参数代表圆弧横向半径， radiusY 参数代表圆弧纵向半径（即绘制椭圆形圆弧)，当绘制椭圆形圆弧时，第七个参数代表椭圆的顺时针方向旋转角度。</p><h4 id="_4-绘制曲线示例" tabindex="-1"><a class="header-anchor" href="#_4-绘制曲线示例" aria-hidden="true">#</a> 4. 绘制曲线示例</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&quot;2d&quot;</span><span class="token punctuation">)</span>；
    context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">arcTo</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-quadraticcurveto" tabindex="-1"><a class="header-anchor" href="#ii-quadraticcurveto" aria-hidden="true">#</a> Ⅱ. quadraticCurveTo</h2><p>该方法用来绘制贝塞尔（二次方）曲线。</p><h4 id="_1-用法" tabindex="-1"><a class="header-anchor" href="#_1-用法" aria-hidden="true">#</a> 1. 用法</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span>cpx<span class="token punctuation">,</span>cpy<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>cpx：控制点X坐标</li><li>cpy：控制点y坐标</li><li>x：结束的X坐标</li><li>y：结束的y坐标</li></ul><h4 id="_2-曲线的开始点" tabindex="-1"><a class="header-anchor" href="#_2-曲线的开始点" aria-hidden="true">#</a> 2. 曲线的开始点</h4><p>曲线的开始点是当前路径中的最后一个点，如果路径不存在，需要使用beginPath()和moveTo()方法来定义开始点。</p><h4 id="_3-二次方曲线的绘制步骤" tabindex="-1"><a class="header-anchor" href="#_3-二次方曲线的绘制步骤" aria-hidden="true">#</a> 3. 二次方曲线的绘制步骤</h4><ul><li>确定开始点：moveTo(20,20);</li><li>定义控制点和结束点：quadraticCurveTo(20,100,200,20);</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">canvas1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;canvas1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">quadraticCurveTo</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-beziercurveto" tabindex="-1"><a class="header-anchor" href="#iii-beziercurveto" aria-hidden="true">#</a> Ⅲ. bezierCurveTo</h2><p>该方法用来绘制贝塞尔（三次方）曲线。</p><h4 id="_1-说明-1" tabindex="-1"><a class="header-anchor" href="#_1-说明-1" aria-hidden="true">#</a> 1. 说明</h4><p>绘制贝塞尔曲线时，需要使用“ bezierCurveTo ”方法。将从当前坐标点到指定坐标点中间的贝塞尔曲线追加到路径中。</p><h4 id="_2-beziercurveto定义" tabindex="-1"><a class="header-anchor" href="#_2-beziercurveto定义" aria-hidden="true">#</a> 2. bezierCurveTo定义</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>context<span class="token punctuation">.</span><span class="token function">bezierCurveTo</span><span class="token punctuation">(</span>cplx<span class="token punctuation">,</span>cply<span class="token punctuation">,</span>cp2x<span class="token punctuation">,</span>cp2y<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>cplx 为第一个控制点的横坐标， cply 为第一个控制点的纵坐标；</li><li>cP2x 为第二个控制点的横坐标，cp2y 为第二个控制点的纵坐标；</li><li>x 为贝塞尔曲线的终点横坐标， y 为贝塞尔曲线的终点纵坐标。</li></ul><h4 id="_3-绘制步骤" tabindex="-1"><a class="header-anchor" href="#_3-绘制步骤" aria-hidden="true">#</a> 3. 绘制步骤</h4><p>与二次方曲线类似。</p><h2 id="iv-使用path2d" tabindex="-1"><a class="header-anchor" href="#iv-使用path2d" aria-hidden="true">#</a> Ⅳ. 使用path2D</h2><p>可以使用path2D对象的各种方法绘制直线、矩形、圆形、椭圆以及曲线。</p><h4 id="_1-path2d对象方法表" tabindex="-1"><a class="header-anchor" href="#_1-path2d对象方法表" aria-hidden="true">#</a> 1. path2D对象方法表</h4><figure><img src="`+e+`" alt="5-4-2" tabindex="0" loading="lazy"><figcaption>5-4-2</figcaption></figure><h4 id="_2-绘制图形与轮廓" tabindex="-1"><a class="header-anchor" href="#_2-绘制图形与轮廓" aria-hidden="true">#</a> 2. 绘制图形与轮廓</h4><p>可以使用context对象的 fill 方法填充使用 Path2D 对象绘制的路径所形成的图形或使用context对象的 stroke 方法绘制使用 Path2D 对象绘制的路径所形成的图形轮廓。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// path 变量代表一个 Path2D 对象</span>
context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-路径复制" tabindex="-1"><a class="header-anchor" href="#_3-路径复制" aria-hidden="true">#</a> 3. 路径复制</h4><p>可以在 Path2D 对象的构造函数中使用一个参数，参数值为另外一个 Path2D 对象，这将该对象所代表的路径复制给新创建的 Path2D 对象。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> path2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path2D</span><span class="token punctuation">(</span>path1<span class="token punctuation">)</span><span class="token punctuation">;</span>
path2<span class="token punctuation">.</span><span class="token function">addPath</span><span class="token punctuation">(</span>pathl<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-案例-绘制一个矩形和圆形" tabindex="-1"><a class="header-anchor" href="#_4-案例-绘制一个矩形和圆形" aria-hidden="true">#</a> 4. 案例：绘制一个矩形和圆形</h4><p>创建一个 Path2D 对象绘制一个矩形路径；创建第二个 Path2D 对象并将第一个 Path2D 对象路径复制给它；再次使用第二个 Path2D 对象绘制一个圆形路径；</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementByld</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>canvas <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> pathl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path2D</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pathl<span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> path2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path2D</span><span class="token punctuation">(</span>pathl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    path2<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    path2<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span> <span class="token number">170</span> <span class="token punctuation">,</span> <span class="token number">60</span> <span class="token punctuation">,</span> <span class="token number">50</span> <span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    context<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span>path2 <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-svg" tabindex="-1"><a class="header-anchor" href="#_5-svg" aria-hidden="true">#</a> 5. SVG</h4><p>可以在 Path2D 对象的构造函数中使用一个代表了SVG 路径的字符串，表示使用该Path2D 对象绘制该路径。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> pathl<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Path2D</span><span class="token punctuation">(</span><span class="token string">&quot;M10 10 h 80 v 80 h -80 Z &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//绘制一个矩形</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>首先将绘制起点设置在（10, 10)处 （ SVG 路径字符串中为“ M 10 10”）；</li><li>其次横向绘制80个像素（ SVG 路径字符串中为“ h 80”）；</li><li>再次纵向绘制80个像素（ SVG 路径字符串中为 “v 80”）；</li><li>然后横向反向绘制80个像素（ SVG 路径字符串中为“ h -80”）；</li><li>最后绘制到起点处（ SVG 路径字符串中为“ Z ”）。</li></ul>`,49),i=[o];function u(l,r){return a(),s("div",null,i)}const k=n(c,[["render",u],["__file","5-4.曲线.html.vue"]]);export{k as default};
