import{_ as c,P as h,Q as u,S as e,a3 as p,a4 as n,a6 as i,a5 as a,C as s}from"./framework-3728cbf1.js";const m="/front-doc/img/vue/vuepress/2-4-2.jpg",v={},b=a(`<h2 id="container-容器" tabindex="-1"><a class="header-anchor" href="#container-容器" aria-hidden="true">#</a> container：容器</h2><p>主题可以为你添加提示、注释、信息、注意、警告和详情自定义容器的支持。</p><p>很多markdown的小功能本质上都是基于容器的。</p><h4 id="_1-使用容器" tabindex="-1"><a class="header-anchor" href="#_1-使用容器" aria-hidden="true">#</a> 1. 使用容器</h4><p>语法如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>::: 容器样式 自定义标题
  容器内容
:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>样式：容器样式都是内置固定的，不能自定义样式。</li><li>标题：可以为容器设置一个标题，不设置自定义标题，就使用样式对应的标题</li><li>容器内容：内容几乎可以是任意markdown语法</li></ul><h4 id="_2-内置容器样式" tabindex="-1"><a class="header-anchor" href="#_2-内置容器样式" aria-hidden="true">#</a> 2. 内置容器样式</h4>`,8),f={href:"https://plugin-md-enhance.vuejs.press/zh/guide/container.html#%E6%BC%94%E7%A4%BA",target:"_blank",rel:"noopener noreferrer"},_=a(`<h5 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h5><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>::: info 通知信息
这里可以写具体的内容，可以是任意markdown语法
:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="内置样式" tabindex="-1"><a class="header-anchor" href="#内置样式" aria-hidden="true">#</a> 内置样式</h5><ul><li>info：信息容器；默认标题【蓝色】</li><li>note：注释容器；【灰色】</li><li>tip：提示容器；【浅绿色】</li><li>warning：警告容器；【黄色】</li><li>danger：危险容器；【红色】</li><li>details：详情容器；【可折叠灰色】</li></ul><h4 id="_3-嵌套容器" tabindex="-1"><a class="header-anchor" href="#_3-嵌套容器" aria-hidden="true">#</a> 3. 嵌套容器</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>:::: danger 这是嵌套容器
:::tip 子容器1
注意：外面的容器要四个:::
:::
::::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">这是嵌套容器</p><p>很酷</p><div class="hint-container tip"><p class="hint-container-title">子容器1</p><p>注意：外面的容器要四个<code>::::</code></p></div><div class="hint-container info"><p class="hint-container-title">子容器2</p><p>注意：外面的容器要四个<code>::::</code></p></div></div><h2 id="card-卡片" tabindex="-1"><a class="header-anchor" href="#card-卡片" aria-hidden="true">#</a> card：卡片</h2><h2 id="选项卡" tabindex="-1"><a class="header-anchor" href="#选项卡" aria-hidden="true">#</a> 选项卡</h2><p>需要使用tabs容器，语法如下：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>::: tabs 
  @tab 标题1
    标题1的内容
    
  @tab 标题2
    标题2的内容
:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>@tab 用来定义一个选项卡，后接选项卡的标题</li></ul>`,12),g=e("pre",null,[e("code",null,`标题1的内容
`)],-1),k=e("pre",null,[e("code",null,`标题2的内容
`)],-1),x=a(`<h2 id="角标" tabindex="-1"><a class="header-anchor" href="#角标" aria-hidden="true">#</a> 角标</h2><h4 id="_1-上角标" tabindex="-1"><a class="header-anchor" href="#_1-上角标" aria-hidden="true">#</a> 1. 上角标</h4><p>使用 <code>^ ^</code> 进行上角标标注</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>2^10^ == 1024
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2<sup>10</sup> == 1024</p><h4 id="_2-下角标" tabindex="-1"><a class="header-anchor" href="#_2-下角标" aria-hidden="true">#</a> 2. 下角标</h4><p>使用 <code>~ ~</code> 进行下角标标注</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>H<span class="token strike"><span class="token punctuation">~</span><span class="token content">2</span><span class="token punctuation">~</span></span>O is water
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>H<sub>2</sub>O is water</p><h2 id="attrs-属性支持" tabindex="-1"><a class="header-anchor" href="#attrs-属性支持" aria-hidden="true">#</a> attrs：属性支持</h2><p>可以使用特殊标记为 Markdown 元素添加额外的属性，默认该功能是开启的。</p><h4 id="_1-作用" tabindex="-1"><a class="header-anchor" href="#_1-作用" aria-hidden="true">#</a> 1. 作用</h4><p>这里的属性可以理解为html标签里的属性。</p><p>可以为一个markdown元素添加一些html标签属性，如：id,class,和一些标签固有的属性，如align。</p><h4 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token comment">&lt;!-- 标题添加id属性 --&gt;</span>
<span class="token title important"><span class="token punctuation">##</span> Chapter{#user}</span>

<span class="token comment">&lt;!-- 链接添加target属性 --&gt;</span>
<span class="token url">[<span class="token content">首页</span>](<span class="token url">/</span>)</span> {target=&quot;_blank&quot;}

<span class="token comment">&lt;!-- 图片添加width属性 --&gt;</span>
<span class="token url"><span class="token operator">!</span>[<span class="token content">img</span>](<span class="token url">link/to/image.png</span>)</span> {width=100rpx}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="footnote-脚注" tabindex="-1"><a class="header-anchor" href="#footnote-脚注" aria-hidden="true">#</a> footnote：脚注</h2><p>为markdown添加脚注，默认该功能是没有开启的。</p><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. 语法</h4><p>在 Markdown 中使用 <code>[^锚点文字]</code> 来定义脚注。</p><p>在之后的任何位置使用 <code>[^锚点文字]</code>: ... 来描述脚注内容。不过，无论在哪里描述，脚注的解释都是在最底部。</p><h4 id="_2-示例-1" tabindex="-1"><a class="header-anchor" href="#_2-示例-1" aria-hidden="true">#</a> 2. 示例</h4><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>奥特曼[^1]创建了openAI[^2]

[^1]:奥特曼很厉害 
[^2]:openAI is awasome
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>奥特曼<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>创建了openAI<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><figure><img src="`+m+'" alt="2-4-2" tabindex="0" loading="lazy"><figcaption>2-4-2</figcaption></figure><h2 id="图片处理" tabindex="-1"><a class="header-anchor" href="#图片处理" aria-hidden="true">#</a> 图片处理</h2><h2 id="导入文件" tabindex="-1"><a class="header-anchor" href="#导入文件" aria-hidden="true">#</a> 导入文件</h2><h2 id="幻灯片" tabindex="-1"><a class="header-anchor" href="#幻灯片" aria-hidden="true">#</a> 幻灯片</h2><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>奥特曼很厉害 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>openAI is awasome <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',30);function w(A,I){const d=s("ExternalLinkIcon"),r=s("Tabs");return h(),u("div",null,[b,e("p",null,[e("a",f,[p("样式详见"),n(d)])]),_,n(r,{id:"114",data:[{title:"标题1"},{title:"标题2"}]},{tab0:i(({title:t,value:l,isActive:o})=>[g]),tab1:i(({title:t,value:l,isActive:o})=>[k]),_:1}),x])}const C=c(v,[["render",w],["__file","2-4.常用增强语法.html.vue"]]);export{C as default};
