import{_ as n,o as a,c as i,e as s}from"./app-277eb25d.js";const e="/front-doc/img/basic/css/4-1-1.jpg",l={},t=s('<p>网页布局的本质：把网页元素比如文字图片等等，放入盒子里面，然后利用CSS摆放盒子的过程，就是网页布局。</p><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><ul><li>所有HTML元素可以看作盒子，在CSS中，&quot;box model&quot;这一术语是用来设计和布局时使用。</li><li>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。</li><li>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</li><li>所有的文档元素（标签）都会生成一个矩形框，我们成为元素框（element box），它描述了一个文档元素再网页布局汇总所占的位置大小。因此，每个盒子除了有自己大小和位置外，还影响着其他盒子的大小和位置。</li></ul><h4 id="_2-盒模型的组成" tabindex="-1"><a class="header-anchor" href="#_2-盒模型的组成" aria-hidden="true">#</a> 2. 盒模型的组成</h4><figure><img src="'+e+`" alt="4-1-1" tabindex="0" loading="lazy"><figcaption>4-1-1</figcaption></figure><ul><li>Margin(外边距) - 清除边框外的区域，外边距是透明的。</li><li>Border(边框) - 围绕在内边距和内容外的边框。</li><li>Padding(内边距) - 清除内容周围的区域，内边距是透明的。</li><li>Content(内容) - 盒子的内容，显示文本和图像。</li></ul><h4 id="_3-布局的稳定性" tabindex="-1"><a class="header-anchor" href="#_3-布局的稳定性" aria-hidden="true">#</a> 3. 布局的稳定性</h4><p>优先使用 宽度（width）其次使用内边距（padding）再次外边距（margin）。</p><p><code>width &gt; padding &gt; margin</code></p><ul><li>margin 会有外边距合并 还有 ie6下面margin 加倍的bug所以最后使用。</li><li>padding 会影响盒子大小， 需要进行加减计算（麻烦） 其次使用。</li><li>width 没有问题我们经常使用宽度剩余法 高度剩余法来做。</li></ul><h4 id="_4-元素的宽度和高度" tabindex="-1"><a class="header-anchor" href="#_4-元素的宽度和高度" aria-hidden="true">#</a> 4. 元素的宽度和高度</h4><p>当指定一个CSS元素的宽度和高度属性时，只是设置内容区域的宽度和高度。而完全大小的元素，你还必须添加填充，边框和边距。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 220px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 5px solid gray<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4-1-符合css规范的盒子模型的总宽度和总高度的计算原则是" tabindex="-1"><a class="header-anchor" href="#_4-1-符合css规范的盒子模型的总宽度和总高度的计算原则是" aria-hidden="true">#</a> 4.1 符合CSS规范的盒子模型的总宽度和总高度的计算原则是：</h5><ul><li>外盒尺寸计算 <ul><li>Element空间高度 = content height + padding + border + margin</li><li>Element 空间宽度 = content width + padding + border + margin</li></ul></li><li>内盒尺寸计算 <ul><li>Element Height = content height + padding + border （Height为内容高度）</li><li>Element Width = content width + padding + border （Width为内容宽度）</li></ul></li></ul><h5 id="_4-2-注意" tabindex="-1"><a class="header-anchor" href="#_4-2-注意" aria-hidden="true">#</a> 4.2 注意</h5><ul><li>宽度属性width和高度属性height仅适用于块级元素，对行内元素无效（ img 标签和 input除外）。</li><li>计算盒子模型的总高度时，还应考虑上下两个盒子垂直外边距合并的情况。</li><li>如果是一个盒子则会和父亲一样宽 占满父亲的宽度， 如果此盒子没有给定宽度 则padding 不会影响本盒子大小。</li></ul><h4 id="_5-初始化盒模型" tabindex="-1"><a class="header-anchor" href="#_5-初始化盒模型" aria-hidden="true">#</a> 5. 初始化盒模型</h4><p>不同的浏览器都会预留一些margin padding，这样会导致布局的混乱，要先进行清除，设置CSS前可先设置CSS初始化代码。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">*</span><span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-注意" tabindex="-1"><a class="header-anchor" href="#_6-注意" aria-hidden="true">#</a> 6. 注意</h4><ul><li>一般只有块状元素可以当做盒子</li><li>图片也可以当做是一个盒子（实心盒子）,可以设置padding、margin、位置等。</li><li>行内元素 <ul><li>行内元素是只有左右外边距的，是没有上下外边距的。</li><li>我们尽量不要给行内元素指定上下的内外边距就好了。</li></ul></li></ul>`,22),d=[t];function r(c,p){return a(),i("div",null,d)}const u=n(l,[["render",r],["__file","4-1.盒模型.html.vue"]]);export{u as default};
