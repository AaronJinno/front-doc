import{_ as a,o as s,c as n,e as t}from"./app-c07941ad.js";const e="/front-doc/img/basic/js/1-1-1.jpg",p={},i=t(`<h2 id="i-js-简介" tabindex="-1"><a class="header-anchor" href="#i-js-简介" aria-hidden="true">#</a> Ⅰ. JS 简介</h2><p>JavaScript是一个独立的编程语言（轻量级、弱类型），之前JavaScript只能运行在浏览器端，近几年Google公司推出node.js，使得JavaScript可以运行在服务器端。</p><h4 id="_1-脚本语言" tabindex="-1"><a class="header-anchor" href="#_1-脚本语言" aria-hidden="true">#</a> 1. 脚本语言</h4><ul><li>JavaScript是一种基于对象(object)和事件驱动并具有安全性能的脚本语言.(也是一种解释性语言)</li><li>JavaScript 是可插入 HTML 页面的编程代码</li><li>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行 <ul><li>注意:JavaScript的程序是通过客户端浏览器来解析的,与web服务器并无关联</li></ul></li></ul><h4 id="_2-使用目的和优点" tabindex="-1"><a class="header-anchor" href="#_2-使用目的和优点" aria-hidden="true">#</a> 2. 使用目的和优点</h4><ul><li>与web客户交互作用,美化页面等</li><li>使用JavaScript可在客户端进行数据验证,节约服务器资源</li><li>方便操作页面中的对象,使网页更加友好</li><li>使多种任务在客户端就可完成,从而支持分布式的运算和处理</li></ul><h4 id="_3-js的局限" tabindex="-1"><a class="header-anchor" href="#_3-js的局限" aria-hidden="true">#</a> 3. JS的局限</h4><ul><li>兼容性：不支持JS的浏览器会使用<code>&lt;noscript&gt;</code>元素中定义的内容(文本)来替代</li><li>JS不能打开,读写和保存用户计算机上的文件</li></ul><h2 id="ii-引入js" tabindex="-1"><a class="header-anchor" href="#ii-引入js" aria-hidden="true">#</a> Ⅱ. 引入JS</h2><p>必须在HTML中运行，可以放到HTML标签内的任何地方。<br> 出于性能考虑，多数时候放在页面底部 <code>&lt;/body&gt;</code> 标签结束前加载JavaScript。</p><h4 id="_1-script标签" tabindex="-1"><a class="header-anchor" href="#_1-script标签" aria-hidden="true">#</a> 1. script标签</h4><p>使用<code>&lt;script&gt;code&lt;/script&gt;</code>标签，HTML中的脚本必须位于 <code>&lt;script&gt;</code> 与 <code>&lt;/script&gt;</code> 标签之间。脚本可被放置在 HTML 页面的 <code>&lt;body&gt;</code> 和 <code>&lt;head&gt;</code> 部分中。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>text/javascript</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-外部引入" tabindex="-1"><a class="header-anchor" href="#_2-外部引入" aria-hidden="true">#</a> 2. 外部引入</h4><p>使用<code>&lt;script src = &quot;JS文件路径&quot;&gt;&lt;/script&gt;</code>，在有src属性的script标签中,不能写JS代码。</p><p>外部 JavaScript 文件的文件扩展名是 .js。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>src属性: 表示包含要执行的代码的外部文件</li><li>type属性: <code>text/JavaScript</code>(可省略)，建议省略，写错了不解析。</li></ul><h4 id="_3-元素的事件属性" tabindex="-1"><a class="header-anchor" href="#_3-元素的事件属性" aria-hidden="true">#</a> 3. 元素的事件属性</h4><p>html标签内直接书写。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-a标签的href属性" tabindex="-1"><a class="header-anchor" href="#_4-a标签的href属性" aria-hidden="true">#</a> 4. a标签的href属性</h4><p>点击A标签时触发JS，a标签的href属性，由链接换成javascript代码。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 点击会暴露信息,不建议使用 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:alert(&#39;hello&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span> 

改为:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>javascript:void(0)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">onlick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert(&#39;hello&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-发展历史" tabindex="-1"><a class="header-anchor" href="#iii-发展历史" aria-hidden="true">#</a> Ⅲ. 发展历史</h2><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>1996年，Netscape网景公司，第一家上市的互联网公司，工程师：布兰登*艾奇，研发一个技术解决了上面再浏览器发出请求，验证用户名是否存在，取名javascript，很成功，几乎无人不知，无人不晓。</p><p>后来微软也想浏览器有市场，着手开发浏览器，参考Netscape浏览器实现了很多效果，将IE浏览器默认安装到操作系统中，这样，网景公司被彻底打败了，网景公司被打败之后，把Netscape浏览器开源之后，成立Filezilla组织：Firefox。</p><h4 id="_2-现在的主流浏览器" tabindex="-1"><a class="header-anchor" href="#_2-现在的主流浏览器" aria-hidden="true">#</a> 2. 现在的主流浏览器</h4><ul><li>微软：IE 、 Eage</li><li>谷歌：Chrome</li><li>火狐：Firefox</li><li>苹果：Safari</li><li>欧朋：Opera</li></ul><h4 id="_3-ecma标准" tabindex="-1"><a class="header-anchor" href="#_3-ecma标准" aria-hidden="true">#</a> 3. ECMA标准</h4><ul><li>JavaScript标准：ECMA [ ek-ma-script ]（Europe Computer Manufacure Association ）</li><li>ECMAscript: 欧洲计算机制造商联盟script脚本语言标准</li><li>目前主要使用的是ES5，最新版是ES6</li></ul><h4 id="_4-js的组成" tabindex="-1"><a class="header-anchor" href="#_4-js的组成" aria-hidden="true">#</a> 4. JS的组成</h4><p>一个完整的JS由三个部分组成：</p><figure><img src="`+e+'" alt="1-1-1" tabindex="0" loading="lazy"><figcaption>1-1-1</figcaption></figure>',35),c=[i];function l(o,r){return s(),n("div",null,c)}const d=a(p,[["render",l],["__file","1-1.介绍.html.vue"]]);export{d as default};
