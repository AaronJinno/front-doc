import{_ as n,o as s,c as a,e as t}from"./app-68218236.js";const e={},p=t(`<h4 id="_1-什么是钩子" tabindex="-1"><a class="header-anchor" href="#_1-什么是钩子" aria-hidden="true">#</a> 1. 什么是钩子</h4><ul><li>钩子，类似于回调函数，一般用来处理事件“回调”。</li><li>钩子函数是好比找了个代理，监视事件是否发生，如果发生了这个代理就执行你的事件处理方法；在这个过程中，代理就是钩子函数；</li><li>钩子函数一般是又事件发生者提供的。直白了说，它留下一个钩子，这个钩子的作用就是钩住你的回调方法。</li><li>相当于组件和插件中作者预设了一些函数，这些函数是使用者作为配置参数传入的。使用者传入的同名函数就会作为对应的回调函数放入组件中执行，就像钩子一样挂上去。</li></ul><h4 id="_2-、钩子与回调函数的区别" tabindex="-1"><a class="header-anchor" href="#_2-、钩子与回调函数的区别" aria-hidden="true">#</a> 2. 、钩子与回调函数的区别</h4><ul><li>相同点: 钩子函数与回调函数都是一种事件函数,处理事件的一个普通函数。在某种意义上，回调函数做的处理过程跟钩子函数中要调用调方法一样。</li><li>不同点: 钩子函数是一个有特殊名称的函数(事件函数).特殊名称体现在函数名上,也就是有固定格式,固定函数名的一个普通函数,这是人为规定的.别人有个钩子函数你想在执行到此时做点什么事,你肯定要写人家规定的函数名,</li></ul><p>本质上，钩子函数是提前定义好了名字，只是没有功能，用的时候，要使用人家的函数名，自己再定义规则。而回调函数是自己控制的。</p><h4 id="_3-示例" tabindex="-1"><a class="header-anchor" href="#_3-示例" aria-hidden="true">#</a> 3. 示例</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mes<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>show<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
var btn = document.<span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;mes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token selector">var showMes = function()</span> <span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;钩子函数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

btn.<span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> showMes<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),l=[p];function c(i,o){return s(),a("div",null,l)}const d=n(e,[["render",c],["__file","8-2.钩子.html.vue"]]);export{d as default};
